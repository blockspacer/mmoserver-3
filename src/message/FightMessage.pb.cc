// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FightMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FightMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CS_CAST_SKILL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_CAST_SKILL_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_CAST_SKILL_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_CAST_SKILL_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_FightMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_FightMessage_2eproto() {
  protobuf_AddDesc_FightMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "FightMessage.proto");
  GOOGLE_CHECK(file != NULL);
  CS_CAST_SKILL_descriptor_ = file->message_type(0);
  static const int CS_CAST_SKILL_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CAST_SKILL, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CAST_SKILL, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CAST_SKILL, target_entity_id_),
  };
  CS_CAST_SKILL_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CS_CAST_SKILL_descriptor_,
      CS_CAST_SKILL::internal_default_instance(),
      CS_CAST_SKILL_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CAST_SKILL, _has_bits_),
      -1,
      -1,
      sizeof(CS_CAST_SKILL),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CAST_SKILL, _internal_metadata_));
  SC_CAST_SKILL_descriptor_ = file->message_type(1);
  static const int SC_CAST_SKILL_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CAST_SKILL, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CAST_SKILL, animation_name_),
  };
  SC_CAST_SKILL_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SC_CAST_SKILL_descriptor_,
      SC_CAST_SKILL::internal_default_instance(),
      SC_CAST_SKILL_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CAST_SKILL, _has_bits_),
      -1,
      -1,
      sizeof(SC_CAST_SKILL),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CAST_SKILL, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_FightMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CS_CAST_SKILL_descriptor_, CS_CAST_SKILL::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SC_CAST_SKILL_descriptor_, SC_CAST_SKILL::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_FightMessage_2eproto() {
  CS_CAST_SKILL_default_instance_.Shutdown();
  delete CS_CAST_SKILL_reflection_;
  SC_CAST_SKILL_default_instance_.Shutdown();
  delete SC_CAST_SKILL_reflection_;
}

void protobuf_InitDefaults_FightMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  CS_CAST_SKILL_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SC_CAST_SKILL_default_instance_.DefaultConstruct();
  CS_CAST_SKILL_default_instance_.get_mutable()->InitAsDefaultInstance();
  SC_CAST_SKILL_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_FightMessage_2eproto_once_);
void protobuf_InitDefaults_FightMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_FightMessage_2eproto_once_,
                 &protobuf_InitDefaults_FightMessage_2eproto_impl);
}
void protobuf_AddDesc_FightMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_FightMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022FightMessage.proto\"L\n\rCS_CAST_SKILL\022\020\n"
    "\010entityid\030\001 \002(\014\022\017\n\007slot_id\030\002 \002(\005\022\030\n\020targ"
    "et_entity_id\030\003 \001(\014\"9\n\rSC_CAST_SKILL\022\020\n\010e"
    "ntityid\030\001 \002(\014\022\026\n\016animation_name\030\002 \002(\t", 157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FightMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_FightMessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_FightMessage_2eproto_once_);
void protobuf_AddDesc_FightMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_FightMessage_2eproto_once_,
                 &protobuf_AddDesc_FightMessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_FightMessage_2eproto {
  StaticDescriptorInitializer_FightMessage_2eproto() {
    protobuf_AddDesc_FightMessage_2eproto();
  }
} static_descriptor_initializer_FightMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_CAST_SKILL::kEntityidFieldNumber;
const int CS_CAST_SKILL::kSlotIdFieldNumber;
const int CS_CAST_SKILL::kTargetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_CAST_SKILL::CS_CAST_SKILL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_FightMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_CAST_SKILL)
}

void CS_CAST_SKILL::InitAsDefaultInstance() {
}

CS_CAST_SKILL::CS_CAST_SKILL(const CS_CAST_SKILL& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CS_CAST_SKILL)
}

void CS_CAST_SKILL::SharedCtor() {
  _cached_size_ = 0;
  entityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_entity_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slot_id_ = 0;
}

CS_CAST_SKILL::~CS_CAST_SKILL() {
  // @@protoc_insertion_point(destructor:CS_CAST_SKILL)
  SharedDtor();
}

void CS_CAST_SKILL::SharedDtor() {
  entityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_entity_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_CAST_SKILL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_CAST_SKILL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_CAST_SKILL_descriptor_;
}

const CS_CAST_SKILL& CS_CAST_SKILL::default_instance() {
  protobuf_InitDefaults_FightMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CS_CAST_SKILL> CS_CAST_SKILL_default_instance_;

CS_CAST_SKILL* CS_CAST_SKILL::New(::google::protobuf::Arena* arena) const {
  CS_CAST_SKILL* n = new CS_CAST_SKILL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_CAST_SKILL::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_CAST_SKILL)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_entityid()) {
      entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    slot_id_ = 0;
    if (has_target_entity_id()) {
      target_entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CS_CAST_SKILL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_CAST_SKILL)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes entityid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entityid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_slot_id;
        break;
      }

      // required int32 slot_id = 2;
      case 2: {
        if (tag == 16) {
         parse_slot_id:
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_target_entity_id;
        break;
      }

      // optional bytes target_entity_id = 3;
      case 3: {
        if (tag == 26) {
         parse_target_entity_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_target_entity_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_CAST_SKILL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_CAST_SKILL)
  return false;
#undef DO_
}

void CS_CAST_SKILL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_CAST_SKILL)
  // required bytes entityid = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->entityid(), output);
  }

  // required int32 slot_id = 2;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot_id(), output);
  }

  // optional bytes target_entity_id = 3;
  if (has_target_entity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->target_entity_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_CAST_SKILL)
}

::google::protobuf::uint8* CS_CAST_SKILL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CS_CAST_SKILL)
  // required bytes entityid = 1;
  if (has_entityid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->entityid(), target);
  }

  // required int32 slot_id = 2;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot_id(), target);
  }

  // optional bytes target_entity_id = 3;
  if (has_target_entity_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->target_entity_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_CAST_SKILL)
  return target;
}

size_t CS_CAST_SKILL::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CS_CAST_SKILL)
  size_t total_size = 0;

  if (has_entityid()) {
    // required bytes entityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entityid());
  }

  if (has_slot_id()) {
    // required int32 slot_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_id());
  }

  return total_size;
}
size_t CS_CAST_SKILL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_CAST_SKILL)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes entityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entityid());

    // required int32 slot_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes target_entity_id = 3;
  if (has_target_entity_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->target_entity_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_CAST_SKILL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_CAST_SKILL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CS_CAST_SKILL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_CAST_SKILL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_CAST_SKILL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_CAST_SKILL)
    UnsafeMergeFrom(*source);
  }
}

void CS_CAST_SKILL::MergeFrom(const CS_CAST_SKILL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_CAST_SKILL)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CS_CAST_SKILL::UnsafeMergeFrom(const CS_CAST_SKILL& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_has_entityid();
      entityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entityid_);
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
    if (from.has_target_entity_id()) {
      set_has_target_entity_id();
      target_entity_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_entity_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CS_CAST_SKILL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_CAST_SKILL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_CAST_SKILL::CopyFrom(const CS_CAST_SKILL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_CAST_SKILL)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CS_CAST_SKILL::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CS_CAST_SKILL::Swap(CS_CAST_SKILL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_CAST_SKILL::InternalSwap(CS_CAST_SKILL* other) {
  entityid_.Swap(&other->entityid_);
  std::swap(slot_id_, other->slot_id_);
  target_entity_id_.Swap(&other->target_entity_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_CAST_SKILL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_CAST_SKILL_descriptor_;
  metadata.reflection = CS_CAST_SKILL_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_CAST_SKILL

// required bytes entityid = 1;
bool CS_CAST_SKILL::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_CAST_SKILL::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_CAST_SKILL::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_CAST_SKILL::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
const ::std::string& CS_CAST_SKILL::entityid() const {
  // @@protoc_insertion_point(field_get:CS_CAST_SKILL.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_CAST_SKILL::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_CAST_SKILL.entityid)
}
void CS_CAST_SKILL::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_CAST_SKILL.entityid)
}
void CS_CAST_SKILL::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_CAST_SKILL.entityid)
}
::std::string* CS_CAST_SKILL::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:CS_CAST_SKILL.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_CAST_SKILL::release_entityid() {
  // @@protoc_insertion_point(field_release:CS_CAST_SKILL.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_CAST_SKILL::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:CS_CAST_SKILL.entityid)
}

// required int32 slot_id = 2;
bool CS_CAST_SKILL::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_CAST_SKILL::set_has_slot_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_CAST_SKILL::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_CAST_SKILL::clear_slot_id() {
  slot_id_ = 0;
  clear_has_slot_id();
}
::google::protobuf::int32 CS_CAST_SKILL::slot_id() const {
  // @@protoc_insertion_point(field_get:CS_CAST_SKILL.slot_id)
  return slot_id_;
}
void CS_CAST_SKILL::set_slot_id(::google::protobuf::int32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:CS_CAST_SKILL.slot_id)
}

// optional bytes target_entity_id = 3;
bool CS_CAST_SKILL::has_target_entity_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CS_CAST_SKILL::set_has_target_entity_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CS_CAST_SKILL::clear_has_target_entity_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CS_CAST_SKILL::clear_target_entity_id() {
  target_entity_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_entity_id();
}
const ::std::string& CS_CAST_SKILL::target_entity_id() const {
  // @@protoc_insertion_point(field_get:CS_CAST_SKILL.target_entity_id)
  return target_entity_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_CAST_SKILL::set_target_entity_id(const ::std::string& value) {
  set_has_target_entity_id();
  target_entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_CAST_SKILL.target_entity_id)
}
void CS_CAST_SKILL::set_target_entity_id(const char* value) {
  set_has_target_entity_id();
  target_entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_CAST_SKILL.target_entity_id)
}
void CS_CAST_SKILL::set_target_entity_id(const void* value, size_t size) {
  set_has_target_entity_id();
  target_entity_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_CAST_SKILL.target_entity_id)
}
::std::string* CS_CAST_SKILL::mutable_target_entity_id() {
  set_has_target_entity_id();
  // @@protoc_insertion_point(field_mutable:CS_CAST_SKILL.target_entity_id)
  return target_entity_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_CAST_SKILL::release_target_entity_id() {
  // @@protoc_insertion_point(field_release:CS_CAST_SKILL.target_entity_id)
  clear_has_target_entity_id();
  return target_entity_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_CAST_SKILL::set_allocated_target_entity_id(::std::string* target_entity_id) {
  if (target_entity_id != NULL) {
    set_has_target_entity_id();
  } else {
    clear_has_target_entity_id();
  }
  target_entity_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_entity_id);
  // @@protoc_insertion_point(field_set_allocated:CS_CAST_SKILL.target_entity_id)
}

inline const CS_CAST_SKILL* CS_CAST_SKILL::internal_default_instance() {
  return &CS_CAST_SKILL_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_CAST_SKILL::kEntityidFieldNumber;
const int SC_CAST_SKILL::kAnimationNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_CAST_SKILL::SC_CAST_SKILL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_FightMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_CAST_SKILL)
}

void SC_CAST_SKILL::InitAsDefaultInstance() {
}

SC_CAST_SKILL::SC_CAST_SKILL(const SC_CAST_SKILL& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SC_CAST_SKILL)
}

void SC_CAST_SKILL::SharedCtor() {
  _cached_size_ = 0;
  entityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  animation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SC_CAST_SKILL::~SC_CAST_SKILL() {
  // @@protoc_insertion_point(destructor:SC_CAST_SKILL)
  SharedDtor();
}

void SC_CAST_SKILL::SharedDtor() {
  entityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  animation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_CAST_SKILL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_CAST_SKILL::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_CAST_SKILL_descriptor_;
}

const SC_CAST_SKILL& SC_CAST_SKILL::default_instance() {
  protobuf_InitDefaults_FightMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SC_CAST_SKILL> SC_CAST_SKILL_default_instance_;

SC_CAST_SKILL* SC_CAST_SKILL::New(::google::protobuf::Arena* arena) const {
  SC_CAST_SKILL* n = new SC_CAST_SKILL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_CAST_SKILL::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_CAST_SKILL)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_entityid()) {
      entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_animation_name()) {
      animation_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SC_CAST_SKILL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_CAST_SKILL)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes entityid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entityid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_animation_name;
        break;
      }

      // required string animation_name = 2;
      case 2: {
        if (tag == 18) {
         parse_animation_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->animation_name().data(), this->animation_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_CAST_SKILL.animation_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_CAST_SKILL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_CAST_SKILL)
  return false;
#undef DO_
}

void SC_CAST_SKILL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_CAST_SKILL)
  // required bytes entityid = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->entityid(), output);
  }

  // required string animation_name = 2;
  if (has_animation_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animation_name().data(), this->animation_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_CAST_SKILL.animation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->animation_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_CAST_SKILL)
}

::google::protobuf::uint8* SC_CAST_SKILL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SC_CAST_SKILL)
  // required bytes entityid = 1;
  if (has_entityid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->entityid(), target);
  }

  // required string animation_name = 2;
  if (has_animation_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->animation_name().data(), this->animation_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_CAST_SKILL.animation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->animation_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_CAST_SKILL)
  return target;
}

size_t SC_CAST_SKILL::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SC_CAST_SKILL)
  size_t total_size = 0;

  if (has_entityid()) {
    // required bytes entityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entityid());
  }

  if (has_animation_name()) {
    // required string animation_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->animation_name());
  }

  return total_size;
}
size_t SC_CAST_SKILL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_CAST_SKILL)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes entityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entityid());

    // required string animation_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->animation_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_CAST_SKILL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_CAST_SKILL)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SC_CAST_SKILL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_CAST_SKILL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_CAST_SKILL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_CAST_SKILL)
    UnsafeMergeFrom(*source);
  }
}

void SC_CAST_SKILL::MergeFrom(const SC_CAST_SKILL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_CAST_SKILL)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SC_CAST_SKILL::UnsafeMergeFrom(const SC_CAST_SKILL& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_has_entityid();
      entityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entityid_);
    }
    if (from.has_animation_name()) {
      set_has_animation_name();
      animation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.animation_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SC_CAST_SKILL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_CAST_SKILL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_CAST_SKILL::CopyFrom(const SC_CAST_SKILL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_CAST_SKILL)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SC_CAST_SKILL::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SC_CAST_SKILL::Swap(SC_CAST_SKILL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_CAST_SKILL::InternalSwap(SC_CAST_SKILL* other) {
  entityid_.Swap(&other->entityid_);
  animation_name_.Swap(&other->animation_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_CAST_SKILL::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_CAST_SKILL_descriptor_;
  metadata.reflection = SC_CAST_SKILL_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_CAST_SKILL

// required bytes entityid = 1;
bool SC_CAST_SKILL::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_CAST_SKILL::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_CAST_SKILL::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_CAST_SKILL::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
const ::std::string& SC_CAST_SKILL::entityid() const {
  // @@protoc_insertion_point(field_get:SC_CAST_SKILL.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_CAST_SKILL::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_CAST_SKILL.entityid)
}
void SC_CAST_SKILL::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_CAST_SKILL.entityid)
}
void SC_CAST_SKILL::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_CAST_SKILL.entityid)
}
::std::string* SC_CAST_SKILL::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_CAST_SKILL.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_CAST_SKILL::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_CAST_SKILL.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_CAST_SKILL::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_CAST_SKILL.entityid)
}

// required string animation_name = 2;
bool SC_CAST_SKILL::has_animation_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_CAST_SKILL::set_has_animation_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_CAST_SKILL::clear_has_animation_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_CAST_SKILL::clear_animation_name() {
  animation_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_animation_name();
}
const ::std::string& SC_CAST_SKILL::animation_name() const {
  // @@protoc_insertion_point(field_get:SC_CAST_SKILL.animation_name)
  return animation_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_CAST_SKILL::set_animation_name(const ::std::string& value) {
  set_has_animation_name();
  animation_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_CAST_SKILL.animation_name)
}
void SC_CAST_SKILL::set_animation_name(const char* value) {
  set_has_animation_name();
  animation_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_CAST_SKILL.animation_name)
}
void SC_CAST_SKILL::set_animation_name(const char* value, size_t size) {
  set_has_animation_name();
  animation_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_CAST_SKILL.animation_name)
}
::std::string* SC_CAST_SKILL::mutable_animation_name() {
  set_has_animation_name();
  // @@protoc_insertion_point(field_mutable:SC_CAST_SKILL.animation_name)
  return animation_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_CAST_SKILL::release_animation_name() {
  // @@protoc_insertion_point(field_release:SC_CAST_SKILL.animation_name)
  clear_has_animation_name();
  return animation_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_CAST_SKILL::set_allocated_animation_name(::std::string* animation_name) {
  if (animation_name != NULL) {
    set_has_animation_name();
  } else {
    clear_has_animation_name();
  }
  animation_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), animation_name);
  // @@protoc_insertion_point(field_set_allocated:SC_CAST_SKILL.animation_name)
}

inline const SC_CAST_SKILL* SC_CAST_SKILL::internal_default_instance() {
  return &SC_CAST_SKILL_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
