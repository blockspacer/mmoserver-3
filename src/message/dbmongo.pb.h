// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbmongo.proto

#ifndef PROTOBUF_dbmongo_2eproto__INCLUDED
#define PROTOBUF_dbmongo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_dbmongo_2eproto();
void protobuf_InitDefaults_dbmongo_2eproto();
void protobuf_AssignDesc_dbmongo_2eproto();
void protobuf_ShutdownFile_dbmongo_2eproto();

class CallDBRequest;
class CallDBResponse;
class CountDocReply;
class CountDocRequest;
class CreateCollectionReply;
class CreateCollectionRequest;
class DbStatusMessage;
class DeleteDocReply;
class DeleteDocRequest;
class FindAndModifyDocReply;
class FindAndModifyDocRequest;
class FindDocReply;
class FindDocRequest;
class InsertDocReply;
class InsertDocRequest;
class OperIndexReply;
class OperIndexRequest;
class RunProcedureReply;
class RunProcedureRequest;
class UpdateDocReply;
class UpdateDocRequest;

enum OperIndexRequest_OperType {
  OperIndexRequest_OperType_ENSURE = 0,
  OperIndexRequest_OperType_DROP = 1,
  OperIndexRequest_OperType_RESET = 2
};
bool OperIndexRequest_OperType_IsValid(int value);
const OperIndexRequest_OperType OperIndexRequest_OperType_OperType_MIN = OperIndexRequest_OperType_ENSURE;
const OperIndexRequest_OperType OperIndexRequest_OperType_OperType_MAX = OperIndexRequest_OperType_RESET;
const int OperIndexRequest_OperType_OperType_ARRAYSIZE = OperIndexRequest_OperType_OperType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperIndexRequest_OperType_descriptor();
inline const ::std::string& OperIndexRequest_OperType_Name(OperIndexRequest_OperType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperIndexRequest_OperType_descriptor(), value);
}
inline bool OperIndexRequest_OperType_Parse(
    const ::std::string& name, OperIndexRequest_OperType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperIndexRequest_OperType>(
    OperIndexRequest_OperType_descriptor(), name, value);
}
enum DbStatusMessage_DbStatus {
  DbStatusMessage_DbStatus_CONNECTED = 0,
  DbStatusMessage_DbStatus_CONNECTION_FAILED = 1,
  DbStatusMessage_DbStatus_BUSY = 2
};
bool DbStatusMessage_DbStatus_IsValid(int value);
const DbStatusMessage_DbStatus DbStatusMessage_DbStatus_DbStatus_MIN = DbStatusMessage_DbStatus_CONNECTED;
const DbStatusMessage_DbStatus DbStatusMessage_DbStatus_DbStatus_MAX = DbStatusMessage_DbStatus_BUSY;
const int DbStatusMessage_DbStatus_DbStatus_ARRAYSIZE = DbStatusMessage_DbStatus_DbStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* DbStatusMessage_DbStatus_descriptor();
inline const ::std::string& DbStatusMessage_DbStatus_Name(DbStatusMessage_DbStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    DbStatusMessage_DbStatus_descriptor(), value);
}
inline bool DbStatusMessage_DbStatus_Parse(
    const ::std::string& name, DbStatusMessage_DbStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DbStatusMessage_DbStatus>(
    DbStatusMessage_DbStatus_descriptor(), name, value);
}
enum CreateCollectionReply_CrateCollectionStatus {
  CreateCollectionReply_CrateCollectionStatus_CREATE_SUCC = 0,
  CreateCollectionReply_CrateCollectionStatus_ALREADY_EXISTED = 1,
  CreateCollectionReply_CrateCollectionStatus_CREATE_FAILED = 2
};
bool CreateCollectionReply_CrateCollectionStatus_IsValid(int value);
const CreateCollectionReply_CrateCollectionStatus CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_MIN = CreateCollectionReply_CrateCollectionStatus_CREATE_SUCC;
const CreateCollectionReply_CrateCollectionStatus CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_MAX = CreateCollectionReply_CrateCollectionStatus_CREATE_FAILED;
const int CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_ARRAYSIZE = CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateCollectionReply_CrateCollectionStatus_descriptor();
inline const ::std::string& CreateCollectionReply_CrateCollectionStatus_Name(CreateCollectionReply_CrateCollectionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateCollectionReply_CrateCollectionStatus_descriptor(), value);
}
inline bool CreateCollectionReply_CrateCollectionStatus_Parse(
    const ::std::string& name, CreateCollectionReply_CrateCollectionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateCollectionReply_CrateCollectionStatus>(
    CreateCollectionReply_CrateCollectionStatus_descriptor(), name, value);
}
// ===================================================================

class FindDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindDocRequest) */ {
 public:
  FindDocRequest();
  virtual ~FindDocRequest();

  FindDocRequest(const FindDocRequest& from);

  inline FindDocRequest& operator=(const FindDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindDocRequest& default_instance();

  static const FindDocRequest* internal_default_instance();

  void Swap(FindDocRequest* other);

  // implements Message ----------------------------------------------

  inline FindDocRequest* New() const { return New(NULL); }

  FindDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindDocRequest& from);
  void MergeFrom(const FindDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FindDocRequest* other);
  void UnsafeMergeFrom(const FindDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required bytes query = 4;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional bytes fields = 5;
  bool has_fields() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  const ::std::string& fields() const;
  void set_fields(const ::std::string& value);
  void set_fields(const char* value);
  void set_fields(const void* value, size_t size);
  ::std::string* mutable_fields();
  ::std::string* release_fields();
  void set_allocated_fields(::std::string* fields);

  // optional int32 limit = 6 [default = 1];
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 6;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // optional bool seqflag = 7 [default = false];
  bool has_seqflag() const;
  void clear_seqflag();
  static const int kSeqflagFieldNumber = 7;
  bool seqflag() const;
  void set_seqflag(bool value);

  // optional bytes seq_key = 8;
  bool has_seq_key() const;
  void clear_seq_key();
  static const int kSeqKeyFieldNumber = 8;
  const ::std::string& seq_key() const;
  void set_seq_key(const ::std::string& value);
  void set_seq_key(const char* value);
  void set_seq_key(const void* value, size_t size);
  ::std::string* mutable_seq_key();
  ::std::string* release_seq_key();
  void set_allocated_seq_key(::std::string* seq_key);

  // optional bytes sort = 9;
  bool has_sort() const;
  void clear_sort();
  static const int kSortFieldNumber = 9;
  const ::std::string& sort() const;
  void set_sort(const ::std::string& value);
  void set_sort(const char* value);
  void set_sort(const void* value, size_t size);
  ::std::string* mutable_sort();
  ::std::string* release_sort();
  void set_allocated_sort(::std::string* sort);

  // optional int32 read_pref = 10;
  bool has_read_pref() const;
  void clear_read_pref();
  static const int kReadPrefFieldNumber = 10;
  ::google::protobuf::int32 read_pref() const;
  void set_read_pref(::google::protobuf::int32 value);

  // optional bytes hint = 11;
  bool has_hint() const;
  void clear_hint();
  static const int kHintFieldNumber = 11;
  const ::std::string& hint() const;
  void set_hint(const ::std::string& value);
  void set_hint(const char* value);
  void set_hint(const void* value, size_t size);
  ::std::string* mutable_hint();
  ::std::string* release_hint();
  void set_allocated_hint(::std::string* hint);

  // optional bytes skip = 12;
  bool has_skip() const;
  void clear_skip();
  static const int kSkipFieldNumber = 12;
  const ::std::string& skip() const;
  void set_skip(const ::std::string& value);
  void set_skip(const char* value);
  void set_skip(const void* value, size_t size);
  ::std::string* mutable_skip();
  ::std::string* release_skip();
  void set_allocated_skip(::std::string* skip);

  // @@protoc_insertion_point(class_scope:FindDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_fields();
  inline void clear_has_fields();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_seqflag();
  inline void clear_has_seqflag();
  inline void set_has_seq_key();
  inline void clear_has_seq_key();
  inline void set_has_sort();
  inline void clear_has_sort();
  inline void set_has_read_pref();
  inline void clear_has_read_pref();
  inline void set_has_hint();
  inline void clear_has_hint();
  inline void set_has_skip();
  inline void clear_has_skip();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr fields_;
  ::google::protobuf::internal::ArenaStringPtr seq_key_;
  ::google::protobuf::internal::ArenaStringPtr sort_;
  ::google::protobuf::internal::ArenaStringPtr hint_;
  ::google::protobuf::internal::ArenaStringPtr skip_;
  bool seqflag_;
  ::google::protobuf::int32 read_pref_;
  ::google::protobuf::int32 callback_id_;
  ::google::protobuf::int32 limit_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FindDocRequest> FindDocRequest_default_instance_;

// -------------------------------------------------------------------

class CountDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CountDocRequest) */ {
 public:
  CountDocRequest();
  virtual ~CountDocRequest();

  CountDocRequest(const CountDocRequest& from);

  inline CountDocRequest& operator=(const CountDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CountDocRequest& default_instance();

  static const CountDocRequest* internal_default_instance();

  void Swap(CountDocRequest* other);

  // implements Message ----------------------------------------------

  inline CountDocRequest* New() const { return New(NULL); }

  CountDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CountDocRequest& from);
  void MergeFrom(const CountDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CountDocRequest* other);
  void UnsafeMergeFrom(const CountDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // optional bytes query = 4;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:CountDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_query();
  inline void clear_has_query();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CountDocRequest> CountDocRequest_default_instance_;

// -------------------------------------------------------------------

class UpdateDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateDocRequest) */ {
 public:
  UpdateDocRequest();
  virtual ~UpdateDocRequest();

  UpdateDocRequest(const UpdateDocRequest& from);

  inline UpdateDocRequest& operator=(const UpdateDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDocRequest& default_instance();

  static const UpdateDocRequest* internal_default_instance();

  void Swap(UpdateDocRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateDocRequest* New() const { return New(NULL); }

  UpdateDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDocRequest& from);
  void MergeFrom(const UpdateDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateDocRequest* other);
  void UnsafeMergeFrom(const UpdateDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required bytes query = 4;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // required bytes fields = 5;
  bool has_fields() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  const ::std::string& fields() const;
  void set_fields(const ::std::string& value);
  void set_fields(const char* value);
  void set_fields(const void* value, size_t size);
  ::std::string* mutable_fields();
  ::std::string* release_fields();
  void set_allocated_fields(::std::string* fields);

  // optional bool upsert = 6 [default = false];
  bool has_upsert() const;
  void clear_upsert();
  static const int kUpsertFieldNumber = 6;
  bool upsert() const;
  void set_upsert(bool value);

  // optional bool multi = 7 [default = false];
  bool has_multi() const;
  void clear_multi();
  static const int kMultiFieldNumber = 7;
  bool multi() const;
  void set_multi(bool value);

  // optional bool seqflag = 8 [default = false];
  bool has_seqflag() const;
  void clear_seqflag();
  static const int kSeqflagFieldNumber = 8;
  bool seqflag() const;
  void set_seqflag(bool value);

  // optional bytes seq_key = 9;
  bool has_seq_key() const;
  void clear_seq_key();
  static const int kSeqKeyFieldNumber = 9;
  const ::std::string& seq_key() const;
  void set_seq_key(const ::std::string& value);
  void set_seq_key(const char* value);
  void set_seq_key(const void* value, size_t size);
  ::std::string* mutable_seq_key();
  ::std::string* release_seq_key();
  void set_allocated_seq_key(::std::string* seq_key);

  // @@protoc_insertion_point(class_scope:UpdateDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_fields();
  inline void clear_has_fields();
  inline void set_has_upsert();
  inline void clear_has_upsert();
  inline void set_has_multi();
  inline void clear_has_multi();
  inline void set_has_seqflag();
  inline void clear_has_seqflag();
  inline void set_has_seq_key();
  inline void clear_has_seq_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr fields_;
  ::google::protobuf::internal::ArenaStringPtr seq_key_;
  bool upsert_;
  bool multi_;
  bool seqflag_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateDocRequest> UpdateDocRequest_default_instance_;

// -------------------------------------------------------------------

class InsertDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InsertDocRequest) */ {
 public:
  InsertDocRequest();
  virtual ~InsertDocRequest();

  InsertDocRequest(const InsertDocRequest& from);

  inline InsertDocRequest& operator=(const InsertDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertDocRequest& default_instance();

  static const InsertDocRequest* internal_default_instance();

  void Swap(InsertDocRequest* other);

  // implements Message ----------------------------------------------

  inline InsertDocRequest* New() const { return New(NULL); }

  InsertDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertDocRequest& from);
  void MergeFrom(const InsertDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertDocRequest* other);
  void UnsafeMergeFrom(const InsertDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required bytes doc = 4;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 4;
  const ::std::string& doc() const;
  void set_doc(const ::std::string& value);
  void set_doc(const char* value);
  void set_doc(const void* value, size_t size);
  ::std::string* mutable_doc();
  ::std::string* release_doc();
  void set_allocated_doc(::std::string* doc);

  // optional bool seqflag = 5 [default = false];
  bool has_seqflag() const;
  void clear_seqflag();
  static const int kSeqflagFieldNumber = 5;
  bool seqflag() const;
  void set_seqflag(bool value);

  // optional bytes seq_key = 6;
  bool has_seq_key() const;
  void clear_seq_key();
  static const int kSeqKeyFieldNumber = 6;
  const ::std::string& seq_key() const;
  void set_seq_key(const ::std::string& value);
  void set_seq_key(const char* value);
  void set_seq_key(const void* value, size_t size);
  ::std::string* mutable_seq_key();
  ::std::string* release_seq_key();
  void set_allocated_seq_key(::std::string* seq_key);

  // @@protoc_insertion_point(class_scope:InsertDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_doc();
  inline void clear_has_doc();
  inline void set_has_seqflag();
  inline void clear_has_seqflag();
  inline void set_has_seq_key();
  inline void clear_has_seq_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr doc_;
  ::google::protobuf::internal::ArenaStringPtr seq_key_;
  bool seqflag_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InsertDocRequest> InsertDocRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeleteDocRequest) */ {
 public:
  DeleteDocRequest();
  virtual ~DeleteDocRequest();

  DeleteDocRequest(const DeleteDocRequest& from);

  inline DeleteDocRequest& operator=(const DeleteDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDocRequest& default_instance();

  static const DeleteDocRequest* internal_default_instance();

  void Swap(DeleteDocRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteDocRequest* New() const { return New(NULL); }

  DeleteDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteDocRequest& from);
  void MergeFrom(const DeleteDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteDocRequest* other);
  void UnsafeMergeFrom(const DeleteDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required bytes query = 4;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional bool seqflag = 5 [default = false];
  bool has_seqflag() const;
  void clear_seqflag();
  static const int kSeqflagFieldNumber = 5;
  bool seqflag() const;
  void set_seqflag(bool value);

  // optional bytes seq_key = 6;
  bool has_seq_key() const;
  void clear_seq_key();
  static const int kSeqKeyFieldNumber = 6;
  const ::std::string& seq_key() const;
  void set_seq_key(const ::std::string& value);
  void set_seq_key(const char* value);
  void set_seq_key(const void* value, size_t size);
  ::std::string* mutable_seq_key();
  ::std::string* release_seq_key();
  void set_allocated_seq_key(::std::string* seq_key);

  // @@protoc_insertion_point(class_scope:DeleteDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_seqflag();
  inline void clear_has_seqflag();
  inline void set_has_seq_key();
  inline void clear_has_seq_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr seq_key_;
  bool seqflag_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteDocRequest> DeleteDocRequest_default_instance_;

// -------------------------------------------------------------------

class FindAndModifyDocRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindAndModifyDocRequest) */ {
 public:
  FindAndModifyDocRequest();
  virtual ~FindAndModifyDocRequest();

  FindAndModifyDocRequest(const FindAndModifyDocRequest& from);

  inline FindAndModifyDocRequest& operator=(const FindAndModifyDocRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindAndModifyDocRequest& default_instance();

  static const FindAndModifyDocRequest* internal_default_instance();

  void Swap(FindAndModifyDocRequest* other);

  // implements Message ----------------------------------------------

  inline FindAndModifyDocRequest* New() const { return New(NULL); }

  FindAndModifyDocRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindAndModifyDocRequest& from);
  void MergeFrom(const FindAndModifyDocRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FindAndModifyDocRequest* other);
  void UnsafeMergeFrom(const FindAndModifyDocRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required bytes query = 4;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 4;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional bytes fields = 5;
  bool has_fields() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  const ::std::string& fields() const;
  void set_fields(const ::std::string& value);
  void set_fields(const char* value);
  void set_fields(const void* value, size_t size);
  ::std::string* mutable_fields();
  ::std::string* release_fields();
  void set_allocated_fields(::std::string* fields);

  // optional bytes update = 6;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 6;
  const ::std::string& update() const;
  void set_update(const ::std::string& value);
  void set_update(const char* value);
  void set_update(const void* value, size_t size);
  ::std::string* mutable_update();
  ::std::string* release_update();
  void set_allocated_update(::std::string* update);

  // optional bool upsert = 7 [default = false];
  bool has_upsert() const;
  void clear_upsert();
  static const int kUpsertFieldNumber = 7;
  bool upsert() const;
  void set_upsert(bool value);

  // optional bool new = 8 [default = false];
  bool has_new_() const;
  void clear_new_();
  static const int kNewFieldNumber = 8;
  bool new_() const;
  void set_new_(bool value);

  // optional bool seqflag = 9 [default = false];
  bool has_seqflag() const;
  void clear_seqflag();
  static const int kSeqflagFieldNumber = 9;
  bool seqflag() const;
  void set_seqflag(bool value);

  // optional bytes seq_key = 10;
  bool has_seq_key() const;
  void clear_seq_key();
  static const int kSeqKeyFieldNumber = 10;
  const ::std::string& seq_key() const;
  void set_seq_key(const ::std::string& value);
  void set_seq_key(const char* value);
  void set_seq_key(const void* value, size_t size);
  ::std::string* mutable_seq_key();
  ::std::string* release_seq_key();
  void set_allocated_seq_key(::std::string* seq_key);

  // optional bool remove = 11 [default = false];
  bool has_remove() const;
  void clear_remove();
  static const int kRemoveFieldNumber = 11;
  bool remove() const;
  void set_remove(bool value);

  // optional bytes sort = 12;
  bool has_sort() const;
  void clear_sort();
  static const int kSortFieldNumber = 12;
  const ::std::string& sort() const;
  void set_sort(const ::std::string& value);
  void set_sort(const char* value);
  void set_sort(const void* value, size_t size);
  ::std::string* mutable_sort();
  ::std::string* release_sort();
  void set_allocated_sort(::std::string* sort);

  // @@protoc_insertion_point(class_scope:FindAndModifyDocRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_fields();
  inline void clear_has_fields();
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_upsert();
  inline void clear_has_upsert();
  inline void set_has_new_();
  inline void clear_has_new_();
  inline void set_has_seqflag();
  inline void clear_has_seqflag();
  inline void set_has_seq_key();
  inline void clear_has_seq_key();
  inline void set_has_remove();
  inline void clear_has_remove();
  inline void set_has_sort();
  inline void clear_has_sort();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr fields_;
  ::google::protobuf::internal::ArenaStringPtr update_;
  ::google::protobuf::internal::ArenaStringPtr seq_key_;
  ::google::protobuf::internal::ArenaStringPtr sort_;
  bool upsert_;
  bool new__;
  bool seqflag_;
  bool remove_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FindAndModifyDocRequest> FindAndModifyDocRequest_default_instance_;

// -------------------------------------------------------------------

class RunProcedureRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RunProcedureRequest) */ {
 public:
  RunProcedureRequest();
  virtual ~RunProcedureRequest();

  RunProcedureRequest(const RunProcedureRequest& from);

  inline RunProcedureRequest& operator=(const RunProcedureRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunProcedureRequest& default_instance();

  static const RunProcedureRequest* internal_default_instance();

  void Swap(RunProcedureRequest* other);

  // implements Message ----------------------------------------------

  inline RunProcedureRequest* New() const { return New(NULL); }

  RunProcedureRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunProcedureRequest& from);
  void MergeFrom(const RunProcedureRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunProcedureRequest* other);
  void UnsafeMergeFrom(const RunProcedureRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes proc = 4;
  bool has_proc() const;
  void clear_proc();
  static const int kProcFieldNumber = 4;
  const ::std::string& proc() const;
  void set_proc(const ::std::string& value);
  void set_proc(const char* value);
  void set_proc(const void* value, size_t size);
  ::std::string* mutable_proc();
  ::std::string* release_proc();
  void set_allocated_proc(::std::string* proc);

  // optional bytes args = 5;
  bool has_args() const;
  void clear_args();
  static const int kArgsFieldNumber = 5;
  const ::std::string& args() const;
  void set_args(const ::std::string& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  ::std::string* mutable_args();
  ::std::string* release_args();
  void set_allocated_args(::std::string* args);

  // optional bytes kwargs = 6;
  bool has_kwargs() const;
  void clear_kwargs();
  static const int kKwargsFieldNumber = 6;
  const ::std::string& kwargs() const;
  void set_kwargs(const ::std::string& value);
  void set_kwargs(const char* value);
  void set_kwargs(const void* value, size_t size);
  ::std::string* mutable_kwargs();
  ::std::string* release_kwargs();
  void set_allocated_kwargs(::std::string* kwargs);

  // @@protoc_insertion_point(class_scope:RunProcedureRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_proc();
  inline void clear_has_proc();
  inline void set_has_args();
  inline void clear_has_args();
  inline void set_has_kwargs();
  inline void clear_has_kwargs();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr proc_;
  ::google::protobuf::internal::ArenaStringPtr args_;
  ::google::protobuf::internal::ArenaStringPtr kwargs_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RunProcedureRequest> RunProcedureRequest_default_instance_;

// -------------------------------------------------------------------

class OperIndexRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OperIndexRequest) */ {
 public:
  OperIndexRequest();
  virtual ~OperIndexRequest();

  OperIndexRequest(const OperIndexRequest& from);

  inline OperIndexRequest& operator=(const OperIndexRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperIndexRequest& default_instance();

  static const OperIndexRequest* internal_default_instance();

  void Swap(OperIndexRequest* other);

  // implements Message ----------------------------------------------

  inline OperIndexRequest* New() const { return New(NULL); }

  OperIndexRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperIndexRequest& from);
  void MergeFrom(const OperIndexRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperIndexRequest* other);
  void UnsafeMergeFrom(const OperIndexRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OperIndexRequest_OperType OperType;
  static const OperType ENSURE =
    OperIndexRequest_OperType_ENSURE;
  static const OperType DROP =
    OperIndexRequest_OperType_DROP;
  static const OperType RESET =
    OperIndexRequest_OperType_RESET;
  static inline bool OperType_IsValid(int value) {
    return OperIndexRequest_OperType_IsValid(value);
  }
  static const OperType OperType_MIN =
    OperIndexRequest_OperType_OperType_MIN;
  static const OperType OperType_MAX =
    OperIndexRequest_OperType_OperType_MAX;
  static const int OperType_ARRAYSIZE =
    OperIndexRequest_OperType_OperType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperType_descriptor() {
    return OperIndexRequest_OperType_descriptor();
  }
  static inline const ::std::string& OperType_Name(OperType value) {
    return OperIndexRequest_OperType_Name(value);
  }
  static inline bool OperType_Parse(const ::std::string& name,
      OperType* value) {
    return OperIndexRequest_OperType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 3;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 3;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // required .OperIndexRequest.OperType type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::OperIndexRequest_OperType type() const;
  void set_type(::OperIndexRequest_OperType value);

  // optional bytes query = 5;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 5;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional bytes desc = 6;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 6;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:OperIndexRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_desc();
  inline void clear_has_desc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  int type_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperIndexRequest> OperIndexRequest_default_instance_;

// -------------------------------------------------------------------

class CreateCollectionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateCollectionRequest) */ {
 public:
  CreateCollectionRequest();
  virtual ~CreateCollectionRequest();

  CreateCollectionRequest(const CreateCollectionRequest& from);

  inline CreateCollectionRequest& operator=(const CreateCollectionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCollectionRequest& default_instance();

  static const CreateCollectionRequest* internal_default_instance();

  void Swap(CreateCollectionRequest* other);

  // implements Message ----------------------------------------------

  inline CreateCollectionRequest* New() const { return New(NULL); }

  CreateCollectionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateCollectionRequest& from);
  void MergeFrom(const CreateCollectionRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateCollectionRequest* other);
  void UnsafeMergeFrom(const CreateCollectionRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes db = 2;
  bool has_db() const;
  void clear_db();
  static const int kDbFieldNumber = 2;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  void set_db(const char* value);
  void set_db(const void* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // required bytes collection = 4;
  bool has_collection() const;
  void clear_collection();
  static const int kCollectionFieldNumber = 4;
  const ::std::string& collection() const;
  void set_collection(const ::std::string& value);
  void set_collection(const char* value);
  void set_collection(const void* value, size_t size);
  ::std::string* mutable_collection();
  ::std::string* release_collection();
  void set_allocated_collection(::std::string* collection);

  // optional bytes operations = 5;
  bool has_operations() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 5;
  const ::std::string& operations() const;
  void set_operations(const ::std::string& value);
  void set_operations(const char* value);
  void set_operations(const void* value, size_t size);
  ::std::string* mutable_operations();
  ::std::string* release_operations();
  void set_allocated_operations(::std::string* operations);

  // @@protoc_insertion_point(class_scope:CreateCollectionRequest)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_db();
  inline void clear_has_db();
  inline void set_has_collection();
  inline void clear_has_collection();
  inline void set_has_operations();
  inline void clear_has_operations();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr collection_;
  ::google::protobuf::internal::ArenaStringPtr operations_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateCollectionRequest> CreateCollectionRequest_default_instance_;

// -------------------------------------------------------------------

class DbStatusMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DbStatusMessage) */ {
 public:
  DbStatusMessage();
  virtual ~DbStatusMessage();

  DbStatusMessage(const DbStatusMessage& from);

  inline DbStatusMessage& operator=(const DbStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbStatusMessage& default_instance();

  static const DbStatusMessage* internal_default_instance();

  void Swap(DbStatusMessage* other);

  // implements Message ----------------------------------------------

  inline DbStatusMessage* New() const { return New(NULL); }

  DbStatusMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbStatusMessage& from);
  void MergeFrom(const DbStatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbStatusMessage* other);
  void UnsafeMergeFrom(const DbStatusMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DbStatusMessage_DbStatus DbStatus;
  static const DbStatus CONNECTED =
    DbStatusMessage_DbStatus_CONNECTED;
  static const DbStatus CONNECTION_FAILED =
    DbStatusMessage_DbStatus_CONNECTION_FAILED;
  static const DbStatus BUSY =
    DbStatusMessage_DbStatus_BUSY;
  static inline bool DbStatus_IsValid(int value) {
    return DbStatusMessage_DbStatus_IsValid(value);
  }
  static const DbStatus DbStatus_MIN =
    DbStatusMessage_DbStatus_DbStatus_MIN;
  static const DbStatus DbStatus_MAX =
    DbStatusMessage_DbStatus_DbStatus_MAX;
  static const int DbStatus_ARRAYSIZE =
    DbStatusMessage_DbStatus_DbStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DbStatus_descriptor() {
    return DbStatusMessage_DbStatus_descriptor();
  }
  static inline const ::std::string& DbStatus_Name(DbStatus value) {
    return DbStatusMessage_DbStatus_Name(value);
  }
  static inline bool DbStatus_Parse(const ::std::string& name,
      DbStatus* value) {
    return DbStatusMessage_DbStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .DbStatusMessage.DbStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::DbStatusMessage_DbStatus status() const;
  void set_status(::DbStatusMessage_DbStatus value);

  // @@protoc_insertion_point(class_scope:DbStatusMessage)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DbStatusMessage> DbStatusMessage_default_instance_;

// -------------------------------------------------------------------

class FindDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindDocReply) */ {
 public:
  FindDocReply();
  virtual ~FindDocReply();

  FindDocReply(const FindDocReply& from);

  inline FindDocReply& operator=(const FindDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindDocReply& default_instance();

  static const FindDocReply* internal_default_instance();

  void Swap(FindDocReply* other);

  // implements Message ----------------------------------------------

  inline FindDocReply* New() const { return New(NULL); }

  FindDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindDocReply& from);
  void MergeFrom(const FindDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FindDocReply* other);
  void UnsafeMergeFrom(const FindDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // repeated bytes docs = 3;
  int docs_size() const;
  void clear_docs();
  static const int kDocsFieldNumber = 3;
  const ::std::string& docs(int index) const;
  ::std::string* mutable_docs(int index);
  void set_docs(int index, const ::std::string& value);
  void set_docs(int index, const char* value);
  void set_docs(int index, const void* value, size_t size);
  ::std::string* add_docs();
  void add_docs(const ::std::string& value);
  void add_docs(const char* value);
  void add_docs(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& docs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_docs();

  // @@protoc_insertion_point(class_scope:FindDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> docs_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FindDocReply> FindDocReply_default_instance_;

// -------------------------------------------------------------------

class CountDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CountDocReply) */ {
 public:
  CountDocReply();
  virtual ~CountDocReply();

  CountDocReply(const CountDocReply& from);

  inline CountDocReply& operator=(const CountDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CountDocReply& default_instance();

  static const CountDocReply* internal_default_instance();

  void Swap(CountDocReply* other);

  // implements Message ----------------------------------------------

  inline CountDocReply* New() const { return New(NULL); }

  CountDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CountDocReply& from);
  void MergeFrom(const CountDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CountDocReply* other);
  void UnsafeMergeFrom(const CountDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // required int32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CountDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_count();
  inline void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool status_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CountDocReply> CountDocReply_default_instance_;

// -------------------------------------------------------------------

class UpdateDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateDocReply) */ {
 public:
  UpdateDocReply();
  virtual ~UpdateDocReply();

  UpdateDocReply(const UpdateDocReply& from);

  inline UpdateDocReply& operator=(const UpdateDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDocReply& default_instance();

  static const UpdateDocReply* internal_default_instance();

  void Swap(UpdateDocReply* other);

  // implements Message ----------------------------------------------

  inline UpdateDocReply* New() const { return New(NULL); }

  UpdateDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateDocReply& from);
  void MergeFrom(const UpdateDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateDocReply* other);
  void UnsafeMergeFrom(const UpdateDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:UpdateDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateDocReply> UpdateDocReply_default_instance_;

// -------------------------------------------------------------------

class InsertDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InsertDocReply) */ {
 public:
  InsertDocReply();
  virtual ~InsertDocReply();

  InsertDocReply(const InsertDocReply& from);

  inline InsertDocReply& operator=(const InsertDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertDocReply& default_instance();

  static const InsertDocReply* internal_default_instance();

  void Swap(InsertDocReply* other);

  // implements Message ----------------------------------------------

  inline InsertDocReply* New() const { return New(NULL); }

  InsertDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertDocReply& from);
  void MergeFrom(const InsertDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertDocReply* other);
  void UnsafeMergeFrom(const InsertDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // optional bytes insert_id = 3;
  bool has_insert_id() const;
  void clear_insert_id();
  static const int kInsertIdFieldNumber = 3;
  const ::std::string& insert_id() const;
  void set_insert_id(const ::std::string& value);
  void set_insert_id(const char* value);
  void set_insert_id(const void* value, size_t size);
  ::std::string* mutable_insert_id();
  ::std::string* release_insert_id();
  void set_allocated_insert_id(::std::string* insert_id);

  // @@protoc_insertion_point(class_scope:InsertDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_insert_id();
  inline void clear_has_insert_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr insert_id_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InsertDocReply> InsertDocReply_default_instance_;

// -------------------------------------------------------------------

class DeleteDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeleteDocReply) */ {
 public:
  DeleteDocReply();
  virtual ~DeleteDocReply();

  DeleteDocReply(const DeleteDocReply& from);

  inline DeleteDocReply& operator=(const DeleteDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDocReply& default_instance();

  static const DeleteDocReply* internal_default_instance();

  void Swap(DeleteDocReply* other);

  // implements Message ----------------------------------------------

  inline DeleteDocReply* New() const { return New(NULL); }

  DeleteDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteDocReply& from);
  void MergeFrom(const DeleteDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteDocReply* other);
  void UnsafeMergeFrom(const DeleteDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:DeleteDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteDocReply> DeleteDocReply_default_instance_;

// -------------------------------------------------------------------

class FindAndModifyDocReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindAndModifyDocReply) */ {
 public:
  FindAndModifyDocReply();
  virtual ~FindAndModifyDocReply();

  FindAndModifyDocReply(const FindAndModifyDocReply& from);

  inline FindAndModifyDocReply& operator=(const FindAndModifyDocReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindAndModifyDocReply& default_instance();

  static const FindAndModifyDocReply* internal_default_instance();

  void Swap(FindAndModifyDocReply* other);

  // implements Message ----------------------------------------------

  inline FindAndModifyDocReply* New() const { return New(NULL); }

  FindAndModifyDocReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindAndModifyDocReply& from);
  void MergeFrom(const FindAndModifyDocReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FindAndModifyDocReply* other);
  void UnsafeMergeFrom(const FindAndModifyDocReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // optional bytes doc = 3;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 3;
  const ::std::string& doc() const;
  void set_doc(const ::std::string& value);
  void set_doc(const char* value);
  void set_doc(const void* value, size_t size);
  ::std::string* mutable_doc();
  ::std::string* release_doc();
  void set_allocated_doc(::std::string* doc);

  // @@protoc_insertion_point(class_scope:FindAndModifyDocReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_doc();
  inline void clear_has_doc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr doc_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FindAndModifyDocReply> FindAndModifyDocReply_default_instance_;

// -------------------------------------------------------------------

class RunProcedureReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RunProcedureReply) */ {
 public:
  RunProcedureReply();
  virtual ~RunProcedureReply();

  RunProcedureReply(const RunProcedureReply& from);

  inline RunProcedureReply& operator=(const RunProcedureReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunProcedureReply& default_instance();

  static const RunProcedureReply* internal_default_instance();

  void Swap(RunProcedureReply* other);

  // implements Message ----------------------------------------------

  inline RunProcedureReply* New() const { return New(NULL); }

  RunProcedureReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunProcedureReply& from);
  void MergeFrom(const RunProcedureReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunProcedureReply* other);
  void UnsafeMergeFrom(const RunProcedureReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // optional bytes doc = 3;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 3;
  const ::std::string& doc() const;
  void set_doc(const ::std::string& value);
  void set_doc(const char* value);
  void set_doc(const void* value, size_t size);
  ::std::string* mutable_doc();
  ::std::string* release_doc();
  void set_allocated_doc(::std::string* doc);

  // @@protoc_insertion_point(class_scope:RunProcedureReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_doc();
  inline void clear_has_doc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr doc_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RunProcedureReply> RunProcedureReply_default_instance_;

// -------------------------------------------------------------------

class OperIndexReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OperIndexReply) */ {
 public:
  OperIndexReply();
  virtual ~OperIndexReply();

  OperIndexReply(const OperIndexReply& from);

  inline OperIndexReply& operator=(const OperIndexReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperIndexReply& default_instance();

  static const OperIndexReply* internal_default_instance();

  void Swap(OperIndexReply* other);

  // implements Message ----------------------------------------------

  inline OperIndexReply* New() const { return New(NULL); }

  OperIndexReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperIndexReply& from);
  void MergeFrom(const OperIndexReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperIndexReply* other);
  void UnsafeMergeFrom(const OperIndexReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bool status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:OperIndexReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperIndexReply> OperIndexReply_default_instance_;

// -------------------------------------------------------------------

class CreateCollectionReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateCollectionReply) */ {
 public:
  CreateCollectionReply();
  virtual ~CreateCollectionReply();

  CreateCollectionReply(const CreateCollectionReply& from);

  inline CreateCollectionReply& operator=(const CreateCollectionReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCollectionReply& default_instance();

  static const CreateCollectionReply* internal_default_instance();

  void Swap(CreateCollectionReply* other);

  // implements Message ----------------------------------------------

  inline CreateCollectionReply* New() const { return New(NULL); }

  CreateCollectionReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateCollectionReply& from);
  void MergeFrom(const CreateCollectionReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateCollectionReply* other);
  void UnsafeMergeFrom(const CreateCollectionReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateCollectionReply_CrateCollectionStatus CrateCollectionStatus;
  static const CrateCollectionStatus CREATE_SUCC =
    CreateCollectionReply_CrateCollectionStatus_CREATE_SUCC;
  static const CrateCollectionStatus ALREADY_EXISTED =
    CreateCollectionReply_CrateCollectionStatus_ALREADY_EXISTED;
  static const CrateCollectionStatus CREATE_FAILED =
    CreateCollectionReply_CrateCollectionStatus_CREATE_FAILED;
  static inline bool CrateCollectionStatus_IsValid(int value) {
    return CreateCollectionReply_CrateCollectionStatus_IsValid(value);
  }
  static const CrateCollectionStatus CrateCollectionStatus_MIN =
    CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_MIN;
  static const CrateCollectionStatus CrateCollectionStatus_MAX =
    CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_MAX;
  static const int CrateCollectionStatus_ARRAYSIZE =
    CreateCollectionReply_CrateCollectionStatus_CrateCollectionStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CrateCollectionStatus_descriptor() {
    return CreateCollectionReply_CrateCollectionStatus_descriptor();
  }
  static inline const ::std::string& CrateCollectionStatus_Name(CrateCollectionStatus value) {
    return CreateCollectionReply_CrateCollectionStatus_Name(value);
  }
  static inline bool CrateCollectionStatus_Parse(const ::std::string& name,
      CrateCollectionStatus* value) {
    return CreateCollectionReply_CrateCollectionStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 callback_id = 1 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required .CreateCollectionReply.CrateCollectionStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::CreateCollectionReply_CrateCollectionStatus status() const;
  void set_status(::CreateCollectionReply_CrateCollectionStatus value);

  // @@protoc_insertion_point(class_scope:CreateCollectionReply)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int status_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateCollectionReply> CreateCollectionReply_default_instance_;

// -------------------------------------------------------------------

class CallDBRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CallDBRequest) */ {
 public:
  CallDBRequest();
  virtual ~CallDBRequest();

  CallDBRequest(const CallDBRequest& from);

  inline CallDBRequest& operator=(const CallDBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CallDBRequest& default_instance();

  static const CallDBRequest* internal_default_instance();

  void Swap(CallDBRequest* other);

  // implements Message ----------------------------------------------

  inline CallDBRequest* New() const { return New(NULL); }

  CallDBRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallDBRequest& from);
  void MergeFrom(const CallDBRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CallDBRequest* other);
  void UnsafeMergeFrom(const CallDBRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes method = 1;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const void* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // required bytes args = 2;
  bool has_args() const;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::std::string& args() const;
  void set_args(const ::std::string& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  ::std::string* mutable_args();
  ::std::string* release_args();
  void set_allocated_args(::std::string* args);

  // optional int32 callback_id = 3 [default = -1];
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 3;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CallDBRequest)
 private:
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_args();
  inline void clear_has_args();
  inline void set_has_callback_id();
  inline void clear_has_callback_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr args_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CallDBRequest> CallDBRequest_default_instance_;

// -------------------------------------------------------------------

class CallDBResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CallDBResponse) */ {
 public:
  CallDBResponse();
  virtual ~CallDBResponse();

  CallDBResponse(const CallDBResponse& from);

  inline CallDBResponse& operator=(const CallDBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CallDBResponse& default_instance();

  static const CallDBResponse* internal_default_instance();

  void Swap(CallDBResponse* other);

  // implements Message ----------------------------------------------

  inline CallDBResponse* New() const { return New(NULL); }

  CallDBResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallDBResponse& from);
  void MergeFrom(const CallDBResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CallDBResponse* other);
  void UnsafeMergeFrom(const CallDBResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 callback_id = 1;
  bool has_callback_id() const;
  void clear_callback_id();
  static const int kCallbackIdFieldNumber = 1;
  ::google::protobuf::int32 callback_id() const;
  void set_callback_id(::google::protobuf::int32 value);

  // required bytes args = 2;
  bool has_args() const;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::std::string& args() const;
  void set_args(const ::std::string& value);
  void set_args(const char* value);
  void set_args(const void* value, size_t size);
  ::std::string* mutable_args();
  ::std::string* release_args();
  void set_allocated_args(::std::string* args);

  // @@protoc_insertion_point(class_scope:CallDBResponse)
 private:
  inline void set_has_callback_id();
  inline void clear_has_callback_id();
  inline void set_has_args();
  inline void clear_has_args();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr args_;
  ::google::protobuf::int32 callback_id_;
  friend void  protobuf_InitDefaults_dbmongo_2eproto_impl();
  friend void  protobuf_AddDesc_dbmongo_2eproto_impl();
  friend void protobuf_AssignDesc_dbmongo_2eproto();
  friend void protobuf_ShutdownFile_dbmongo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CallDBResponse> CallDBResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FindDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool FindDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 FindDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.callback_id)
  return callback_id_;
}
inline void FindDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:FindDocRequest.callback_id)
}

// required bytes db = 2;
inline bool FindDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& FindDocRequest::db() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.db)
}
inline void FindDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.db)
}
inline void FindDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.db)
}
inline ::std::string* FindDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:FindDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.db)
}

// required bytes collection = 3;
inline bool FindDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& FindDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.collection)
}
inline void FindDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.collection)
}
inline void FindDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.collection)
}
inline ::std::string* FindDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:FindDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.collection)
}

// required bytes query = 4;
inline bool FindDocRequest::has_query() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindDocRequest::set_has_query() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindDocRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindDocRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& FindDocRequest::query() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.query)
}
inline void FindDocRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.query)
}
inline void FindDocRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.query)
}
inline ::std::string* FindDocRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_query() {
  // @@protoc_insertion_point(field_release:FindDocRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.query)
}

// optional bytes fields = 5;
inline bool FindDocRequest::has_fields() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindDocRequest::set_has_fields() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindDocRequest::clear_has_fields() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindDocRequest::clear_fields() {
  fields_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fields();
}
inline const ::std::string& FindDocRequest::fields() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.fields)
  return fields_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_fields(const ::std::string& value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.fields)
}
inline void FindDocRequest::set_fields(const char* value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.fields)
}
inline void FindDocRequest::set_fields(const void* value, size_t size) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.fields)
}
inline ::std::string* FindDocRequest::mutable_fields() {
  set_has_fields();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.fields)
  return fields_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_fields() {
  // @@protoc_insertion_point(field_release:FindDocRequest.fields)
  clear_has_fields();
  return fields_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_fields(::std::string* fields) {
  if (fields != NULL) {
    set_has_fields();
  } else {
    clear_has_fields();
  }
  fields_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fields);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.fields)
}

// optional int32 limit = 6 [default = 1];
inline bool FindDocRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FindDocRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FindDocRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FindDocRequest::clear_limit() {
  limit_ = 1;
  clear_has_limit();
}
inline ::google::protobuf::int32 FindDocRequest::limit() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.limit)
  return limit_;
}
inline void FindDocRequest::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:FindDocRequest.limit)
}

// optional bool seqflag = 7 [default = false];
inline bool FindDocRequest::has_seqflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FindDocRequest::set_has_seqflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FindDocRequest::clear_has_seqflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FindDocRequest::clear_seqflag() {
  seqflag_ = false;
  clear_has_seqflag();
}
inline bool FindDocRequest::seqflag() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.seqflag)
  return seqflag_;
}
inline void FindDocRequest::set_seqflag(bool value) {
  set_has_seqflag();
  seqflag_ = value;
  // @@protoc_insertion_point(field_set:FindDocRequest.seqflag)
}

// optional bytes seq_key = 8;
inline bool FindDocRequest::has_seq_key() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FindDocRequest::set_has_seq_key() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FindDocRequest::clear_has_seq_key() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FindDocRequest::clear_seq_key() {
  seq_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seq_key();
}
inline const ::std::string& FindDocRequest::seq_key() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.seq_key)
  return seq_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_seq_key(const ::std::string& value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.seq_key)
}
inline void FindDocRequest::set_seq_key(const char* value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.seq_key)
}
inline void FindDocRequest::set_seq_key(const void* value, size_t size) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.seq_key)
}
inline ::std::string* FindDocRequest::mutable_seq_key() {
  set_has_seq_key();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.seq_key)
  return seq_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_seq_key() {
  // @@protoc_insertion_point(field_release:FindDocRequest.seq_key)
  clear_has_seq_key();
  return seq_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_seq_key(::std::string* seq_key) {
  if (seq_key != NULL) {
    set_has_seq_key();
  } else {
    clear_has_seq_key();
  }
  seq_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq_key);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.seq_key)
}

// optional bytes sort = 9;
inline bool FindDocRequest::has_sort() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FindDocRequest::set_has_sort() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FindDocRequest::clear_has_sort() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FindDocRequest::clear_sort() {
  sort_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sort();
}
inline const ::std::string& FindDocRequest::sort() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.sort)
  return sort_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_sort(const ::std::string& value) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.sort)
}
inline void FindDocRequest::set_sort(const char* value) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.sort)
}
inline void FindDocRequest::set_sort(const void* value, size_t size) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.sort)
}
inline ::std::string* FindDocRequest::mutable_sort() {
  set_has_sort();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.sort)
  return sort_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_sort() {
  // @@protoc_insertion_point(field_release:FindDocRequest.sort)
  clear_has_sort();
  return sort_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_sort(::std::string* sort) {
  if (sort != NULL) {
    set_has_sort();
  } else {
    clear_has_sort();
  }
  sort_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sort);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.sort)
}

// optional int32 read_pref = 10;
inline bool FindDocRequest::has_read_pref() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FindDocRequest::set_has_read_pref() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FindDocRequest::clear_has_read_pref() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FindDocRequest::clear_read_pref() {
  read_pref_ = 0;
  clear_has_read_pref();
}
inline ::google::protobuf::int32 FindDocRequest::read_pref() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.read_pref)
  return read_pref_;
}
inline void FindDocRequest::set_read_pref(::google::protobuf::int32 value) {
  set_has_read_pref();
  read_pref_ = value;
  // @@protoc_insertion_point(field_set:FindDocRequest.read_pref)
}

// optional bytes hint = 11;
inline bool FindDocRequest::has_hint() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FindDocRequest::set_has_hint() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FindDocRequest::clear_has_hint() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FindDocRequest::clear_hint() {
  hint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hint();
}
inline const ::std::string& FindDocRequest::hint() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.hint)
  return hint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_hint(const ::std::string& value) {
  set_has_hint();
  hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.hint)
}
inline void FindDocRequest::set_hint(const char* value) {
  set_has_hint();
  hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.hint)
}
inline void FindDocRequest::set_hint(const void* value, size_t size) {
  set_has_hint();
  hint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.hint)
}
inline ::std::string* FindDocRequest::mutable_hint() {
  set_has_hint();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.hint)
  return hint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_hint() {
  // @@protoc_insertion_point(field_release:FindDocRequest.hint)
  clear_has_hint();
  return hint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_hint(::std::string* hint) {
  if (hint != NULL) {
    set_has_hint();
  } else {
    clear_has_hint();
  }
  hint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hint);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.hint)
}

// optional bytes skip = 12;
inline bool FindDocRequest::has_skip() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FindDocRequest::set_has_skip() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FindDocRequest::clear_has_skip() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FindDocRequest::clear_skip() {
  skip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skip();
}
inline const ::std::string& FindDocRequest::skip() const {
  // @@protoc_insertion_point(field_get:FindDocRequest.skip)
  return skip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_skip(const ::std::string& value) {
  set_has_skip();
  skip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindDocRequest.skip)
}
inline void FindDocRequest::set_skip(const char* value) {
  set_has_skip();
  skip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindDocRequest.skip)
}
inline void FindDocRequest::set_skip(const void* value, size_t size) {
  set_has_skip();
  skip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindDocRequest.skip)
}
inline ::std::string* FindDocRequest::mutable_skip() {
  set_has_skip();
  // @@protoc_insertion_point(field_mutable:FindDocRequest.skip)
  return skip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindDocRequest::release_skip() {
  // @@protoc_insertion_point(field_release:FindDocRequest.skip)
  clear_has_skip();
  return skip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindDocRequest::set_allocated_skip(::std::string* skip) {
  if (skip != NULL) {
    set_has_skip();
  } else {
    clear_has_skip();
  }
  skip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skip);
  // @@protoc_insertion_point(field_set_allocated:FindDocRequest.skip)
}

inline const FindDocRequest* FindDocRequest::internal_default_instance() {
  return &FindDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CountDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool CountDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CountDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CountDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CountDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:CountDocRequest.callback_id)
  return callback_id_;
}
inline void CountDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CountDocRequest.callback_id)
}

// required bytes db = 2;
inline bool CountDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CountDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CountDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& CountDocRequest::db() const {
  // @@protoc_insertion_point(field_get:CountDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CountDocRequest.db)
}
inline void CountDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CountDocRequest.db)
}
inline void CountDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CountDocRequest.db)
}
inline ::std::string* CountDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:CountDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:CountDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:CountDocRequest.db)
}

// required bytes collection = 3;
inline bool CountDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CountDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CountDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& CountDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:CountDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CountDocRequest.collection)
}
inline void CountDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CountDocRequest.collection)
}
inline void CountDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CountDocRequest.collection)
}
inline ::std::string* CountDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:CountDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:CountDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:CountDocRequest.collection)
}

// optional bytes query = 4;
inline bool CountDocRequest::has_query() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CountDocRequest::set_has_query() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CountDocRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CountDocRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& CountDocRequest::query() const {
  // @@protoc_insertion_point(field_get:CountDocRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CountDocRequest.query)
}
inline void CountDocRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CountDocRequest.query)
}
inline void CountDocRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CountDocRequest.query)
}
inline ::std::string* CountDocRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:CountDocRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountDocRequest::release_query() {
  // @@protoc_insertion_point(field_release:CountDocRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountDocRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:CountDocRequest.query)
}

inline const CountDocRequest* CountDocRequest::internal_default_instance() {
  return &CountDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool UpdateDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 UpdateDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.callback_id)
  return callback_id_;
}
inline void UpdateDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocRequest.callback_id)
}

// required bytes db = 2;
inline bool UpdateDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& UpdateDocRequest::db() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateDocRequest.db)
}
inline void UpdateDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateDocRequest.db)
}
inline void UpdateDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateDocRequest.db)
}
inline ::std::string* UpdateDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:UpdateDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:UpdateDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:UpdateDocRequest.db)
}

// required bytes collection = 3;
inline bool UpdateDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& UpdateDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateDocRequest.collection)
}
inline void UpdateDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateDocRequest.collection)
}
inline void UpdateDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateDocRequest.collection)
}
inline ::std::string* UpdateDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:UpdateDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:UpdateDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:UpdateDocRequest.collection)
}

// required bytes query = 4;
inline bool UpdateDocRequest::has_query() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateDocRequest::set_has_query() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateDocRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateDocRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& UpdateDocRequest::query() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateDocRequest.query)
}
inline void UpdateDocRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateDocRequest.query)
}
inline void UpdateDocRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateDocRequest.query)
}
inline ::std::string* UpdateDocRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:UpdateDocRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDocRequest::release_query() {
  // @@protoc_insertion_point(field_release:UpdateDocRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:UpdateDocRequest.query)
}

// required bytes fields = 5;
inline bool UpdateDocRequest::has_fields() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateDocRequest::set_has_fields() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateDocRequest::clear_has_fields() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateDocRequest::clear_fields() {
  fields_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fields();
}
inline const ::std::string& UpdateDocRequest::fields() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.fields)
  return fields_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_fields(const ::std::string& value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateDocRequest.fields)
}
inline void UpdateDocRequest::set_fields(const char* value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateDocRequest.fields)
}
inline void UpdateDocRequest::set_fields(const void* value, size_t size) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateDocRequest.fields)
}
inline ::std::string* UpdateDocRequest::mutable_fields() {
  set_has_fields();
  // @@protoc_insertion_point(field_mutable:UpdateDocRequest.fields)
  return fields_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDocRequest::release_fields() {
  // @@protoc_insertion_point(field_release:UpdateDocRequest.fields)
  clear_has_fields();
  return fields_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_allocated_fields(::std::string* fields) {
  if (fields != NULL) {
    set_has_fields();
  } else {
    clear_has_fields();
  }
  fields_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fields);
  // @@protoc_insertion_point(field_set_allocated:UpdateDocRequest.fields)
}

// optional bool upsert = 6 [default = false];
inline bool UpdateDocRequest::has_upsert() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateDocRequest::set_has_upsert() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateDocRequest::clear_has_upsert() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateDocRequest::clear_upsert() {
  upsert_ = false;
  clear_has_upsert();
}
inline bool UpdateDocRequest::upsert() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.upsert)
  return upsert_;
}
inline void UpdateDocRequest::set_upsert(bool value) {
  set_has_upsert();
  upsert_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocRequest.upsert)
}

// optional bool multi = 7 [default = false];
inline bool UpdateDocRequest::has_multi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateDocRequest::set_has_multi() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateDocRequest::clear_has_multi() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateDocRequest::clear_multi() {
  multi_ = false;
  clear_has_multi();
}
inline bool UpdateDocRequest::multi() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.multi)
  return multi_;
}
inline void UpdateDocRequest::set_multi(bool value) {
  set_has_multi();
  multi_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocRequest.multi)
}

// optional bool seqflag = 8 [default = false];
inline bool UpdateDocRequest::has_seqflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateDocRequest::set_has_seqflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateDocRequest::clear_has_seqflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateDocRequest::clear_seqflag() {
  seqflag_ = false;
  clear_has_seqflag();
}
inline bool UpdateDocRequest::seqflag() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.seqflag)
  return seqflag_;
}
inline void UpdateDocRequest::set_seqflag(bool value) {
  set_has_seqflag();
  seqflag_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocRequest.seqflag)
}

// optional bytes seq_key = 9;
inline bool UpdateDocRequest::has_seq_key() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UpdateDocRequest::set_has_seq_key() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UpdateDocRequest::clear_has_seq_key() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UpdateDocRequest::clear_seq_key() {
  seq_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seq_key();
}
inline const ::std::string& UpdateDocRequest::seq_key() const {
  // @@protoc_insertion_point(field_get:UpdateDocRequest.seq_key)
  return seq_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_seq_key(const ::std::string& value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateDocRequest.seq_key)
}
inline void UpdateDocRequest::set_seq_key(const char* value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateDocRequest.seq_key)
}
inline void UpdateDocRequest::set_seq_key(const void* value, size_t size) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateDocRequest.seq_key)
}
inline ::std::string* UpdateDocRequest::mutable_seq_key() {
  set_has_seq_key();
  // @@protoc_insertion_point(field_mutable:UpdateDocRequest.seq_key)
  return seq_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDocRequest::release_seq_key() {
  // @@protoc_insertion_point(field_release:UpdateDocRequest.seq_key)
  clear_has_seq_key();
  return seq_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDocRequest::set_allocated_seq_key(::std::string* seq_key) {
  if (seq_key != NULL) {
    set_has_seq_key();
  } else {
    clear_has_seq_key();
  }
  seq_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq_key);
  // @@protoc_insertion_point(field_set_allocated:UpdateDocRequest.seq_key)
}

inline const UpdateDocRequest* UpdateDocRequest::internal_default_instance() {
  return &UpdateDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// InsertDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool InsertDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 InsertDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.callback_id)
  return callback_id_;
}
inline void InsertDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:InsertDocRequest.callback_id)
}

// required bytes db = 2;
inline bool InsertDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InsertDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InsertDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InsertDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& InsertDocRequest::db() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InsertDocRequest.db)
}
inline void InsertDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InsertDocRequest.db)
}
inline void InsertDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InsertDocRequest.db)
}
inline ::std::string* InsertDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:InsertDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:InsertDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:InsertDocRequest.db)
}

// required bytes collection = 3;
inline bool InsertDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InsertDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InsertDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InsertDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& InsertDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InsertDocRequest.collection)
}
inline void InsertDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InsertDocRequest.collection)
}
inline void InsertDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InsertDocRequest.collection)
}
inline ::std::string* InsertDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:InsertDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:InsertDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:InsertDocRequest.collection)
}

// required bytes doc = 4;
inline bool InsertDocRequest::has_doc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InsertDocRequest::set_has_doc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InsertDocRequest::clear_has_doc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InsertDocRequest::clear_doc() {
  doc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc();
}
inline const ::std::string& InsertDocRequest::doc() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.doc)
  return doc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_doc(const ::std::string& value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InsertDocRequest.doc)
}
inline void InsertDocRequest::set_doc(const char* value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InsertDocRequest.doc)
}
inline void InsertDocRequest::set_doc(const void* value, size_t size) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InsertDocRequest.doc)
}
inline ::std::string* InsertDocRequest::mutable_doc() {
  set_has_doc();
  // @@protoc_insertion_point(field_mutable:InsertDocRequest.doc)
  return doc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertDocRequest::release_doc() {
  // @@protoc_insertion_point(field_release:InsertDocRequest.doc)
  clear_has_doc();
  return doc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_allocated_doc(::std::string* doc) {
  if (doc != NULL) {
    set_has_doc();
  } else {
    clear_has_doc();
  }
  doc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc);
  // @@protoc_insertion_point(field_set_allocated:InsertDocRequest.doc)
}

// optional bool seqflag = 5 [default = false];
inline bool InsertDocRequest::has_seqflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InsertDocRequest::set_has_seqflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InsertDocRequest::clear_has_seqflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InsertDocRequest::clear_seqflag() {
  seqflag_ = false;
  clear_has_seqflag();
}
inline bool InsertDocRequest::seqflag() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.seqflag)
  return seqflag_;
}
inline void InsertDocRequest::set_seqflag(bool value) {
  set_has_seqflag();
  seqflag_ = value;
  // @@protoc_insertion_point(field_set:InsertDocRequest.seqflag)
}

// optional bytes seq_key = 6;
inline bool InsertDocRequest::has_seq_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InsertDocRequest::set_has_seq_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InsertDocRequest::clear_has_seq_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InsertDocRequest::clear_seq_key() {
  seq_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seq_key();
}
inline const ::std::string& InsertDocRequest::seq_key() const {
  // @@protoc_insertion_point(field_get:InsertDocRequest.seq_key)
  return seq_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_seq_key(const ::std::string& value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InsertDocRequest.seq_key)
}
inline void InsertDocRequest::set_seq_key(const char* value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InsertDocRequest.seq_key)
}
inline void InsertDocRequest::set_seq_key(const void* value, size_t size) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InsertDocRequest.seq_key)
}
inline ::std::string* InsertDocRequest::mutable_seq_key() {
  set_has_seq_key();
  // @@protoc_insertion_point(field_mutable:InsertDocRequest.seq_key)
  return seq_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertDocRequest::release_seq_key() {
  // @@protoc_insertion_point(field_release:InsertDocRequest.seq_key)
  clear_has_seq_key();
  return seq_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocRequest::set_allocated_seq_key(::std::string* seq_key) {
  if (seq_key != NULL) {
    set_has_seq_key();
  } else {
    clear_has_seq_key();
  }
  seq_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq_key);
  // @@protoc_insertion_point(field_set_allocated:InsertDocRequest.seq_key)
}

inline const InsertDocRequest* InsertDocRequest::internal_default_instance() {
  return &InsertDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool DeleteDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 DeleteDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.callback_id)
  return callback_id_;
}
inline void DeleteDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:DeleteDocRequest.callback_id)
}

// required bytes db = 2;
inline bool DeleteDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& DeleteDocRequest::db() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteDocRequest.db)
}
inline void DeleteDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteDocRequest.db)
}
inline void DeleteDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteDocRequest.db)
}
inline ::std::string* DeleteDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:DeleteDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:DeleteDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:DeleteDocRequest.db)
}

// required bytes collection = 3;
inline bool DeleteDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& DeleteDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteDocRequest.collection)
}
inline void DeleteDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteDocRequest.collection)
}
inline void DeleteDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteDocRequest.collection)
}
inline ::std::string* DeleteDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:DeleteDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:DeleteDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:DeleteDocRequest.collection)
}

// required bytes query = 4;
inline bool DeleteDocRequest::has_query() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeleteDocRequest::set_has_query() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeleteDocRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeleteDocRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& DeleteDocRequest::query() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteDocRequest.query)
}
inline void DeleteDocRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteDocRequest.query)
}
inline void DeleteDocRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteDocRequest.query)
}
inline ::std::string* DeleteDocRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:DeleteDocRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteDocRequest::release_query() {
  // @@protoc_insertion_point(field_release:DeleteDocRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:DeleteDocRequest.query)
}

// optional bool seqflag = 5 [default = false];
inline bool DeleteDocRequest::has_seqflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeleteDocRequest::set_has_seqflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DeleteDocRequest::clear_has_seqflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DeleteDocRequest::clear_seqflag() {
  seqflag_ = false;
  clear_has_seqflag();
}
inline bool DeleteDocRequest::seqflag() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.seqflag)
  return seqflag_;
}
inline void DeleteDocRequest::set_seqflag(bool value) {
  set_has_seqflag();
  seqflag_ = value;
  // @@protoc_insertion_point(field_set:DeleteDocRequest.seqflag)
}

// optional bytes seq_key = 6;
inline bool DeleteDocRequest::has_seq_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeleteDocRequest::set_has_seq_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeleteDocRequest::clear_has_seq_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeleteDocRequest::clear_seq_key() {
  seq_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seq_key();
}
inline const ::std::string& DeleteDocRequest::seq_key() const {
  // @@protoc_insertion_point(field_get:DeleteDocRequest.seq_key)
  return seq_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_seq_key(const ::std::string& value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteDocRequest.seq_key)
}
inline void DeleteDocRequest::set_seq_key(const char* value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteDocRequest.seq_key)
}
inline void DeleteDocRequest::set_seq_key(const void* value, size_t size) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteDocRequest.seq_key)
}
inline ::std::string* DeleteDocRequest::mutable_seq_key() {
  set_has_seq_key();
  // @@protoc_insertion_point(field_mutable:DeleteDocRequest.seq_key)
  return seq_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteDocRequest::release_seq_key() {
  // @@protoc_insertion_point(field_release:DeleteDocRequest.seq_key)
  clear_has_seq_key();
  return seq_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteDocRequest::set_allocated_seq_key(::std::string* seq_key) {
  if (seq_key != NULL) {
    set_has_seq_key();
  } else {
    clear_has_seq_key();
  }
  seq_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq_key);
  // @@protoc_insertion_point(field_set_allocated:DeleteDocRequest.seq_key)
}

inline const DeleteDocRequest* DeleteDocRequest::internal_default_instance() {
  return &DeleteDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// FindAndModifyDocRequest

// optional int32 callback_id = 1 [default = -1];
inline bool FindAndModifyDocRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindAndModifyDocRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindAndModifyDocRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindAndModifyDocRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 FindAndModifyDocRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.callback_id)
  return callback_id_;
}
inline void FindAndModifyDocRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.callback_id)
}

// required bytes db = 2;
inline bool FindAndModifyDocRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindAndModifyDocRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindAndModifyDocRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindAndModifyDocRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& FindAndModifyDocRequest::db() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.db)
}
inline void FindAndModifyDocRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.db)
}
inline void FindAndModifyDocRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.db)
}
inline ::std::string* FindAndModifyDocRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_db() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.db)
}

// required bytes collection = 3;
inline bool FindAndModifyDocRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindAndModifyDocRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindAndModifyDocRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindAndModifyDocRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& FindAndModifyDocRequest::collection() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.collection)
}
inline void FindAndModifyDocRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.collection)
}
inline void FindAndModifyDocRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.collection)
}
inline ::std::string* FindAndModifyDocRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_collection() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.collection)
}

// required bytes query = 4;
inline bool FindAndModifyDocRequest::has_query() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindAndModifyDocRequest::set_has_query() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindAndModifyDocRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindAndModifyDocRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& FindAndModifyDocRequest::query() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.query)
}
inline void FindAndModifyDocRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.query)
}
inline void FindAndModifyDocRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.query)
}
inline ::std::string* FindAndModifyDocRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_query() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.query)
}

// optional bytes fields = 5;
inline bool FindAndModifyDocRequest::has_fields() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FindAndModifyDocRequest::set_has_fields() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FindAndModifyDocRequest::clear_has_fields() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FindAndModifyDocRequest::clear_fields() {
  fields_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fields();
}
inline const ::std::string& FindAndModifyDocRequest::fields() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.fields)
  return fields_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_fields(const ::std::string& value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.fields)
}
inline void FindAndModifyDocRequest::set_fields(const char* value) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.fields)
}
inline void FindAndModifyDocRequest::set_fields(const void* value, size_t size) {
  set_has_fields();
  fields_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.fields)
}
inline ::std::string* FindAndModifyDocRequest::mutable_fields() {
  set_has_fields();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.fields)
  return fields_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_fields() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.fields)
  clear_has_fields();
  return fields_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_fields(::std::string* fields) {
  if (fields != NULL) {
    set_has_fields();
  } else {
    clear_has_fields();
  }
  fields_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fields);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.fields)
}

// optional bytes update = 6;
inline bool FindAndModifyDocRequest::has_update() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FindAndModifyDocRequest::set_has_update() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FindAndModifyDocRequest::clear_has_update() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FindAndModifyDocRequest::clear_update() {
  update_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update();
}
inline const ::std::string& FindAndModifyDocRequest::update() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.update)
  return update_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_update(const ::std::string& value) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.update)
}
inline void FindAndModifyDocRequest::set_update(const char* value) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.update)
}
inline void FindAndModifyDocRequest::set_update(const void* value, size_t size) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.update)
}
inline ::std::string* FindAndModifyDocRequest::mutable_update() {
  set_has_update();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.update)
  return update_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_update() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.update)
  clear_has_update();
  return update_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_update(::std::string* update) {
  if (update != NULL) {
    set_has_update();
  } else {
    clear_has_update();
  }
  update_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.update)
}

// optional bool upsert = 7 [default = false];
inline bool FindAndModifyDocRequest::has_upsert() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FindAndModifyDocRequest::set_has_upsert() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FindAndModifyDocRequest::clear_has_upsert() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FindAndModifyDocRequest::clear_upsert() {
  upsert_ = false;
  clear_has_upsert();
}
inline bool FindAndModifyDocRequest::upsert() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.upsert)
  return upsert_;
}
inline void FindAndModifyDocRequest::set_upsert(bool value) {
  set_has_upsert();
  upsert_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.upsert)
}

// optional bool new = 8 [default = false];
inline bool FindAndModifyDocRequest::has_new_() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FindAndModifyDocRequest::set_has_new_() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FindAndModifyDocRequest::clear_has_new_() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FindAndModifyDocRequest::clear_new_() {
  new__ = false;
  clear_has_new_();
}
inline bool FindAndModifyDocRequest::new_() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.new)
  return new__;
}
inline void FindAndModifyDocRequest::set_new_(bool value) {
  set_has_new_();
  new__ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.new)
}

// optional bool seqflag = 9 [default = false];
inline bool FindAndModifyDocRequest::has_seqflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FindAndModifyDocRequest::set_has_seqflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FindAndModifyDocRequest::clear_has_seqflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FindAndModifyDocRequest::clear_seqflag() {
  seqflag_ = false;
  clear_has_seqflag();
}
inline bool FindAndModifyDocRequest::seqflag() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.seqflag)
  return seqflag_;
}
inline void FindAndModifyDocRequest::set_seqflag(bool value) {
  set_has_seqflag();
  seqflag_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.seqflag)
}

// optional bytes seq_key = 10;
inline bool FindAndModifyDocRequest::has_seq_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FindAndModifyDocRequest::set_has_seq_key() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FindAndModifyDocRequest::clear_has_seq_key() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FindAndModifyDocRequest::clear_seq_key() {
  seq_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seq_key();
}
inline const ::std::string& FindAndModifyDocRequest::seq_key() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.seq_key)
  return seq_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_seq_key(const ::std::string& value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.seq_key)
}
inline void FindAndModifyDocRequest::set_seq_key(const char* value) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.seq_key)
}
inline void FindAndModifyDocRequest::set_seq_key(const void* value, size_t size) {
  set_has_seq_key();
  seq_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.seq_key)
}
inline ::std::string* FindAndModifyDocRequest::mutable_seq_key() {
  set_has_seq_key();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.seq_key)
  return seq_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_seq_key() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.seq_key)
  clear_has_seq_key();
  return seq_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_seq_key(::std::string* seq_key) {
  if (seq_key != NULL) {
    set_has_seq_key();
  } else {
    clear_has_seq_key();
  }
  seq_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq_key);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.seq_key)
}

// optional bool remove = 11 [default = false];
inline bool FindAndModifyDocRequest::has_remove() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FindAndModifyDocRequest::set_has_remove() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FindAndModifyDocRequest::clear_has_remove() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FindAndModifyDocRequest::clear_remove() {
  remove_ = false;
  clear_has_remove();
}
inline bool FindAndModifyDocRequest::remove() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.remove)
  return remove_;
}
inline void FindAndModifyDocRequest::set_remove(bool value) {
  set_has_remove();
  remove_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.remove)
}

// optional bytes sort = 12;
inline bool FindAndModifyDocRequest::has_sort() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FindAndModifyDocRequest::set_has_sort() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FindAndModifyDocRequest::clear_has_sort() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FindAndModifyDocRequest::clear_sort() {
  sort_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sort();
}
inline const ::std::string& FindAndModifyDocRequest::sort() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocRequest.sort)
  return sort_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_sort(const ::std::string& value) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocRequest.sort)
}
inline void FindAndModifyDocRequest::set_sort(const char* value) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocRequest.sort)
}
inline void FindAndModifyDocRequest::set_sort(const void* value, size_t size) {
  set_has_sort();
  sort_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocRequest.sort)
}
inline ::std::string* FindAndModifyDocRequest::mutable_sort() {
  set_has_sort();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocRequest.sort)
  return sort_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocRequest::release_sort() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocRequest.sort)
  clear_has_sort();
  return sort_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocRequest::set_allocated_sort(::std::string* sort) {
  if (sort != NULL) {
    set_has_sort();
  } else {
    clear_has_sort();
  }
  sort_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sort);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocRequest.sort)
}

inline const FindAndModifyDocRequest* FindAndModifyDocRequest::internal_default_instance() {
  return &FindAndModifyDocRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RunProcedureRequest

// optional int32 callback_id = 1 [default = -1];
inline bool RunProcedureRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunProcedureRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunProcedureRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunProcedureRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 RunProcedureRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:RunProcedureRequest.callback_id)
  return callback_id_;
}
inline void RunProcedureRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:RunProcedureRequest.callback_id)
}

// required bytes db = 2;
inline bool RunProcedureRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunProcedureRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunProcedureRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunProcedureRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& RunProcedureRequest::db() const {
  // @@protoc_insertion_point(field_get:RunProcedureRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RunProcedureRequest.db)
}
inline void RunProcedureRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RunProcedureRequest.db)
}
inline void RunProcedureRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RunProcedureRequest.db)
}
inline ::std::string* RunProcedureRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:RunProcedureRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunProcedureRequest::release_db() {
  // @@protoc_insertion_point(field_release:RunProcedureRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:RunProcedureRequest.db)
}

// required bytes proc = 4;
inline bool RunProcedureRequest::has_proc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunProcedureRequest::set_has_proc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunProcedureRequest::clear_has_proc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunProcedureRequest::clear_proc() {
  proc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proc();
}
inline const ::std::string& RunProcedureRequest::proc() const {
  // @@protoc_insertion_point(field_get:RunProcedureRequest.proc)
  return proc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_proc(const ::std::string& value) {
  set_has_proc();
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RunProcedureRequest.proc)
}
inline void RunProcedureRequest::set_proc(const char* value) {
  set_has_proc();
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RunProcedureRequest.proc)
}
inline void RunProcedureRequest::set_proc(const void* value, size_t size) {
  set_has_proc();
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RunProcedureRequest.proc)
}
inline ::std::string* RunProcedureRequest::mutable_proc() {
  set_has_proc();
  // @@protoc_insertion_point(field_mutable:RunProcedureRequest.proc)
  return proc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunProcedureRequest::release_proc() {
  // @@protoc_insertion_point(field_release:RunProcedureRequest.proc)
  clear_has_proc();
  return proc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_allocated_proc(::std::string* proc) {
  if (proc != NULL) {
    set_has_proc();
  } else {
    clear_has_proc();
  }
  proc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proc);
  // @@protoc_insertion_point(field_set_allocated:RunProcedureRequest.proc)
}

// optional bytes args = 5;
inline bool RunProcedureRequest::has_args() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RunProcedureRequest::set_has_args() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RunProcedureRequest::clear_has_args() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RunProcedureRequest::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_args();
}
inline const ::std::string& RunProcedureRequest::args() const {
  // @@protoc_insertion_point(field_get:RunProcedureRequest.args)
  return args_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_args(const ::std::string& value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RunProcedureRequest.args)
}
inline void RunProcedureRequest::set_args(const char* value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RunProcedureRequest.args)
}
inline void RunProcedureRequest::set_args(const void* value, size_t size) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RunProcedureRequest.args)
}
inline ::std::string* RunProcedureRequest::mutable_args() {
  set_has_args();
  // @@protoc_insertion_point(field_mutable:RunProcedureRequest.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunProcedureRequest::release_args() {
  // @@protoc_insertion_point(field_release:RunProcedureRequest.args)
  clear_has_args();
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    set_has_args();
  } else {
    clear_has_args();
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:RunProcedureRequest.args)
}

// optional bytes kwargs = 6;
inline bool RunProcedureRequest::has_kwargs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RunProcedureRequest::set_has_kwargs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RunProcedureRequest::clear_has_kwargs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RunProcedureRequest::clear_kwargs() {
  kwargs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_kwargs();
}
inline const ::std::string& RunProcedureRequest::kwargs() const {
  // @@protoc_insertion_point(field_get:RunProcedureRequest.kwargs)
  return kwargs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_kwargs(const ::std::string& value) {
  set_has_kwargs();
  kwargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RunProcedureRequest.kwargs)
}
inline void RunProcedureRequest::set_kwargs(const char* value) {
  set_has_kwargs();
  kwargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RunProcedureRequest.kwargs)
}
inline void RunProcedureRequest::set_kwargs(const void* value, size_t size) {
  set_has_kwargs();
  kwargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RunProcedureRequest.kwargs)
}
inline ::std::string* RunProcedureRequest::mutable_kwargs() {
  set_has_kwargs();
  // @@protoc_insertion_point(field_mutable:RunProcedureRequest.kwargs)
  return kwargs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunProcedureRequest::release_kwargs() {
  // @@protoc_insertion_point(field_release:RunProcedureRequest.kwargs)
  clear_has_kwargs();
  return kwargs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureRequest::set_allocated_kwargs(::std::string* kwargs) {
  if (kwargs != NULL) {
    set_has_kwargs();
  } else {
    clear_has_kwargs();
  }
  kwargs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kwargs);
  // @@protoc_insertion_point(field_set_allocated:RunProcedureRequest.kwargs)
}

inline const RunProcedureRequest* RunProcedureRequest::internal_default_instance() {
  return &RunProcedureRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// OperIndexRequest

// optional int32 callback_id = 1 [default = -1];
inline bool OperIndexRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperIndexRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperIndexRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperIndexRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 OperIndexRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.callback_id)
  return callback_id_;
}
inline void OperIndexRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:OperIndexRequest.callback_id)
}

// required bytes db = 2;
inline bool OperIndexRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperIndexRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperIndexRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperIndexRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& OperIndexRequest::db() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperIndexRequest.db)
}
inline void OperIndexRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperIndexRequest.db)
}
inline void OperIndexRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperIndexRequest.db)
}
inline ::std::string* OperIndexRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:OperIndexRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperIndexRequest::release_db() {
  // @@protoc_insertion_point(field_release:OperIndexRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:OperIndexRequest.db)
}

// required bytes collection = 3;
inline bool OperIndexRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperIndexRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperIndexRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperIndexRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& OperIndexRequest::collection() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperIndexRequest.collection)
}
inline void OperIndexRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperIndexRequest.collection)
}
inline void OperIndexRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperIndexRequest.collection)
}
inline ::std::string* OperIndexRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:OperIndexRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperIndexRequest::release_collection() {
  // @@protoc_insertion_point(field_release:OperIndexRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:OperIndexRequest.collection)
}

// required .OperIndexRequest.OperType type = 4;
inline bool OperIndexRequest::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperIndexRequest::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperIndexRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperIndexRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::OperIndexRequest_OperType OperIndexRequest::type() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.type)
  return static_cast< ::OperIndexRequest_OperType >(type_);
}
inline void OperIndexRequest::set_type(::OperIndexRequest_OperType value) {
  assert(::OperIndexRequest_OperType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OperIndexRequest.type)
}

// optional bytes query = 5;
inline bool OperIndexRequest::has_query() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperIndexRequest::set_has_query() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperIndexRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperIndexRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& OperIndexRequest::query() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperIndexRequest.query)
}
inline void OperIndexRequest::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperIndexRequest.query)
}
inline void OperIndexRequest::set_query(const void* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperIndexRequest.query)
}
inline ::std::string* OperIndexRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:OperIndexRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperIndexRequest::release_query() {
  // @@protoc_insertion_point(field_release:OperIndexRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:OperIndexRequest.query)
}

// optional bytes desc = 6;
inline bool OperIndexRequest::has_desc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperIndexRequest::set_has_desc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperIndexRequest::clear_has_desc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperIndexRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& OperIndexRequest::desc() const {
  // @@protoc_insertion_point(field_get:OperIndexRequest.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperIndexRequest.desc)
}
inline void OperIndexRequest::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperIndexRequest.desc)
}
inline void OperIndexRequest::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperIndexRequest.desc)
}
inline ::std::string* OperIndexRequest::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:OperIndexRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperIndexRequest::release_desc() {
  // @@protoc_insertion_point(field_release:OperIndexRequest.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperIndexRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:OperIndexRequest.desc)
}

inline const OperIndexRequest* OperIndexRequest::internal_default_instance() {
  return &OperIndexRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateCollectionRequest

// optional int32 callback_id = 1 [default = -1];
inline bool CreateCollectionRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateCollectionRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateCollectionRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateCollectionRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CreateCollectionRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:CreateCollectionRequest.callback_id)
  return callback_id_;
}
inline void CreateCollectionRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CreateCollectionRequest.callback_id)
}

// required bytes db = 2;
inline bool CreateCollectionRequest::has_db() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateCollectionRequest::set_has_db() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateCollectionRequest::clear_has_db() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateCollectionRequest::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db();
}
inline const ::std::string& CreateCollectionRequest::db() const {
  // @@protoc_insertion_point(field_get:CreateCollectionRequest.db)
  return db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_db(const ::std::string& value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateCollectionRequest.db)
}
inline void CreateCollectionRequest::set_db(const char* value) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateCollectionRequest.db)
}
inline void CreateCollectionRequest::set_db(const void* value, size_t size) {
  set_has_db();
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateCollectionRequest.db)
}
inline ::std::string* CreateCollectionRequest::mutable_db() {
  set_has_db();
  // @@protoc_insertion_point(field_mutable:CreateCollectionRequest.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateCollectionRequest::release_db() {
  // @@protoc_insertion_point(field_release:CreateCollectionRequest.db)
  clear_has_db();
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    set_has_db();
  } else {
    clear_has_db();
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:CreateCollectionRequest.db)
}

// required bytes collection = 4;
inline bool CreateCollectionRequest::has_collection() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateCollectionRequest::set_has_collection() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateCollectionRequest::clear_has_collection() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateCollectionRequest::clear_collection() {
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collection();
}
inline const ::std::string& CreateCollectionRequest::collection() const {
  // @@protoc_insertion_point(field_get:CreateCollectionRequest.collection)
  return collection_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_collection(const ::std::string& value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateCollectionRequest.collection)
}
inline void CreateCollectionRequest::set_collection(const char* value) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateCollectionRequest.collection)
}
inline void CreateCollectionRequest::set_collection(const void* value, size_t size) {
  set_has_collection();
  collection_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateCollectionRequest.collection)
}
inline ::std::string* CreateCollectionRequest::mutable_collection() {
  set_has_collection();
  // @@protoc_insertion_point(field_mutable:CreateCollectionRequest.collection)
  return collection_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateCollectionRequest::release_collection() {
  // @@protoc_insertion_point(field_release:CreateCollectionRequest.collection)
  clear_has_collection();
  return collection_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_allocated_collection(::std::string* collection) {
  if (collection != NULL) {
    set_has_collection();
  } else {
    clear_has_collection();
  }
  collection_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection);
  // @@protoc_insertion_point(field_set_allocated:CreateCollectionRequest.collection)
}

// optional bytes operations = 5;
inline bool CreateCollectionRequest::has_operations() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateCollectionRequest::set_has_operations() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateCollectionRequest::clear_has_operations() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateCollectionRequest::clear_operations() {
  operations_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operations();
}
inline const ::std::string& CreateCollectionRequest::operations() const {
  // @@protoc_insertion_point(field_get:CreateCollectionRequest.operations)
  return operations_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_operations(const ::std::string& value) {
  set_has_operations();
  operations_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateCollectionRequest.operations)
}
inline void CreateCollectionRequest::set_operations(const char* value) {
  set_has_operations();
  operations_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateCollectionRequest.operations)
}
inline void CreateCollectionRequest::set_operations(const void* value, size_t size) {
  set_has_operations();
  operations_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateCollectionRequest.operations)
}
inline ::std::string* CreateCollectionRequest::mutable_operations() {
  set_has_operations();
  // @@protoc_insertion_point(field_mutable:CreateCollectionRequest.operations)
  return operations_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateCollectionRequest::release_operations() {
  // @@protoc_insertion_point(field_release:CreateCollectionRequest.operations)
  clear_has_operations();
  return operations_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateCollectionRequest::set_allocated_operations(::std::string* operations) {
  if (operations != NULL) {
    set_has_operations();
  } else {
    clear_has_operations();
  }
  operations_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operations);
  // @@protoc_insertion_point(field_set_allocated:CreateCollectionRequest.operations)
}

inline const CreateCollectionRequest* CreateCollectionRequest::internal_default_instance() {
  return &CreateCollectionRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DbStatusMessage

// required .DbStatusMessage.DbStatus status = 1;
inline bool DbStatusMessage::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbStatusMessage::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbStatusMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbStatusMessage::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::DbStatusMessage_DbStatus DbStatusMessage::status() const {
  // @@protoc_insertion_point(field_get:DbStatusMessage.status)
  return static_cast< ::DbStatusMessage_DbStatus >(status_);
}
inline void DbStatusMessage::set_status(::DbStatusMessage_DbStatus value) {
  assert(::DbStatusMessage_DbStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:DbStatusMessage.status)
}

inline const DbStatusMessage* DbStatusMessage::internal_default_instance() {
  return &DbStatusMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// FindDocReply

// required int32 callback_id = 1 [default = -1];
inline bool FindDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 FindDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:FindDocReply.callback_id)
  return callback_id_;
}
inline void FindDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:FindDocReply.callback_id)
}

// required bool status = 2;
inline bool FindDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool FindDocReply::status() const {
  // @@protoc_insertion_point(field_get:FindDocReply.status)
  return status_;
}
inline void FindDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:FindDocReply.status)
}

// repeated bytes docs = 3;
inline int FindDocReply::docs_size() const {
  return docs_.size();
}
inline void FindDocReply::clear_docs() {
  docs_.Clear();
}
inline const ::std::string& FindDocReply::docs(int index) const {
  // @@protoc_insertion_point(field_get:FindDocReply.docs)
  return docs_.Get(index);
}
inline ::std::string* FindDocReply::mutable_docs(int index) {
  // @@protoc_insertion_point(field_mutable:FindDocReply.docs)
  return docs_.Mutable(index);
}
inline void FindDocReply::set_docs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:FindDocReply.docs)
  docs_.Mutable(index)->assign(value);
}
inline void FindDocReply::set_docs(int index, const char* value) {
  docs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:FindDocReply.docs)
}
inline void FindDocReply::set_docs(int index, const void* value, size_t size) {
  docs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FindDocReply.docs)
}
inline ::std::string* FindDocReply::add_docs() {
  // @@protoc_insertion_point(field_add_mutable:FindDocReply.docs)
  return docs_.Add();
}
inline void FindDocReply::add_docs(const ::std::string& value) {
  docs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:FindDocReply.docs)
}
inline void FindDocReply::add_docs(const char* value) {
  docs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:FindDocReply.docs)
}
inline void FindDocReply::add_docs(const void* value, size_t size) {
  docs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:FindDocReply.docs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FindDocReply::docs() const {
  // @@protoc_insertion_point(field_list:FindDocReply.docs)
  return docs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FindDocReply::mutable_docs() {
  // @@protoc_insertion_point(field_mutable_list:FindDocReply.docs)
  return &docs_;
}

inline const FindDocReply* FindDocReply::internal_default_instance() {
  return &FindDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// CountDocReply

// required int32 callback_id = 1 [default = -1];
inline bool CountDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CountDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CountDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CountDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:CountDocReply.callback_id)
  return callback_id_;
}
inline void CountDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CountDocReply.callback_id)
}

// required bool status = 2;
inline bool CountDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CountDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CountDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool CountDocReply::status() const {
  // @@protoc_insertion_point(field_get:CountDocReply.status)
  return status_;
}
inline void CountDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CountDocReply.status)
}

// required int32 count = 3;
inline bool CountDocReply::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountDocReply::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CountDocReply::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CountDocReply::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CountDocReply::count() const {
  // @@protoc_insertion_point(field_get:CountDocReply.count)
  return count_;
}
inline void CountDocReply::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:CountDocReply.count)
}

inline const CountDocReply* CountDocReply::internal_default_instance() {
  return &CountDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateDocReply

// optional int32 callback_id = 1 [default = -1];
inline bool UpdateDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 UpdateDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:UpdateDocReply.callback_id)
  return callback_id_;
}
inline void UpdateDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocReply.callback_id)
}

// required bool status = 2;
inline bool UpdateDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool UpdateDocReply::status() const {
  // @@protoc_insertion_point(field_get:UpdateDocReply.status)
  return status_;
}
inline void UpdateDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UpdateDocReply.status)
}

inline const UpdateDocReply* UpdateDocReply::internal_default_instance() {
  return &UpdateDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// InsertDocReply

// optional int32 callback_id = 1 [default = -1];
inline bool InsertDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 InsertDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:InsertDocReply.callback_id)
  return callback_id_;
}
inline void InsertDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:InsertDocReply.callback_id)
}

// required bool status = 2;
inline bool InsertDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InsertDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InsertDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InsertDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool InsertDocReply::status() const {
  // @@protoc_insertion_point(field_get:InsertDocReply.status)
  return status_;
}
inline void InsertDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:InsertDocReply.status)
}

// optional bytes insert_id = 3;
inline bool InsertDocReply::has_insert_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InsertDocReply::set_has_insert_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InsertDocReply::clear_has_insert_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InsertDocReply::clear_insert_id() {
  insert_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_insert_id();
}
inline const ::std::string& InsertDocReply::insert_id() const {
  // @@protoc_insertion_point(field_get:InsertDocReply.insert_id)
  return insert_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocReply::set_insert_id(const ::std::string& value) {
  set_has_insert_id();
  insert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InsertDocReply.insert_id)
}
inline void InsertDocReply::set_insert_id(const char* value) {
  set_has_insert_id();
  insert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InsertDocReply.insert_id)
}
inline void InsertDocReply::set_insert_id(const void* value, size_t size) {
  set_has_insert_id();
  insert_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InsertDocReply.insert_id)
}
inline ::std::string* InsertDocReply::mutable_insert_id() {
  set_has_insert_id();
  // @@protoc_insertion_point(field_mutable:InsertDocReply.insert_id)
  return insert_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertDocReply::release_insert_id() {
  // @@protoc_insertion_point(field_release:InsertDocReply.insert_id)
  clear_has_insert_id();
  return insert_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertDocReply::set_allocated_insert_id(::std::string* insert_id) {
  if (insert_id != NULL) {
    set_has_insert_id();
  } else {
    clear_has_insert_id();
  }
  insert_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), insert_id);
  // @@protoc_insertion_point(field_set_allocated:InsertDocReply.insert_id)
}

inline const InsertDocReply* InsertDocReply::internal_default_instance() {
  return &InsertDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteDocReply

// optional int32 callback_id = 1 [default = -1];
inline bool DeleteDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 DeleteDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:DeleteDocReply.callback_id)
  return callback_id_;
}
inline void DeleteDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:DeleteDocReply.callback_id)
}

// required bool status = 2;
inline bool DeleteDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool DeleteDocReply::status() const {
  // @@protoc_insertion_point(field_get:DeleteDocReply.status)
  return status_;
}
inline void DeleteDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:DeleteDocReply.status)
}

inline const DeleteDocReply* DeleteDocReply::internal_default_instance() {
  return &DeleteDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// FindAndModifyDocReply

// optional int32 callback_id = 1 [default = -1];
inline bool FindAndModifyDocReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindAndModifyDocReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindAndModifyDocReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindAndModifyDocReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 FindAndModifyDocReply::callback_id() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocReply.callback_id)
  return callback_id_;
}
inline void FindAndModifyDocReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocReply.callback_id)
}

// required bool status = 2;
inline bool FindAndModifyDocReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindAndModifyDocReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindAndModifyDocReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindAndModifyDocReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool FindAndModifyDocReply::status() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocReply.status)
  return status_;
}
inline void FindAndModifyDocReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:FindAndModifyDocReply.status)
}

// optional bytes doc = 3;
inline bool FindAndModifyDocReply::has_doc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindAndModifyDocReply::set_has_doc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindAndModifyDocReply::clear_has_doc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindAndModifyDocReply::clear_doc() {
  doc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc();
}
inline const ::std::string& FindAndModifyDocReply::doc() const {
  // @@protoc_insertion_point(field_get:FindAndModifyDocReply.doc)
  return doc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocReply::set_doc(const ::std::string& value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FindAndModifyDocReply.doc)
}
inline void FindAndModifyDocReply::set_doc(const char* value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FindAndModifyDocReply.doc)
}
inline void FindAndModifyDocReply::set_doc(const void* value, size_t size) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FindAndModifyDocReply.doc)
}
inline ::std::string* FindAndModifyDocReply::mutable_doc() {
  set_has_doc();
  // @@protoc_insertion_point(field_mutable:FindAndModifyDocReply.doc)
  return doc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FindAndModifyDocReply::release_doc() {
  // @@protoc_insertion_point(field_release:FindAndModifyDocReply.doc)
  clear_has_doc();
  return doc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FindAndModifyDocReply::set_allocated_doc(::std::string* doc) {
  if (doc != NULL) {
    set_has_doc();
  } else {
    clear_has_doc();
  }
  doc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc);
  // @@protoc_insertion_point(field_set_allocated:FindAndModifyDocReply.doc)
}

inline const FindAndModifyDocReply* FindAndModifyDocReply::internal_default_instance() {
  return &FindAndModifyDocReply_default_instance_.get();
}
// -------------------------------------------------------------------

// RunProcedureReply

// optional int32 callback_id = 1 [default = -1];
inline bool RunProcedureReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunProcedureReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunProcedureReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunProcedureReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 RunProcedureReply::callback_id() const {
  // @@protoc_insertion_point(field_get:RunProcedureReply.callback_id)
  return callback_id_;
}
inline void RunProcedureReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:RunProcedureReply.callback_id)
}

// required bool status = 2;
inline bool RunProcedureReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunProcedureReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunProcedureReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunProcedureReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool RunProcedureReply::status() const {
  // @@protoc_insertion_point(field_get:RunProcedureReply.status)
  return status_;
}
inline void RunProcedureReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RunProcedureReply.status)
}

// optional bytes doc = 3;
inline bool RunProcedureReply::has_doc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RunProcedureReply::set_has_doc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RunProcedureReply::clear_has_doc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RunProcedureReply::clear_doc() {
  doc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc();
}
inline const ::std::string& RunProcedureReply::doc() const {
  // @@protoc_insertion_point(field_get:RunProcedureReply.doc)
  return doc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureReply::set_doc(const ::std::string& value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RunProcedureReply.doc)
}
inline void RunProcedureReply::set_doc(const char* value) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RunProcedureReply.doc)
}
inline void RunProcedureReply::set_doc(const void* value, size_t size) {
  set_has_doc();
  doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RunProcedureReply.doc)
}
inline ::std::string* RunProcedureReply::mutable_doc() {
  set_has_doc();
  // @@protoc_insertion_point(field_mutable:RunProcedureReply.doc)
  return doc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunProcedureReply::release_doc() {
  // @@protoc_insertion_point(field_release:RunProcedureReply.doc)
  clear_has_doc();
  return doc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunProcedureReply::set_allocated_doc(::std::string* doc) {
  if (doc != NULL) {
    set_has_doc();
  } else {
    clear_has_doc();
  }
  doc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc);
  // @@protoc_insertion_point(field_set_allocated:RunProcedureReply.doc)
}

inline const RunProcedureReply* RunProcedureReply::internal_default_instance() {
  return &RunProcedureReply_default_instance_.get();
}
// -------------------------------------------------------------------

// OperIndexReply

// optional int32 callback_id = 1 [default = -1];
inline bool OperIndexReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperIndexReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperIndexReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperIndexReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 OperIndexReply::callback_id() const {
  // @@protoc_insertion_point(field_get:OperIndexReply.callback_id)
  return callback_id_;
}
inline void OperIndexReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:OperIndexReply.callback_id)
}

// required bool status = 2;
inline bool OperIndexReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperIndexReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperIndexReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperIndexReply::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool OperIndexReply::status() const {
  // @@protoc_insertion_point(field_get:OperIndexReply.status)
  return status_;
}
inline void OperIndexReply::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:OperIndexReply.status)
}

inline const OperIndexReply* OperIndexReply::internal_default_instance() {
  return &OperIndexReply_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateCollectionReply

// optional int32 callback_id = 1 [default = -1];
inline bool CreateCollectionReply::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateCollectionReply::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateCollectionReply::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateCollectionReply::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CreateCollectionReply::callback_id() const {
  // @@protoc_insertion_point(field_get:CreateCollectionReply.callback_id)
  return callback_id_;
}
inline void CreateCollectionReply::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CreateCollectionReply.callback_id)
}

// required .CreateCollectionReply.CrateCollectionStatus status = 2;
inline bool CreateCollectionReply::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateCollectionReply::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateCollectionReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateCollectionReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CreateCollectionReply_CrateCollectionStatus CreateCollectionReply::status() const {
  // @@protoc_insertion_point(field_get:CreateCollectionReply.status)
  return static_cast< ::CreateCollectionReply_CrateCollectionStatus >(status_);
}
inline void CreateCollectionReply::set_status(::CreateCollectionReply_CrateCollectionStatus value) {
  assert(::CreateCollectionReply_CrateCollectionStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CreateCollectionReply.status)
}

inline const CreateCollectionReply* CreateCollectionReply::internal_default_instance() {
  return &CreateCollectionReply_default_instance_.get();
}
// -------------------------------------------------------------------

// CallDBRequest

// required bytes method = 1;
inline bool CallDBRequest::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallDBRequest::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallDBRequest::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallDBRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& CallDBRequest::method() const {
  // @@protoc_insertion_point(field_get:CallDBRequest.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBRequest::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CallDBRequest.method)
}
inline void CallDBRequest::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CallDBRequest.method)
}
inline void CallDBRequest::set_method(const void* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CallDBRequest.method)
}
inline ::std::string* CallDBRequest::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:CallDBRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallDBRequest::release_method() {
  // @@protoc_insertion_point(field_release:CallDBRequest.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:CallDBRequest.method)
}

// required bytes args = 2;
inline bool CallDBRequest::has_args() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallDBRequest::set_has_args() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallDBRequest::clear_has_args() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallDBRequest::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_args();
}
inline const ::std::string& CallDBRequest::args() const {
  // @@protoc_insertion_point(field_get:CallDBRequest.args)
  return args_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBRequest::set_args(const ::std::string& value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CallDBRequest.args)
}
inline void CallDBRequest::set_args(const char* value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CallDBRequest.args)
}
inline void CallDBRequest::set_args(const void* value, size_t size) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CallDBRequest.args)
}
inline ::std::string* CallDBRequest::mutable_args() {
  set_has_args();
  // @@protoc_insertion_point(field_mutable:CallDBRequest.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallDBRequest::release_args() {
  // @@protoc_insertion_point(field_release:CallDBRequest.args)
  clear_has_args();
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBRequest::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    set_has_args();
  } else {
    clear_has_args();
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:CallDBRequest.args)
}

// optional int32 callback_id = 3 [default = -1];
inline bool CallDBRequest::has_callback_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CallDBRequest::set_has_callback_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CallDBRequest::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CallDBRequest::clear_callback_id() {
  callback_id_ = -1;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CallDBRequest::callback_id() const {
  // @@protoc_insertion_point(field_get:CallDBRequest.callback_id)
  return callback_id_;
}
inline void CallDBRequest::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CallDBRequest.callback_id)
}

inline const CallDBRequest* CallDBRequest::internal_default_instance() {
  return &CallDBRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CallDBResponse

// required int32 callback_id = 1;
inline bool CallDBResponse::has_callback_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallDBResponse::set_has_callback_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallDBResponse::clear_has_callback_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallDBResponse::clear_callback_id() {
  callback_id_ = 0;
  clear_has_callback_id();
}
inline ::google::protobuf::int32 CallDBResponse::callback_id() const {
  // @@protoc_insertion_point(field_get:CallDBResponse.callback_id)
  return callback_id_;
}
inline void CallDBResponse::set_callback_id(::google::protobuf::int32 value) {
  set_has_callback_id();
  callback_id_ = value;
  // @@protoc_insertion_point(field_set:CallDBResponse.callback_id)
}

// required bytes args = 2;
inline bool CallDBResponse::has_args() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallDBResponse::set_has_args() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallDBResponse::clear_has_args() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallDBResponse::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_args();
}
inline const ::std::string& CallDBResponse::args() const {
  // @@protoc_insertion_point(field_get:CallDBResponse.args)
  return args_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBResponse::set_args(const ::std::string& value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CallDBResponse.args)
}
inline void CallDBResponse::set_args(const char* value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CallDBResponse.args)
}
inline void CallDBResponse::set_args(const void* value, size_t size) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CallDBResponse.args)
}
inline ::std::string* CallDBResponse::mutable_args() {
  set_has_args();
  // @@protoc_insertion_point(field_mutable:CallDBResponse.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CallDBResponse::release_args() {
  // @@protoc_insertion_point(field_release:CallDBResponse.args)
  clear_has_args();
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CallDBResponse::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    set_has_args();
  } else {
    clear_has_args();
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:CallDBResponse.args)
}

inline const CallDBResponse* CallDBResponse::internal_default_instance() {
  return &CallDBResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OperIndexRequest_OperType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OperIndexRequest_OperType>() {
  return ::OperIndexRequest_OperType_descriptor();
}
template <> struct is_proto_enum< ::DbStatusMessage_DbStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DbStatusMessage_DbStatus>() {
  return ::DbStatusMessage_DbStatus_descriptor();
}
template <> struct is_proto_enum< ::CreateCollectionReply_CrateCollectionStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CreateCollectionReply_CrateCollectionStatus>() {
  return ::CreateCollectionReply_CrateCollectionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dbmongo_2eproto__INCLUDED
