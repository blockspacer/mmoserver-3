// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LuaMessage.proto

#ifndef PROTOBUF_LuaMessage_2eproto__INCLUDED
#define PROTOBUF_LuaMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_LuaMessage_2eproto();
void protobuf_InitDefaults_LuaMessage_2eproto();
void protobuf_AssignDesc_LuaMessage_2eproto();
void protobuf_ShutdownFile_LuaMessage_2eproto();

class CS_CLIENT_MOVE;
class CS_FORCE_MOVE;
class CS_Lua_RunRequest;
class CS_PING;
class CS_PING_BACK_BACK;
class CS_ROTATE_CHANGE;
class CS_RUN_STATE_CHANGE;
class CS_STOP_MOVE;
class CS_TURN_DIRECTION;
class ConnectServerReply;
class ConnectServerRequest;
class Position;
class SC_CREATE_ENTITY;
class SC_CREATE_ENTITY_Entity;
class SC_DESTROY_ENTITY;
class SC_FORCE_MOVE;
class SC_Lua_RunRequest;
class SC_MOVE_SYNC;
class SC_PING_BACK;
class SC_ROTATE_CHANGE;
class SC_RUN_STATE_CHANGE;
class SC_STOP_MOVE_SYNC;
class SC_TURN_DIRECTION;

enum ConnectServerRequest_RequestType {
  ConnectServerRequest_RequestType_NEW_CONNECTION = 0,
  ConnectServerRequest_RequestType_RE_CONNECTION = 1
};
bool ConnectServerRequest_RequestType_IsValid(int value);
const ConnectServerRequest_RequestType ConnectServerRequest_RequestType_RequestType_MIN = ConnectServerRequest_RequestType_NEW_CONNECTION;
const ConnectServerRequest_RequestType ConnectServerRequest_RequestType_RequestType_MAX = ConnectServerRequest_RequestType_RE_CONNECTION;
const int ConnectServerRequest_RequestType_RequestType_ARRAYSIZE = ConnectServerRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectServerRequest_RequestType_descriptor();
inline const ::std::string& ConnectServerRequest_RequestType_Name(ConnectServerRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectServerRequest_RequestType_descriptor(), value);
}
inline bool ConnectServerRequest_RequestType_Parse(
    const ::std::string& name, ConnectServerRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectServerRequest_RequestType>(
    ConnectServerRequest_RequestType_descriptor(), name, value);
}
enum ConnectServerReply_ReplyType {
  ConnectServerReply_ReplyType_BUSY = 0,
  ConnectServerReply_ReplyType_CONNECTED = 1,
  ConnectServerReply_ReplyType_RECONNECT_SUCCEEDED = 2,
  ConnectServerReply_ReplyType_RECONNECT_FAILED = 3,
  ConnectServerReply_ReplyType_FORBIDDEN = 4,
  ConnectServerReply_ReplyType_MAX_CONNECTION = 5
};
bool ConnectServerReply_ReplyType_IsValid(int value);
const ConnectServerReply_ReplyType ConnectServerReply_ReplyType_ReplyType_MIN = ConnectServerReply_ReplyType_BUSY;
const ConnectServerReply_ReplyType ConnectServerReply_ReplyType_ReplyType_MAX = ConnectServerReply_ReplyType_MAX_CONNECTION;
const int ConnectServerReply_ReplyType_ReplyType_ARRAYSIZE = ConnectServerReply_ReplyType_ReplyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectServerReply_ReplyType_descriptor();
inline const ::std::string& ConnectServerReply_ReplyType_Name(ConnectServerReply_ReplyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectServerReply_ReplyType_descriptor(), value);
}
inline bool ConnectServerReply_ReplyType_Parse(
    const ::std::string& name, ConnectServerReply_ReplyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectServerReply_ReplyType>(
    ConnectServerReply_ReplyType_descriptor(), name, value);
}
// ===================================================================

class CS_Lua_RunRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_Lua_RunRequest) */ {
 public:
  CS_Lua_RunRequest();
  virtual ~CS_Lua_RunRequest();

  CS_Lua_RunRequest(const CS_Lua_RunRequest& from);

  inline CS_Lua_RunRequest& operator=(const CS_Lua_RunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Lua_RunRequest& default_instance();

  static const CS_Lua_RunRequest* internal_default_instance();

  void Swap(CS_Lua_RunRequest* other);

  // implements Message ----------------------------------------------

  inline CS_Lua_RunRequest* New() const { return New(NULL); }

  CS_Lua_RunRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_Lua_RunRequest& from);
  void MergeFrom(const CS_Lua_RunRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_Lua_RunRequest* other);
  void UnsafeMergeFrom(const CS_Lua_RunRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 opcode = 1;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // optional bytes parameters = 2;
  bool has_parameters() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  const ::std::string& parameters() const;
  void set_parameters(const ::std::string& value);
  void set_parameters(const char* value);
  void set_parameters(const void* value, size_t size);
  ::std::string* mutable_parameters();
  ::std::string* release_parameters();
  void set_allocated_parameters(::std::string* parameters);

  // @@protoc_insertion_point(class_scope:CS_Lua_RunRequest)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_parameters();
  inline void clear_has_parameters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr parameters_;
  ::google::protobuf::uint32 opcode_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_Lua_RunRequest> CS_Lua_RunRequest_default_instance_;

// -------------------------------------------------------------------

class SC_Lua_RunRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Lua_RunRequest) */ {
 public:
  SC_Lua_RunRequest();
  virtual ~SC_Lua_RunRequest();

  SC_Lua_RunRequest(const SC_Lua_RunRequest& from);

  inline SC_Lua_RunRequest& operator=(const SC_Lua_RunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Lua_RunRequest& default_instance();

  static const SC_Lua_RunRequest* internal_default_instance();

  void Swap(SC_Lua_RunRequest* other);

  // implements Message ----------------------------------------------

  inline SC_Lua_RunRequest* New() const { return New(NULL); }

  SC_Lua_RunRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_Lua_RunRequest& from);
  void MergeFrom(const SC_Lua_RunRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_Lua_RunRequest* other);
  void UnsafeMergeFrom(const SC_Lua_RunRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 opcode = 1;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 1;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // optional bytes parameters = 2;
  bool has_parameters() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  const ::std::string& parameters() const;
  void set_parameters(const ::std::string& value);
  void set_parameters(const char* value);
  void set_parameters(const void* value, size_t size);
  ::std::string* mutable_parameters();
  ::std::string* release_parameters();
  void set_allocated_parameters(::std::string* parameters);

  // @@protoc_insertion_point(class_scope:SC_Lua_RunRequest)
 private:
  inline void set_has_opcode();
  inline void clear_has_opcode();
  inline void set_has_parameters();
  inline void clear_has_parameters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr parameters_;
  ::google::protobuf::uint32 opcode_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_Lua_RunRequest> SC_Lua_RunRequest_default_instance_;

// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static const Position* internal_default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  inline Position* New() const { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Position* other);
  void UnsafeMergeFrom(const Position& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float DestX = 2;
  bool has_destx() const;
  void clear_destx();
  static const int kDestXFieldNumber = 2;
  float destx() const;
  void set_destx(float value);

  // required float DestY = 3;
  bool has_desty() const;
  void clear_desty();
  static const int kDestYFieldNumber = 3;
  float desty() const;
  void set_desty(float value);

  // required float DestZ = 4;
  bool has_destz() const;
  void clear_destz();
  static const int kDestZFieldNumber = 4;
  float destz() const;
  void set_destz(float value);

  // required float Orientation = 5;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 5;
  float orientation() const;
  void set_orientation(float value);

  // required float Speed = 6;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:Position)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_destx();
  inline void clear_has_destx();
  inline void set_has_desty();
  inline void clear_has_desty();
  inline void set_has_destz();
  inline void clear_has_destz();
  inline void set_has_orientation();
  inline void clear_has_orientation();
  inline void set_has_speed();
  inline void clear_has_speed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float destx_;
  float desty_;
  float destz_;
  float orientation_;
  float speed_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Position> Position_default_instance_;

// -------------------------------------------------------------------

class CS_CLIENT_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_CLIENT_MOVE) */ {
 public:
  CS_CLIENT_MOVE();
  virtual ~CS_CLIENT_MOVE();

  CS_CLIENT_MOVE(const CS_CLIENT_MOVE& from);

  inline CS_CLIENT_MOVE& operator=(const CS_CLIENT_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_CLIENT_MOVE& default_instance();

  static const CS_CLIENT_MOVE* internal_default_instance();

  void Swap(CS_CLIENT_MOVE* other);

  // implements Message ----------------------------------------------

  inline CS_CLIENT_MOVE* New() const { return New(NULL); }

  CS_CLIENT_MOVE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_CLIENT_MOVE& from);
  void MergeFrom(const CS_CLIENT_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_CLIENT_MOVE* other);
  void UnsafeMergeFrom(const CS_CLIENT_MOVE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Position MyPostion = 1;
  bool has_mypostion() const;
  void clear_mypostion();
  static const int kMyPostionFieldNumber = 1;
  const ::Position& mypostion() const;
  ::Position* mutable_mypostion();
  ::Position* release_mypostion();
  void set_allocated_mypostion(::Position* mypostion);

  // required uint64 clienttime = 2;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClienttimeFieldNumber = 2;
  ::google::protobuf::uint64 clienttime() const;
  void set_clienttime(::google::protobuf::uint64 value);

  // required uint32 SceneID = 5;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 5;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_CLIENT_MOVE)
 private:
  inline void set_has_mypostion();
  inline void clear_has_mypostion();
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Position* mypostion_;
  ::google::protobuf::uint64 clienttime_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_CLIENT_MOVE> CS_CLIENT_MOVE_default_instance_;

// -------------------------------------------------------------------

class SC_MOVE_SYNC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_MOVE_SYNC) */ {
 public:
  SC_MOVE_SYNC();
  virtual ~SC_MOVE_SYNC();

  SC_MOVE_SYNC(const SC_MOVE_SYNC& from);

  inline SC_MOVE_SYNC& operator=(const SC_MOVE_SYNC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_MOVE_SYNC& default_instance();

  static const SC_MOVE_SYNC* internal_default_instance();

  void Swap(SC_MOVE_SYNC* other);

  // implements Message ----------------------------------------------

  inline SC_MOVE_SYNC* New() const { return New(NULL); }

  SC_MOVE_SYNC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_MOVE_SYNC& from);
  void MergeFrom(const SC_MOVE_SYNC& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_MOVE_SYNC* other);
  void UnsafeMergeFrom(const SC_MOVE_SYNC& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Position SyncPostion = 1;
  bool has_syncpostion() const;
  void clear_syncpostion();
  static const int kSyncPostionFieldNumber = 1;
  const ::Position& syncpostion() const;
  ::Position* mutable_syncpostion();
  ::Position* release_syncpostion();
  void set_allocated_syncpostion(::Position* syncpostion);

  // required uint64 servertime = 2;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // required uint32 SceneID = 5;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 5;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_MOVE_SYNC)
 private:
  inline void set_has_syncpostion();
  inline void clear_has_syncpostion();
  inline void set_has_servertime();
  inline void clear_has_servertime();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Position* syncpostion_;
  ::google::protobuf::uint64 servertime_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_MOVE_SYNC> SC_MOVE_SYNC_default_instance_;

// -------------------------------------------------------------------

class CS_STOP_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_STOP_MOVE) */ {
 public:
  CS_STOP_MOVE();
  virtual ~CS_STOP_MOVE();

  CS_STOP_MOVE(const CS_STOP_MOVE& from);

  inline CS_STOP_MOVE& operator=(const CS_STOP_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_STOP_MOVE& default_instance();

  static const CS_STOP_MOVE* internal_default_instance();

  void Swap(CS_STOP_MOVE* other);

  // implements Message ----------------------------------------------

  inline CS_STOP_MOVE* New() const { return New(NULL); }

  CS_STOP_MOVE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_STOP_MOVE& from);
  void MergeFrom(const CS_STOP_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_STOP_MOVE* other);
  void UnsafeMergeFrom(const CS_STOP_MOVE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Position MyPostion = 1;
  bool has_mypostion() const;
  void clear_mypostion();
  static const int kMyPostionFieldNumber = 1;
  const ::Position& mypostion() const;
  ::Position* mutable_mypostion();
  ::Position* release_mypostion();
  void set_allocated_mypostion(::Position* mypostion);

  // required uint64 clienttime = 2;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClienttimeFieldNumber = 2;
  ::google::protobuf::uint64 clienttime() const;
  void set_clienttime(::google::protobuf::uint64 value);

  // required uint32 SceneID = 3;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_STOP_MOVE)
 private:
  inline void set_has_mypostion();
  inline void clear_has_mypostion();
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Position* mypostion_;
  ::google::protobuf::uint64 clienttime_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_STOP_MOVE> CS_STOP_MOVE_default_instance_;

// -------------------------------------------------------------------

class SC_STOP_MOVE_SYNC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_STOP_MOVE_SYNC) */ {
 public:
  SC_STOP_MOVE_SYNC();
  virtual ~SC_STOP_MOVE_SYNC();

  SC_STOP_MOVE_SYNC(const SC_STOP_MOVE_SYNC& from);

  inline SC_STOP_MOVE_SYNC& operator=(const SC_STOP_MOVE_SYNC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_STOP_MOVE_SYNC& default_instance();

  static const SC_STOP_MOVE_SYNC* internal_default_instance();

  void Swap(SC_STOP_MOVE_SYNC* other);

  // implements Message ----------------------------------------------

  inline SC_STOP_MOVE_SYNC* New() const { return New(NULL); }

  SC_STOP_MOVE_SYNC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_STOP_MOVE_SYNC& from);
  void MergeFrom(const SC_STOP_MOVE_SYNC& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_STOP_MOVE_SYNC* other);
  void UnsafeMergeFrom(const SC_STOP_MOVE_SYNC& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Position SyncPostion = 1;
  int syncpostion_size() const;
  void clear_syncpostion();
  static const int kSyncPostionFieldNumber = 1;
  const ::Position& syncpostion(int index) const;
  ::Position* mutable_syncpostion(int index);
  ::Position* add_syncpostion();
  ::google::protobuf::RepeatedPtrField< ::Position >*
      mutable_syncpostion();
  const ::google::protobuf::RepeatedPtrField< ::Position >&
      syncpostion() const;

  // required uint64 servertime = 2;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // required uint32 SceneID = 3;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_STOP_MOVE_SYNC)
 private:
  inline void set_has_servertime();
  inline void clear_has_servertime();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Position > syncpostion_;
  ::google::protobuf::uint64 servertime_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_STOP_MOVE_SYNC> SC_STOP_MOVE_SYNC_default_instance_;

// -------------------------------------------------------------------

class CS_FORCE_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_FORCE_MOVE) */ {
 public:
  CS_FORCE_MOVE();
  virtual ~CS_FORCE_MOVE();

  CS_FORCE_MOVE(const CS_FORCE_MOVE& from);

  inline CS_FORCE_MOVE& operator=(const CS_FORCE_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_FORCE_MOVE& default_instance();

  static const CS_FORCE_MOVE* internal_default_instance();

  void Swap(CS_FORCE_MOVE* other);

  // implements Message ----------------------------------------------

  inline CS_FORCE_MOVE* New() const { return New(NULL); }

  CS_FORCE_MOVE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_FORCE_MOVE& from);
  void MergeFrom(const CS_FORCE_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_FORCE_MOVE* other);
  void UnsafeMergeFrom(const CS_FORCE_MOVE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float DestX = 2;
  bool has_destx() const;
  void clear_destx();
  static const int kDestXFieldNumber = 2;
  float destx() const;
  void set_destx(float value);

  // required float DestY = 3;
  bool has_desty() const;
  void clear_desty();
  static const int kDestYFieldNumber = 3;
  float desty() const;
  void set_desty(float value);

  // required float DestZ = 4;
  bool has_destz() const;
  void clear_destz();
  static const int kDestZFieldNumber = 4;
  float destz() const;
  void set_destz(float value);

  // required uint32 SceneID = 5;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 5;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_FORCE_MOVE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_destx();
  inline void clear_has_destx();
  inline void set_has_desty();
  inline void clear_has_desty();
  inline void set_has_destz();
  inline void clear_has_destz();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float destx_;
  float desty_;
  float destz_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_FORCE_MOVE> CS_FORCE_MOVE_default_instance_;

// -------------------------------------------------------------------

class SC_FORCE_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_FORCE_MOVE) */ {
 public:
  SC_FORCE_MOVE();
  virtual ~SC_FORCE_MOVE();

  SC_FORCE_MOVE(const SC_FORCE_MOVE& from);

  inline SC_FORCE_MOVE& operator=(const SC_FORCE_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_FORCE_MOVE& default_instance();

  static const SC_FORCE_MOVE* internal_default_instance();

  void Swap(SC_FORCE_MOVE* other);

  // implements Message ----------------------------------------------

  inline SC_FORCE_MOVE* New() const { return New(NULL); }

  SC_FORCE_MOVE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_FORCE_MOVE& from);
  void MergeFrom(const SC_FORCE_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_FORCE_MOVE* other);
  void UnsafeMergeFrom(const SC_FORCE_MOVE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float DestX = 2;
  bool has_destx() const;
  void clear_destx();
  static const int kDestXFieldNumber = 2;
  float destx() const;
  void set_destx(float value);

  // required float DestY = 3;
  bool has_desty() const;
  void clear_desty();
  static const int kDestYFieldNumber = 3;
  float desty() const;
  void set_desty(float value);

  // required float DestZ = 4;
  bool has_destz() const;
  void clear_destz();
  static const int kDestZFieldNumber = 4;
  float destz() const;
  void set_destz(float value);

  // required uint32 SceneID = 5;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 5;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_FORCE_MOVE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_destx();
  inline void clear_has_destx();
  inline void set_has_desty();
  inline void clear_has_desty();
  inline void set_has_destz();
  inline void clear_has_destz();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float destx_;
  float desty_;
  float destz_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_FORCE_MOVE> SC_FORCE_MOVE_default_instance_;

// -------------------------------------------------------------------

class CS_TURN_DIRECTION : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_TURN_DIRECTION) */ {
 public:
  CS_TURN_DIRECTION();
  virtual ~CS_TURN_DIRECTION();

  CS_TURN_DIRECTION(const CS_TURN_DIRECTION& from);

  inline CS_TURN_DIRECTION& operator=(const CS_TURN_DIRECTION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_TURN_DIRECTION& default_instance();

  static const CS_TURN_DIRECTION* internal_default_instance();

  void Swap(CS_TURN_DIRECTION* other);

  // implements Message ----------------------------------------------

  inline CS_TURN_DIRECTION* New() const { return New(NULL); }

  CS_TURN_DIRECTION* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_TURN_DIRECTION& from);
  void MergeFrom(const CS_TURN_DIRECTION& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_TURN_DIRECTION* other);
  void UnsafeMergeFrom(const CS_TURN_DIRECTION& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float DestX = 2;
  bool has_destx() const;
  void clear_destx();
  static const int kDestXFieldNumber = 2;
  float destx() const;
  void set_destx(float value);

  // required float DestY = 3;
  bool has_desty() const;
  void clear_desty();
  static const int kDestYFieldNumber = 3;
  float desty() const;
  void set_desty(float value);

  // required float DestZ = 4;
  bool has_destz() const;
  void clear_destz();
  static const int kDestZFieldNumber = 4;
  float destz() const;
  void set_destz(float value);

  // required float Direction = 5;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 5;
  float direction() const;
  void set_direction(float value);

  // required uint32 SceneID = 6;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 6;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_TURN_DIRECTION)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_destx();
  inline void clear_has_destx();
  inline void set_has_desty();
  inline void clear_has_desty();
  inline void set_has_destz();
  inline void clear_has_destz();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float destx_;
  float desty_;
  float destz_;
  float direction_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_TURN_DIRECTION> CS_TURN_DIRECTION_default_instance_;

// -------------------------------------------------------------------

class SC_TURN_DIRECTION : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_TURN_DIRECTION) */ {
 public:
  SC_TURN_DIRECTION();
  virtual ~SC_TURN_DIRECTION();

  SC_TURN_DIRECTION(const SC_TURN_DIRECTION& from);

  inline SC_TURN_DIRECTION& operator=(const SC_TURN_DIRECTION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_TURN_DIRECTION& default_instance();

  static const SC_TURN_DIRECTION* internal_default_instance();

  void Swap(SC_TURN_DIRECTION* other);

  // implements Message ----------------------------------------------

  inline SC_TURN_DIRECTION* New() const { return New(NULL); }

  SC_TURN_DIRECTION* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_TURN_DIRECTION& from);
  void MergeFrom(const SC_TURN_DIRECTION& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_TURN_DIRECTION* other);
  void UnsafeMergeFrom(const SC_TURN_DIRECTION& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float DestX = 2;
  bool has_destx() const;
  void clear_destx();
  static const int kDestXFieldNumber = 2;
  float destx() const;
  void set_destx(float value);

  // required float DestY = 3;
  bool has_desty() const;
  void clear_desty();
  static const int kDestYFieldNumber = 3;
  float desty() const;
  void set_desty(float value);

  // required float DestZ = 4;
  bool has_destz() const;
  void clear_destz();
  static const int kDestZFieldNumber = 4;
  float destz() const;
  void set_destz(float value);

  // required float Direction = 5;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 5;
  float direction() const;
  void set_direction(float value);

  // required uint32 SceneID = 6;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 6;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_TURN_DIRECTION)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_destx();
  inline void clear_has_destx();
  inline void set_has_desty();
  inline void clear_has_desty();
  inline void set_has_destz();
  inline void clear_has_destz();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float destx_;
  float desty_;
  float destz_;
  float direction_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_TURN_DIRECTION> SC_TURN_DIRECTION_default_instance_;

// -------------------------------------------------------------------

class SC_CREATE_ENTITY_Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CREATE_ENTITY.Entity) */ {
 public:
  SC_CREATE_ENTITY_Entity();
  virtual ~SC_CREATE_ENTITY_Entity();

  SC_CREATE_ENTITY_Entity(const SC_CREATE_ENTITY_Entity& from);

  inline SC_CREATE_ENTITY_Entity& operator=(const SC_CREATE_ENTITY_Entity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CREATE_ENTITY_Entity& default_instance();

  static const SC_CREATE_ENTITY_Entity* internal_default_instance();

  void Swap(SC_CREATE_ENTITY_Entity* other);

  // implements Message ----------------------------------------------

  inline SC_CREATE_ENTITY_Entity* New() const { return New(NULL); }

  SC_CREATE_ENTITY_Entity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_CREATE_ENTITY_Entity& from);
  void MergeFrom(const SC_CREATE_ENTITY_Entity& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_CREATE_ENTITY_Entity* other);
  void UnsafeMergeFrom(const SC_CREATE_ENTITY_Entity& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes EntityID = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required bytes EntityInfo = 2;
  bool has_entityinfo() const;
  void clear_entityinfo();
  static const int kEntityInfoFieldNumber = 2;
  const ::std::string& entityinfo() const;
  void set_entityinfo(const ::std::string& value);
  void set_entityinfo(const char* value);
  void set_entityinfo(const void* value, size_t size);
  ::std::string* mutable_entityinfo();
  ::std::string* release_entityinfo();
  void set_allocated_entityinfo(::std::string* entityinfo);

  // required .Position EntityPos = 3;
  bool has_entitypos() const;
  void clear_entitypos();
  static const int kEntityPosFieldNumber = 3;
  const ::Position& entitypos() const;
  ::Position* mutable_entitypos();
  ::Position* release_entitypos();
  void set_allocated_entitypos(::Position* entitypos);

  // @@protoc_insertion_point(class_scope:SC_CREATE_ENTITY.Entity)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_entityinfo();
  inline void clear_has_entityinfo();
  inline void set_has_entitypos();
  inline void clear_has_entitypos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  ::google::protobuf::internal::ArenaStringPtr entityinfo_;
  ::Position* entitypos_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_CREATE_ENTITY_Entity> SC_CREATE_ENTITY_Entity_default_instance_;

// -------------------------------------------------------------------

class SC_CREATE_ENTITY : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CREATE_ENTITY) */ {
 public:
  SC_CREATE_ENTITY();
  virtual ~SC_CREATE_ENTITY();

  SC_CREATE_ENTITY(const SC_CREATE_ENTITY& from);

  inline SC_CREATE_ENTITY& operator=(const SC_CREATE_ENTITY& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CREATE_ENTITY& default_instance();

  static const SC_CREATE_ENTITY* internal_default_instance();

  void Swap(SC_CREATE_ENTITY* other);

  // implements Message ----------------------------------------------

  inline SC_CREATE_ENTITY* New() const { return New(NULL); }

  SC_CREATE_ENTITY* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_CREATE_ENTITY& from);
  void MergeFrom(const SC_CREATE_ENTITY& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_CREATE_ENTITY* other);
  void UnsafeMergeFrom(const SC_CREATE_ENTITY& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SC_CREATE_ENTITY_Entity Entity;

  // accessors -------------------------------------------------------

  // required uint32 SceneID = 1;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // repeated .SC_CREATE_ENTITY.Entity EntitiesCreate = 2;
  int entitiescreate_size() const;
  void clear_entitiescreate();
  static const int kEntitiesCreateFieldNumber = 2;
  const ::SC_CREATE_ENTITY_Entity& entitiescreate(int index) const;
  ::SC_CREATE_ENTITY_Entity* mutable_entitiescreate(int index);
  ::SC_CREATE_ENTITY_Entity* add_entitiescreate();
  ::google::protobuf::RepeatedPtrField< ::SC_CREATE_ENTITY_Entity >*
      mutable_entitiescreate();
  const ::google::protobuf::RepeatedPtrField< ::SC_CREATE_ENTITY_Entity >&
      entitiescreate() const;

  // @@protoc_insertion_point(class_scope:SC_CREATE_ENTITY)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC_CREATE_ENTITY_Entity > entitiescreate_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_CREATE_ENTITY> SC_CREATE_ENTITY_default_instance_;

// -------------------------------------------------------------------

class SC_DESTROY_ENTITY : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_DESTROY_ENTITY) */ {
 public:
  SC_DESTROY_ENTITY();
  virtual ~SC_DESTROY_ENTITY();

  SC_DESTROY_ENTITY(const SC_DESTROY_ENTITY& from);

  inline SC_DESTROY_ENTITY& operator=(const SC_DESTROY_ENTITY& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_DESTROY_ENTITY& default_instance();

  static const SC_DESTROY_ENTITY* internal_default_instance();

  void Swap(SC_DESTROY_ENTITY* other);

  // implements Message ----------------------------------------------

  inline SC_DESTROY_ENTITY* New() const { return New(NULL); }

  SC_DESTROY_ENTITY* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_DESTROY_ENTITY& from);
  void MergeFrom(const SC_DESTROY_ENTITY& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_DESTROY_ENTITY* other);
  void UnsafeMergeFrom(const SC_DESTROY_ENTITY& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 SceneID = 1;
  bool has_sceneid() const;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // repeated bytes EntitiesDestroy = 2;
  int entitiesdestroy_size() const;
  void clear_entitiesdestroy();
  static const int kEntitiesDestroyFieldNumber = 2;
  const ::std::string& entitiesdestroy(int index) const;
  ::std::string* mutable_entitiesdestroy(int index);
  void set_entitiesdestroy(int index, const ::std::string& value);
  void set_entitiesdestroy(int index, const char* value);
  void set_entitiesdestroy(int index, const void* value, size_t size);
  ::std::string* add_entitiesdestroy();
  void add_entitiesdestroy(const ::std::string& value);
  void add_entitiesdestroy(const char* value);
  void add_entitiesdestroy(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& entitiesdestroy() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entitiesdestroy();

  // @@protoc_insertion_point(class_scope:SC_DESTROY_ENTITY)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> entitiesdestroy_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_DESTROY_ENTITY> SC_DESTROY_ENTITY_default_instance_;

// -------------------------------------------------------------------

class CS_PING : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_PING) */ {
 public:
  CS_PING();
  virtual ~CS_PING();

  CS_PING(const CS_PING& from);

  inline CS_PING& operator=(const CS_PING& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PING& default_instance();

  static const CS_PING* internal_default_instance();

  void Swap(CS_PING* other);

  // implements Message ----------------------------------------------

  inline CS_PING* New() const { return New(NULL); }

  CS_PING* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_PING& from);
  void MergeFrom(const CS_PING& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_PING* other);
  void UnsafeMergeFrom(const CS_PING& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clienttime = 1;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClienttimeFieldNumber = 1;
  ::google::protobuf::uint64 clienttime() const;
  void set_clienttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CS_PING)
 private:
  inline void set_has_clienttime();
  inline void clear_has_clienttime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 clienttime_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_PING> CS_PING_default_instance_;

// -------------------------------------------------------------------

class SC_PING_BACK : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PING_BACK) */ {
 public:
  SC_PING_BACK();
  virtual ~SC_PING_BACK();

  SC_PING_BACK(const SC_PING_BACK& from);

  inline SC_PING_BACK& operator=(const SC_PING_BACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PING_BACK& default_instance();

  static const SC_PING_BACK* internal_default_instance();

  void Swap(SC_PING_BACK* other);

  // implements Message ----------------------------------------------

  inline SC_PING_BACK* New() const { return New(NULL); }

  SC_PING_BACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_PING_BACK& from);
  void MergeFrom(const SC_PING_BACK& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_PING_BACK* other);
  void UnsafeMergeFrom(const SC_PING_BACK& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clienttime = 1;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClienttimeFieldNumber = 1;
  ::google::protobuf::uint64 clienttime() const;
  void set_clienttime(::google::protobuf::uint64 value);

  // required uint64 servertime = 2;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SC_PING_BACK)
 private:
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 clienttime_;
  ::google::protobuf::uint64 servertime_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_PING_BACK> SC_PING_BACK_default_instance_;

// -------------------------------------------------------------------

class CS_PING_BACK_BACK : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_PING_BACK_BACK) */ {
 public:
  CS_PING_BACK_BACK();
  virtual ~CS_PING_BACK_BACK();

  CS_PING_BACK_BACK(const CS_PING_BACK_BACK& from);

  inline CS_PING_BACK_BACK& operator=(const CS_PING_BACK_BACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PING_BACK_BACK& default_instance();

  static const CS_PING_BACK_BACK* internal_default_instance();

  void Swap(CS_PING_BACK_BACK* other);

  // implements Message ----------------------------------------------

  inline CS_PING_BACK_BACK* New() const { return New(NULL); }

  CS_PING_BACK_BACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_PING_BACK_BACK& from);
  void MergeFrom(const CS_PING_BACK_BACK& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_PING_BACK_BACK* other);
  void UnsafeMergeFrom(const CS_PING_BACK_BACK& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clienttime = 1;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClienttimeFieldNumber = 1;
  ::google::protobuf::uint64 clienttime() const;
  void set_clienttime(::google::protobuf::uint64 value);

  // required uint64 servertime = 2;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CS_PING_BACK_BACK)
 private:
  inline void set_has_clienttime();
  inline void clear_has_clienttime();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 clienttime_;
  ::google::protobuf::uint64 servertime_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_PING_BACK_BACK> CS_PING_BACK_BACK_default_instance_;

// -------------------------------------------------------------------

class ConnectServerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectServerRequest) */ {
 public:
  ConnectServerRequest();
  virtual ~ConnectServerRequest();

  ConnectServerRequest(const ConnectServerRequest& from);

  inline ConnectServerRequest& operator=(const ConnectServerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectServerRequest& default_instance();

  static const ConnectServerRequest* internal_default_instance();

  void Swap(ConnectServerRequest* other);

  // implements Message ----------------------------------------------

  inline ConnectServerRequest* New() const { return New(NULL); }

  ConnectServerRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectServerRequest& from);
  void MergeFrom(const ConnectServerRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectServerRequest* other);
  void UnsafeMergeFrom(const ConnectServerRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ConnectServerRequest_RequestType RequestType;
  static const RequestType NEW_CONNECTION =
    ConnectServerRequest_RequestType_NEW_CONNECTION;
  static const RequestType RE_CONNECTION =
    ConnectServerRequest_RequestType_RE_CONNECTION;
  static inline bool RequestType_IsValid(int value) {
    return ConnectServerRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    ConnectServerRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    ConnectServerRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    ConnectServerRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return ConnectServerRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return ConnectServerRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return ConnectServerRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ConnectServerRequest.RequestType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ConnectServerRequest_RequestType type() const;
  void set_type(::ConnectServerRequest_RequestType value);

  // required bytes deviceid = 2;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  void set_deviceid(const char* value);
  void set_deviceid(const void* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional bytes entityid = 3;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 3;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // optional bytes authmsg = 4;
  bool has_authmsg() const;
  void clear_authmsg();
  static const int kAuthmsgFieldNumber = 4;
  const ::std::string& authmsg() const;
  void set_authmsg(const ::std::string& value);
  void set_authmsg(const char* value);
  void set_authmsg(const void* value, size_t size);
  ::std::string* mutable_authmsg();
  ::std::string* release_authmsg();
  void set_allocated_authmsg(::std::string* authmsg);

  // @@protoc_insertion_point(class_scope:ConnectServerRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_authmsg();
  inline void clear_has_authmsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  ::google::protobuf::internal::ArenaStringPtr authmsg_;
  int type_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConnectServerRequest> ConnectServerRequest_default_instance_;

// -------------------------------------------------------------------

class ConnectServerReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectServerReply) */ {
 public:
  ConnectServerReply();
  virtual ~ConnectServerReply();

  ConnectServerReply(const ConnectServerReply& from);

  inline ConnectServerReply& operator=(const ConnectServerReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectServerReply& default_instance();

  static const ConnectServerReply* internal_default_instance();

  void Swap(ConnectServerReply* other);

  // implements Message ----------------------------------------------

  inline ConnectServerReply* New() const { return New(NULL); }

  ConnectServerReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectServerReply& from);
  void MergeFrom(const ConnectServerReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectServerReply* other);
  void UnsafeMergeFrom(const ConnectServerReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ConnectServerReply_ReplyType ReplyType;
  static const ReplyType BUSY =
    ConnectServerReply_ReplyType_BUSY;
  static const ReplyType CONNECTED =
    ConnectServerReply_ReplyType_CONNECTED;
  static const ReplyType RECONNECT_SUCCEEDED =
    ConnectServerReply_ReplyType_RECONNECT_SUCCEEDED;
  static const ReplyType RECONNECT_FAILED =
    ConnectServerReply_ReplyType_RECONNECT_FAILED;
  static const ReplyType FORBIDDEN =
    ConnectServerReply_ReplyType_FORBIDDEN;
  static const ReplyType MAX_CONNECTION =
    ConnectServerReply_ReplyType_MAX_CONNECTION;
  static inline bool ReplyType_IsValid(int value) {
    return ConnectServerReply_ReplyType_IsValid(value);
  }
  static const ReplyType ReplyType_MIN =
    ConnectServerReply_ReplyType_ReplyType_MIN;
  static const ReplyType ReplyType_MAX =
    ConnectServerReply_ReplyType_ReplyType_MAX;
  static const int ReplyType_ARRAYSIZE =
    ConnectServerReply_ReplyType_ReplyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReplyType_descriptor() {
    return ConnectServerReply_ReplyType_descriptor();
  }
  static inline const ::std::string& ReplyType_Name(ReplyType value) {
    return ConnectServerReply_ReplyType_Name(value);
  }
  static inline bool ReplyType_Parse(const ::std::string& name,
      ReplyType* value) {
    return ConnectServerReply_ReplyType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ConnectServerReply.ReplyType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ConnectServerReply_ReplyType type() const;
  void set_type(::ConnectServerReply_ReplyType value);

  // optional bytes extramsg = 2;
  bool has_extramsg() const;
  void clear_extramsg();
  static const int kExtramsgFieldNumber = 2;
  const ::std::string& extramsg() const;
  void set_extramsg(const ::std::string& value);
  void set_extramsg(const char* value);
  void set_extramsg(const void* value, size_t size);
  ::std::string* mutable_extramsg();
  ::std::string* release_extramsg();
  void set_allocated_extramsg(::std::string* extramsg);

  // @@protoc_insertion_point(class_scope:ConnectServerReply)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_extramsg();
  inline void clear_has_extramsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr extramsg_;
  int type_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConnectServerReply> ConnectServerReply_default_instance_;

// -------------------------------------------------------------------

class CS_RUN_STATE_CHANGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_RUN_STATE_CHANGE) */ {
 public:
  CS_RUN_STATE_CHANGE();
  virtual ~CS_RUN_STATE_CHANGE();

  CS_RUN_STATE_CHANGE(const CS_RUN_STATE_CHANGE& from);

  inline CS_RUN_STATE_CHANGE& operator=(const CS_RUN_STATE_CHANGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RUN_STATE_CHANGE& default_instance();

  static const CS_RUN_STATE_CHANGE* internal_default_instance();

  void Swap(CS_RUN_STATE_CHANGE* other);

  // implements Message ----------------------------------------------

  inline CS_RUN_STATE_CHANGE* New() const { return New(NULL); }

  CS_RUN_STATE_CHANGE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_RUN_STATE_CHANGE& from);
  void MergeFrom(const CS_RUN_STATE_CHANGE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_RUN_STATE_CHANGE* other);
  void UnsafeMergeFrom(const CS_RUN_STATE_CHANGE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required bool isrunning = 2;
  bool has_isrunning() const;
  void clear_isrunning();
  static const int kIsrunningFieldNumber = 2;
  bool isrunning() const;
  void set_isrunning(bool value);

  // @@protoc_insertion_point(class_scope:CS_RUN_STATE_CHANGE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_isrunning();
  inline void clear_has_isrunning();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  bool isrunning_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_RUN_STATE_CHANGE> CS_RUN_STATE_CHANGE_default_instance_;

// -------------------------------------------------------------------

class CS_ROTATE_CHANGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ROTATE_CHANGE) */ {
 public:
  CS_ROTATE_CHANGE();
  virtual ~CS_ROTATE_CHANGE();

  CS_ROTATE_CHANGE(const CS_ROTATE_CHANGE& from);

  inline CS_ROTATE_CHANGE& operator=(const CS_ROTATE_CHANGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ROTATE_CHANGE& default_instance();

  static const CS_ROTATE_CHANGE* internal_default_instance();

  void Swap(CS_ROTATE_CHANGE* other);

  // implements Message ----------------------------------------------

  inline CS_ROTATE_CHANGE* New() const { return New(NULL); }

  CS_ROTATE_CHANGE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_ROTATE_CHANGE& from);
  void MergeFrom(const CS_ROTATE_CHANGE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_ROTATE_CHANGE* other);
  void UnsafeMergeFrom(const CS_ROTATE_CHANGE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float rotationY = 2;
  bool has_rotationy() const;
  void clear_rotationy();
  static const int kRotationYFieldNumber = 2;
  float rotationy() const;
  void set_rotationy(float value);

  // @@protoc_insertion_point(class_scope:CS_ROTATE_CHANGE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_rotationy();
  inline void clear_has_rotationy();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float rotationy_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_ROTATE_CHANGE> CS_ROTATE_CHANGE_default_instance_;

// -------------------------------------------------------------------

class SC_RUN_STATE_CHANGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RUN_STATE_CHANGE) */ {
 public:
  SC_RUN_STATE_CHANGE();
  virtual ~SC_RUN_STATE_CHANGE();

  SC_RUN_STATE_CHANGE(const SC_RUN_STATE_CHANGE& from);

  inline SC_RUN_STATE_CHANGE& operator=(const SC_RUN_STATE_CHANGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RUN_STATE_CHANGE& default_instance();

  static const SC_RUN_STATE_CHANGE* internal_default_instance();

  void Swap(SC_RUN_STATE_CHANGE* other);

  // implements Message ----------------------------------------------

  inline SC_RUN_STATE_CHANGE* New() const { return New(NULL); }

  SC_RUN_STATE_CHANGE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_RUN_STATE_CHANGE& from);
  void MergeFrom(const SC_RUN_STATE_CHANGE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_RUN_STATE_CHANGE* other);
  void UnsafeMergeFrom(const SC_RUN_STATE_CHANGE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required bool isrunning = 2;
  bool has_isrunning() const;
  void clear_isrunning();
  static const int kIsrunningFieldNumber = 2;
  bool isrunning() const;
  void set_isrunning(bool value);

  // @@protoc_insertion_point(class_scope:SC_RUN_STATE_CHANGE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_isrunning();
  inline void clear_has_isrunning();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  bool isrunning_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_RUN_STATE_CHANGE> SC_RUN_STATE_CHANGE_default_instance_;

// -------------------------------------------------------------------

class SC_ROTATE_CHANGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ROTATE_CHANGE) */ {
 public:
  SC_ROTATE_CHANGE();
  virtual ~SC_ROTATE_CHANGE();

  SC_ROTATE_CHANGE(const SC_ROTATE_CHANGE& from);

  inline SC_ROTATE_CHANGE& operator=(const SC_ROTATE_CHANGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ROTATE_CHANGE& default_instance();

  static const SC_ROTATE_CHANGE* internal_default_instance();

  void Swap(SC_ROTATE_CHANGE* other);

  // implements Message ----------------------------------------------

  inline SC_ROTATE_CHANGE* New() const { return New(NULL); }

  SC_ROTATE_CHANGE* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_ROTATE_CHANGE& from);
  void MergeFrom(const SC_ROTATE_CHANGE& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_ROTATE_CHANGE* other);
  void UnsafeMergeFrom(const SC_ROTATE_CHANGE& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes entityid = 1;
  bool has_entityid() const;
  void clear_entityid();
  static const int kEntityidFieldNumber = 1;
  const ::std::string& entityid() const;
  void set_entityid(const ::std::string& value);
  void set_entityid(const char* value);
  void set_entityid(const void* value, size_t size);
  ::std::string* mutable_entityid();
  ::std::string* release_entityid();
  void set_allocated_entityid(::std::string* entityid);

  // required float rotationY = 2;
  bool has_rotationy() const;
  void clear_rotationy();
  static const int kRotationYFieldNumber = 2;
  float rotationy() const;
  void set_rotationy(float value);

  // @@protoc_insertion_point(class_scope:SC_ROTATE_CHANGE)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_rotationy();
  inline void clear_has_rotationy();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entityid_;
  float rotationy_;
  friend void  protobuf_InitDefaults_LuaMessage_2eproto_impl();
  friend void  protobuf_AddDesc_LuaMessage_2eproto_impl();
  friend void protobuf_AssignDesc_LuaMessage_2eproto();
  friend void protobuf_ShutdownFile_LuaMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_ROTATE_CHANGE> SC_ROTATE_CHANGE_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Lua_RunRequest

// required uint32 opcode = 1;
inline bool CS_Lua_RunRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_Lua_RunRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_Lua_RunRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_Lua_RunRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 CS_Lua_RunRequest::opcode() const {
  // @@protoc_insertion_point(field_get:CS_Lua_RunRequest.opcode)
  return opcode_;
}
inline void CS_Lua_RunRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:CS_Lua_RunRequest.opcode)
}

// optional bytes parameters = 2;
inline bool CS_Lua_RunRequest::has_parameters() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_Lua_RunRequest::set_has_parameters() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_Lua_RunRequest::clear_has_parameters() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_Lua_RunRequest::clear_parameters() {
  parameters_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parameters();
}
inline const ::std::string& CS_Lua_RunRequest::parameters() const {
  // @@protoc_insertion_point(field_get:CS_Lua_RunRequest.parameters)
  return parameters_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_Lua_RunRequest::set_parameters(const ::std::string& value) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_Lua_RunRequest.parameters)
}
inline void CS_Lua_RunRequest::set_parameters(const char* value) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_Lua_RunRequest.parameters)
}
inline void CS_Lua_RunRequest::set_parameters(const void* value, size_t size) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_Lua_RunRequest.parameters)
}
inline ::std::string* CS_Lua_RunRequest::mutable_parameters() {
  set_has_parameters();
  // @@protoc_insertion_point(field_mutable:CS_Lua_RunRequest.parameters)
  return parameters_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_Lua_RunRequest::release_parameters() {
  // @@protoc_insertion_point(field_release:CS_Lua_RunRequest.parameters)
  clear_has_parameters();
  return parameters_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_Lua_RunRequest::set_allocated_parameters(::std::string* parameters) {
  if (parameters != NULL) {
    set_has_parameters();
  } else {
    clear_has_parameters();
  }
  parameters_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameters);
  // @@protoc_insertion_point(field_set_allocated:CS_Lua_RunRequest.parameters)
}

inline const CS_Lua_RunRequest* CS_Lua_RunRequest::internal_default_instance() {
  return &CS_Lua_RunRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_Lua_RunRequest

// required uint32 opcode = 1;
inline bool SC_Lua_RunRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Lua_RunRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Lua_RunRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Lua_RunRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 SC_Lua_RunRequest::opcode() const {
  // @@protoc_insertion_point(field_get:SC_Lua_RunRequest.opcode)
  return opcode_;
}
inline void SC_Lua_RunRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:SC_Lua_RunRequest.opcode)
}

// optional bytes parameters = 2;
inline bool SC_Lua_RunRequest::has_parameters() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_Lua_RunRequest::set_has_parameters() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_Lua_RunRequest::clear_has_parameters() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_Lua_RunRequest::clear_parameters() {
  parameters_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parameters();
}
inline const ::std::string& SC_Lua_RunRequest::parameters() const {
  // @@protoc_insertion_point(field_get:SC_Lua_RunRequest.parameters)
  return parameters_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_Lua_RunRequest::set_parameters(const ::std::string& value) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_Lua_RunRequest.parameters)
}
inline void SC_Lua_RunRequest::set_parameters(const char* value) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_Lua_RunRequest.parameters)
}
inline void SC_Lua_RunRequest::set_parameters(const void* value, size_t size) {
  set_has_parameters();
  parameters_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_Lua_RunRequest.parameters)
}
inline ::std::string* SC_Lua_RunRequest::mutable_parameters() {
  set_has_parameters();
  // @@protoc_insertion_point(field_mutable:SC_Lua_RunRequest.parameters)
  return parameters_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_Lua_RunRequest::release_parameters() {
  // @@protoc_insertion_point(field_release:SC_Lua_RunRequest.parameters)
  clear_has_parameters();
  return parameters_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_Lua_RunRequest::set_allocated_parameters(::std::string* parameters) {
  if (parameters != NULL) {
    set_has_parameters();
  } else {
    clear_has_parameters();
  }
  parameters_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameters);
  // @@protoc_insertion_point(field_set_allocated:SC_Lua_RunRequest.parameters)
}

inline const SC_Lua_RunRequest* SC_Lua_RunRequest::internal_default_instance() {
  return &SC_Lua_RunRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Position

// required bytes entityid = 1;
inline bool Position::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& Position::entityid() const {
  // @@protoc_insertion_point(field_get:Position.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Position.entityid)
}
inline void Position::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Position.entityid)
}
inline void Position::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Position.entityid)
}
inline ::std::string* Position::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:Position.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position::release_entityid() {
  // @@protoc_insertion_point(field_release:Position.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:Position.entityid)
}

// required float DestX = 2;
inline bool Position::has_destx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_destx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_destx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_destx() {
  destx_ = 0;
  clear_has_destx();
}
inline float Position::destx() const {
  // @@protoc_insertion_point(field_get:Position.DestX)
  return destx_;
}
inline void Position::set_destx(float value) {
  set_has_destx();
  destx_ = value;
  // @@protoc_insertion_point(field_set:Position.DestX)
}

// required float DestY = 3;
inline bool Position::has_desty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_desty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_desty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_desty() {
  desty_ = 0;
  clear_has_desty();
}
inline float Position::desty() const {
  // @@protoc_insertion_point(field_get:Position.DestY)
  return desty_;
}
inline void Position::set_desty(float value) {
  set_has_desty();
  desty_ = value;
  // @@protoc_insertion_point(field_set:Position.DestY)
}

// required float DestZ = 4;
inline bool Position::has_destz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Position::set_has_destz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Position::clear_has_destz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Position::clear_destz() {
  destz_ = 0;
  clear_has_destz();
}
inline float Position::destz() const {
  // @@protoc_insertion_point(field_get:Position.DestZ)
  return destz_;
}
inline void Position::set_destz(float value) {
  set_has_destz();
  destz_ = value;
  // @@protoc_insertion_point(field_set:Position.DestZ)
}

// required float Orientation = 5;
inline bool Position::has_orientation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Position::set_has_orientation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Position::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Position::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
inline float Position::orientation() const {
  // @@protoc_insertion_point(field_get:Position.Orientation)
  return orientation_;
}
inline void Position::set_orientation(float value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:Position.Orientation)
}

// required float Speed = 6;
inline bool Position::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Position::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Position::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Position::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float Position::speed() const {
  // @@protoc_insertion_point(field_get:Position.Speed)
  return speed_;
}
inline void Position::set_speed(float value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:Position.Speed)
}

inline const Position* Position::internal_default_instance() {
  return &Position_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_CLIENT_MOVE

// required .Position MyPostion = 1;
inline bool CS_CLIENT_MOVE::has_mypostion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_CLIENT_MOVE::set_has_mypostion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_CLIENT_MOVE::clear_has_mypostion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_CLIENT_MOVE::clear_mypostion() {
  if (mypostion_ != NULL) mypostion_->::Position::Clear();
  clear_has_mypostion();
}
inline const ::Position& CS_CLIENT_MOVE::mypostion() const {
  // @@protoc_insertion_point(field_get:CS_CLIENT_MOVE.MyPostion)
  return mypostion_ != NULL ? *mypostion_
                         : *::Position::internal_default_instance();
}
inline ::Position* CS_CLIENT_MOVE::mutable_mypostion() {
  set_has_mypostion();
  if (mypostion_ == NULL) {
    mypostion_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:CS_CLIENT_MOVE.MyPostion)
  return mypostion_;
}
inline ::Position* CS_CLIENT_MOVE::release_mypostion() {
  // @@protoc_insertion_point(field_release:CS_CLIENT_MOVE.MyPostion)
  clear_has_mypostion();
  ::Position* temp = mypostion_;
  mypostion_ = NULL;
  return temp;
}
inline void CS_CLIENT_MOVE::set_allocated_mypostion(::Position* mypostion) {
  delete mypostion_;
  mypostion_ = mypostion;
  if (mypostion) {
    set_has_mypostion();
  } else {
    clear_has_mypostion();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_CLIENT_MOVE.MyPostion)
}

// required uint64 clienttime = 2;
inline bool CS_CLIENT_MOVE::has_clienttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_CLIENT_MOVE::set_has_clienttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_CLIENT_MOVE::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_CLIENT_MOVE::clear_clienttime() {
  clienttime_ = GOOGLE_ULONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::uint64 CS_CLIENT_MOVE::clienttime() const {
  // @@protoc_insertion_point(field_get:CS_CLIENT_MOVE.clienttime)
  return clienttime_;
}
inline void CS_CLIENT_MOVE::set_clienttime(::google::protobuf::uint64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:CS_CLIENT_MOVE.clienttime)
}

// required uint32 SceneID = 5;
inline bool CS_CLIENT_MOVE::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_CLIENT_MOVE::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_CLIENT_MOVE::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_CLIENT_MOVE::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 CS_CLIENT_MOVE::sceneid() const {
  // @@protoc_insertion_point(field_get:CS_CLIENT_MOVE.SceneID)
  return sceneid_;
}
inline void CS_CLIENT_MOVE::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:CS_CLIENT_MOVE.SceneID)
}

inline const CS_CLIENT_MOVE* CS_CLIENT_MOVE::internal_default_instance() {
  return &CS_CLIENT_MOVE_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_MOVE_SYNC

// required .Position SyncPostion = 1;
inline bool SC_MOVE_SYNC::has_syncpostion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_MOVE_SYNC::set_has_syncpostion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_MOVE_SYNC::clear_has_syncpostion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_MOVE_SYNC::clear_syncpostion() {
  if (syncpostion_ != NULL) syncpostion_->::Position::Clear();
  clear_has_syncpostion();
}
inline const ::Position& SC_MOVE_SYNC::syncpostion() const {
  // @@protoc_insertion_point(field_get:SC_MOVE_SYNC.SyncPostion)
  return syncpostion_ != NULL ? *syncpostion_
                         : *::Position::internal_default_instance();
}
inline ::Position* SC_MOVE_SYNC::mutable_syncpostion() {
  set_has_syncpostion();
  if (syncpostion_ == NULL) {
    syncpostion_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:SC_MOVE_SYNC.SyncPostion)
  return syncpostion_;
}
inline ::Position* SC_MOVE_SYNC::release_syncpostion() {
  // @@protoc_insertion_point(field_release:SC_MOVE_SYNC.SyncPostion)
  clear_has_syncpostion();
  ::Position* temp = syncpostion_;
  syncpostion_ = NULL;
  return temp;
}
inline void SC_MOVE_SYNC::set_allocated_syncpostion(::Position* syncpostion) {
  delete syncpostion_;
  syncpostion_ = syncpostion;
  if (syncpostion) {
    set_has_syncpostion();
  } else {
    clear_has_syncpostion();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_MOVE_SYNC.SyncPostion)
}

// required uint64 servertime = 2;
inline bool SC_MOVE_SYNC::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_MOVE_SYNC::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_MOVE_SYNC::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_MOVE_SYNC::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::uint64 SC_MOVE_SYNC::servertime() const {
  // @@protoc_insertion_point(field_get:SC_MOVE_SYNC.servertime)
  return servertime_;
}
inline void SC_MOVE_SYNC::set_servertime(::google::protobuf::uint64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:SC_MOVE_SYNC.servertime)
}

// required uint32 SceneID = 5;
inline bool SC_MOVE_SYNC::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_MOVE_SYNC::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_MOVE_SYNC::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_MOVE_SYNC::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_MOVE_SYNC::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_MOVE_SYNC.SceneID)
  return sceneid_;
}
inline void SC_MOVE_SYNC::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_MOVE_SYNC.SceneID)
}

inline const SC_MOVE_SYNC* SC_MOVE_SYNC::internal_default_instance() {
  return &SC_MOVE_SYNC_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_STOP_MOVE

// required .Position MyPostion = 1;
inline bool CS_STOP_MOVE::has_mypostion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_STOP_MOVE::set_has_mypostion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_STOP_MOVE::clear_has_mypostion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_STOP_MOVE::clear_mypostion() {
  if (mypostion_ != NULL) mypostion_->::Position::Clear();
  clear_has_mypostion();
}
inline const ::Position& CS_STOP_MOVE::mypostion() const {
  // @@protoc_insertion_point(field_get:CS_STOP_MOVE.MyPostion)
  return mypostion_ != NULL ? *mypostion_
                         : *::Position::internal_default_instance();
}
inline ::Position* CS_STOP_MOVE::mutable_mypostion() {
  set_has_mypostion();
  if (mypostion_ == NULL) {
    mypostion_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:CS_STOP_MOVE.MyPostion)
  return mypostion_;
}
inline ::Position* CS_STOP_MOVE::release_mypostion() {
  // @@protoc_insertion_point(field_release:CS_STOP_MOVE.MyPostion)
  clear_has_mypostion();
  ::Position* temp = mypostion_;
  mypostion_ = NULL;
  return temp;
}
inline void CS_STOP_MOVE::set_allocated_mypostion(::Position* mypostion) {
  delete mypostion_;
  mypostion_ = mypostion;
  if (mypostion) {
    set_has_mypostion();
  } else {
    clear_has_mypostion();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_STOP_MOVE.MyPostion)
}

// required uint64 clienttime = 2;
inline bool CS_STOP_MOVE::has_clienttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_STOP_MOVE::set_has_clienttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_STOP_MOVE::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_STOP_MOVE::clear_clienttime() {
  clienttime_ = GOOGLE_ULONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::uint64 CS_STOP_MOVE::clienttime() const {
  // @@protoc_insertion_point(field_get:CS_STOP_MOVE.clienttime)
  return clienttime_;
}
inline void CS_STOP_MOVE::set_clienttime(::google::protobuf::uint64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:CS_STOP_MOVE.clienttime)
}

// required uint32 SceneID = 3;
inline bool CS_STOP_MOVE::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_STOP_MOVE::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_STOP_MOVE::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_STOP_MOVE::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 CS_STOP_MOVE::sceneid() const {
  // @@protoc_insertion_point(field_get:CS_STOP_MOVE.SceneID)
  return sceneid_;
}
inline void CS_STOP_MOVE::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:CS_STOP_MOVE.SceneID)
}

inline const CS_STOP_MOVE* CS_STOP_MOVE::internal_default_instance() {
  return &CS_STOP_MOVE_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_STOP_MOVE_SYNC

// repeated .Position SyncPostion = 1;
inline int SC_STOP_MOVE_SYNC::syncpostion_size() const {
  return syncpostion_.size();
}
inline void SC_STOP_MOVE_SYNC::clear_syncpostion() {
  syncpostion_.Clear();
}
inline const ::Position& SC_STOP_MOVE_SYNC::syncpostion(int index) const {
  // @@protoc_insertion_point(field_get:SC_STOP_MOVE_SYNC.SyncPostion)
  return syncpostion_.Get(index);
}
inline ::Position* SC_STOP_MOVE_SYNC::mutable_syncpostion(int index) {
  // @@protoc_insertion_point(field_mutable:SC_STOP_MOVE_SYNC.SyncPostion)
  return syncpostion_.Mutable(index);
}
inline ::Position* SC_STOP_MOVE_SYNC::add_syncpostion() {
  // @@protoc_insertion_point(field_add:SC_STOP_MOVE_SYNC.SyncPostion)
  return syncpostion_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Position >*
SC_STOP_MOVE_SYNC::mutable_syncpostion() {
  // @@protoc_insertion_point(field_mutable_list:SC_STOP_MOVE_SYNC.SyncPostion)
  return &syncpostion_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Position >&
SC_STOP_MOVE_SYNC::syncpostion() const {
  // @@protoc_insertion_point(field_list:SC_STOP_MOVE_SYNC.SyncPostion)
  return syncpostion_;
}

// required uint64 servertime = 2;
inline bool SC_STOP_MOVE_SYNC::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_STOP_MOVE_SYNC::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_STOP_MOVE_SYNC::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_STOP_MOVE_SYNC::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::uint64 SC_STOP_MOVE_SYNC::servertime() const {
  // @@protoc_insertion_point(field_get:SC_STOP_MOVE_SYNC.servertime)
  return servertime_;
}
inline void SC_STOP_MOVE_SYNC::set_servertime(::google::protobuf::uint64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:SC_STOP_MOVE_SYNC.servertime)
}

// required uint32 SceneID = 3;
inline bool SC_STOP_MOVE_SYNC::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_STOP_MOVE_SYNC::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_STOP_MOVE_SYNC::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_STOP_MOVE_SYNC::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_STOP_MOVE_SYNC::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_STOP_MOVE_SYNC.SceneID)
  return sceneid_;
}
inline void SC_STOP_MOVE_SYNC::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_STOP_MOVE_SYNC.SceneID)
}

inline const SC_STOP_MOVE_SYNC* SC_STOP_MOVE_SYNC::internal_default_instance() {
  return &SC_STOP_MOVE_SYNC_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_FORCE_MOVE

// required bytes entityid = 1;
inline bool CS_FORCE_MOVE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_FORCE_MOVE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_FORCE_MOVE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_FORCE_MOVE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& CS_FORCE_MOVE::entityid() const {
  // @@protoc_insertion_point(field_get:CS_FORCE_MOVE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_FORCE_MOVE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_FORCE_MOVE.entityid)
}
inline void CS_FORCE_MOVE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_FORCE_MOVE.entityid)
}
inline void CS_FORCE_MOVE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_FORCE_MOVE.entityid)
}
inline ::std::string* CS_FORCE_MOVE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:CS_FORCE_MOVE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_FORCE_MOVE::release_entityid() {
  // @@protoc_insertion_point(field_release:CS_FORCE_MOVE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_FORCE_MOVE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:CS_FORCE_MOVE.entityid)
}

// required float DestX = 2;
inline bool CS_FORCE_MOVE::has_destx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_FORCE_MOVE::set_has_destx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_FORCE_MOVE::clear_has_destx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_FORCE_MOVE::clear_destx() {
  destx_ = 0;
  clear_has_destx();
}
inline float CS_FORCE_MOVE::destx() const {
  // @@protoc_insertion_point(field_get:CS_FORCE_MOVE.DestX)
  return destx_;
}
inline void CS_FORCE_MOVE::set_destx(float value) {
  set_has_destx();
  destx_ = value;
  // @@protoc_insertion_point(field_set:CS_FORCE_MOVE.DestX)
}

// required float DestY = 3;
inline bool CS_FORCE_MOVE::has_desty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_FORCE_MOVE::set_has_desty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_FORCE_MOVE::clear_has_desty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_FORCE_MOVE::clear_desty() {
  desty_ = 0;
  clear_has_desty();
}
inline float CS_FORCE_MOVE::desty() const {
  // @@protoc_insertion_point(field_get:CS_FORCE_MOVE.DestY)
  return desty_;
}
inline void CS_FORCE_MOVE::set_desty(float value) {
  set_has_desty();
  desty_ = value;
  // @@protoc_insertion_point(field_set:CS_FORCE_MOVE.DestY)
}

// required float DestZ = 4;
inline bool CS_FORCE_MOVE::has_destz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CS_FORCE_MOVE::set_has_destz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CS_FORCE_MOVE::clear_has_destz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CS_FORCE_MOVE::clear_destz() {
  destz_ = 0;
  clear_has_destz();
}
inline float CS_FORCE_MOVE::destz() const {
  // @@protoc_insertion_point(field_get:CS_FORCE_MOVE.DestZ)
  return destz_;
}
inline void CS_FORCE_MOVE::set_destz(float value) {
  set_has_destz();
  destz_ = value;
  // @@protoc_insertion_point(field_set:CS_FORCE_MOVE.DestZ)
}

// required uint32 SceneID = 5;
inline bool CS_FORCE_MOVE::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CS_FORCE_MOVE::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CS_FORCE_MOVE::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CS_FORCE_MOVE::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 CS_FORCE_MOVE::sceneid() const {
  // @@protoc_insertion_point(field_get:CS_FORCE_MOVE.SceneID)
  return sceneid_;
}
inline void CS_FORCE_MOVE::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:CS_FORCE_MOVE.SceneID)
}

inline const CS_FORCE_MOVE* CS_FORCE_MOVE::internal_default_instance() {
  return &CS_FORCE_MOVE_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_FORCE_MOVE

// required bytes entityid = 1;
inline bool SC_FORCE_MOVE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_FORCE_MOVE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_FORCE_MOVE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_FORCE_MOVE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& SC_FORCE_MOVE::entityid() const {
  // @@protoc_insertion_point(field_get:SC_FORCE_MOVE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_FORCE_MOVE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_FORCE_MOVE.entityid)
}
inline void SC_FORCE_MOVE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_FORCE_MOVE.entityid)
}
inline void SC_FORCE_MOVE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_FORCE_MOVE.entityid)
}
inline ::std::string* SC_FORCE_MOVE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_FORCE_MOVE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_FORCE_MOVE::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_FORCE_MOVE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_FORCE_MOVE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_FORCE_MOVE.entityid)
}

// required float DestX = 2;
inline bool SC_FORCE_MOVE::has_destx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_FORCE_MOVE::set_has_destx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_FORCE_MOVE::clear_has_destx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_FORCE_MOVE::clear_destx() {
  destx_ = 0;
  clear_has_destx();
}
inline float SC_FORCE_MOVE::destx() const {
  // @@protoc_insertion_point(field_get:SC_FORCE_MOVE.DestX)
  return destx_;
}
inline void SC_FORCE_MOVE::set_destx(float value) {
  set_has_destx();
  destx_ = value;
  // @@protoc_insertion_point(field_set:SC_FORCE_MOVE.DestX)
}

// required float DestY = 3;
inline bool SC_FORCE_MOVE::has_desty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_FORCE_MOVE::set_has_desty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_FORCE_MOVE::clear_has_desty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_FORCE_MOVE::clear_desty() {
  desty_ = 0;
  clear_has_desty();
}
inline float SC_FORCE_MOVE::desty() const {
  // @@protoc_insertion_point(field_get:SC_FORCE_MOVE.DestY)
  return desty_;
}
inline void SC_FORCE_MOVE::set_desty(float value) {
  set_has_desty();
  desty_ = value;
  // @@protoc_insertion_point(field_set:SC_FORCE_MOVE.DestY)
}

// required float DestZ = 4;
inline bool SC_FORCE_MOVE::has_destz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_FORCE_MOVE::set_has_destz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_FORCE_MOVE::clear_has_destz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_FORCE_MOVE::clear_destz() {
  destz_ = 0;
  clear_has_destz();
}
inline float SC_FORCE_MOVE::destz() const {
  // @@protoc_insertion_point(field_get:SC_FORCE_MOVE.DestZ)
  return destz_;
}
inline void SC_FORCE_MOVE::set_destz(float value) {
  set_has_destz();
  destz_ = value;
  // @@protoc_insertion_point(field_set:SC_FORCE_MOVE.DestZ)
}

// required uint32 SceneID = 5;
inline bool SC_FORCE_MOVE::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_FORCE_MOVE::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_FORCE_MOVE::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_FORCE_MOVE::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_FORCE_MOVE::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_FORCE_MOVE.SceneID)
  return sceneid_;
}
inline void SC_FORCE_MOVE::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_FORCE_MOVE.SceneID)
}

inline const SC_FORCE_MOVE* SC_FORCE_MOVE::internal_default_instance() {
  return &SC_FORCE_MOVE_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_TURN_DIRECTION

// required bytes entityid = 1;
inline bool CS_TURN_DIRECTION::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_TURN_DIRECTION::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_TURN_DIRECTION::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& CS_TURN_DIRECTION::entityid() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_TURN_DIRECTION::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.entityid)
}
inline void CS_TURN_DIRECTION::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_TURN_DIRECTION.entityid)
}
inline void CS_TURN_DIRECTION::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_TURN_DIRECTION.entityid)
}
inline ::std::string* CS_TURN_DIRECTION::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:CS_TURN_DIRECTION.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_TURN_DIRECTION::release_entityid() {
  // @@protoc_insertion_point(field_release:CS_TURN_DIRECTION.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_TURN_DIRECTION::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:CS_TURN_DIRECTION.entityid)
}

// required float DestX = 2;
inline bool CS_TURN_DIRECTION::has_destx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_destx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_TURN_DIRECTION::clear_has_destx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_TURN_DIRECTION::clear_destx() {
  destx_ = 0;
  clear_has_destx();
}
inline float CS_TURN_DIRECTION::destx() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.DestX)
  return destx_;
}
inline void CS_TURN_DIRECTION::set_destx(float value) {
  set_has_destx();
  destx_ = value;
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.DestX)
}

// required float DestY = 3;
inline bool CS_TURN_DIRECTION::has_desty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_desty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_TURN_DIRECTION::clear_has_desty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_TURN_DIRECTION::clear_desty() {
  desty_ = 0;
  clear_has_desty();
}
inline float CS_TURN_DIRECTION::desty() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.DestY)
  return desty_;
}
inline void CS_TURN_DIRECTION::set_desty(float value) {
  set_has_desty();
  desty_ = value;
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.DestY)
}

// required float DestZ = 4;
inline bool CS_TURN_DIRECTION::has_destz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_destz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CS_TURN_DIRECTION::clear_has_destz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CS_TURN_DIRECTION::clear_destz() {
  destz_ = 0;
  clear_has_destz();
}
inline float CS_TURN_DIRECTION::destz() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.DestZ)
  return destz_;
}
inline void CS_TURN_DIRECTION::set_destz(float value) {
  set_has_destz();
  destz_ = value;
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.DestZ)
}

// required float Direction = 5;
inline bool CS_TURN_DIRECTION::has_direction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_direction() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CS_TURN_DIRECTION::clear_has_direction() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CS_TURN_DIRECTION::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline float CS_TURN_DIRECTION::direction() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.Direction)
  return direction_;
}
inline void CS_TURN_DIRECTION::set_direction(float value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.Direction)
}

// required uint32 SceneID = 6;
inline bool CS_TURN_DIRECTION::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CS_TURN_DIRECTION::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CS_TURN_DIRECTION::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CS_TURN_DIRECTION::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 CS_TURN_DIRECTION::sceneid() const {
  // @@protoc_insertion_point(field_get:CS_TURN_DIRECTION.SceneID)
  return sceneid_;
}
inline void CS_TURN_DIRECTION::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:CS_TURN_DIRECTION.SceneID)
}

inline const CS_TURN_DIRECTION* CS_TURN_DIRECTION::internal_default_instance() {
  return &CS_TURN_DIRECTION_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_TURN_DIRECTION

// required bytes entityid = 1;
inline bool SC_TURN_DIRECTION::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_TURN_DIRECTION::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_TURN_DIRECTION::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& SC_TURN_DIRECTION::entityid() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_TURN_DIRECTION::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.entityid)
}
inline void SC_TURN_DIRECTION::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_TURN_DIRECTION.entityid)
}
inline void SC_TURN_DIRECTION::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_TURN_DIRECTION.entityid)
}
inline ::std::string* SC_TURN_DIRECTION::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_TURN_DIRECTION.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_TURN_DIRECTION::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_TURN_DIRECTION.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_TURN_DIRECTION::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_TURN_DIRECTION.entityid)
}

// required float DestX = 2;
inline bool SC_TURN_DIRECTION::has_destx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_destx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_TURN_DIRECTION::clear_has_destx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_TURN_DIRECTION::clear_destx() {
  destx_ = 0;
  clear_has_destx();
}
inline float SC_TURN_DIRECTION::destx() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.DestX)
  return destx_;
}
inline void SC_TURN_DIRECTION::set_destx(float value) {
  set_has_destx();
  destx_ = value;
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.DestX)
}

// required float DestY = 3;
inline bool SC_TURN_DIRECTION::has_desty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_desty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_TURN_DIRECTION::clear_has_desty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_TURN_DIRECTION::clear_desty() {
  desty_ = 0;
  clear_has_desty();
}
inline float SC_TURN_DIRECTION::desty() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.DestY)
  return desty_;
}
inline void SC_TURN_DIRECTION::set_desty(float value) {
  set_has_desty();
  desty_ = value;
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.DestY)
}

// required float DestZ = 4;
inline bool SC_TURN_DIRECTION::has_destz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_destz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_TURN_DIRECTION::clear_has_destz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_TURN_DIRECTION::clear_destz() {
  destz_ = 0;
  clear_has_destz();
}
inline float SC_TURN_DIRECTION::destz() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.DestZ)
  return destz_;
}
inline void SC_TURN_DIRECTION::set_destz(float value) {
  set_has_destz();
  destz_ = value;
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.DestZ)
}

// required float Direction = 5;
inline bool SC_TURN_DIRECTION::has_direction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_direction() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_TURN_DIRECTION::clear_has_direction() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_TURN_DIRECTION::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline float SC_TURN_DIRECTION::direction() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.Direction)
  return direction_;
}
inline void SC_TURN_DIRECTION::set_direction(float value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.Direction)
}

// required uint32 SceneID = 6;
inline bool SC_TURN_DIRECTION::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_TURN_DIRECTION::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_TURN_DIRECTION::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_TURN_DIRECTION::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_TURN_DIRECTION::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_TURN_DIRECTION.SceneID)
  return sceneid_;
}
inline void SC_TURN_DIRECTION::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_TURN_DIRECTION.SceneID)
}

inline const SC_TURN_DIRECTION* SC_TURN_DIRECTION::internal_default_instance() {
  return &SC_TURN_DIRECTION_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_CREATE_ENTITY_Entity

// required bytes EntityID = 1;
inline bool SC_CREATE_ENTITY_Entity::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_CREATE_ENTITY_Entity::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_CREATE_ENTITY_Entity::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_CREATE_ENTITY_Entity::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& SC_CREATE_ENTITY_Entity::entityid() const {
  // @@protoc_insertion_point(field_get:SC_CREATE_ENTITY.Entity.EntityID)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_CREATE_ENTITY_Entity::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_CREATE_ENTITY.Entity.EntityID)
}
inline void SC_CREATE_ENTITY_Entity::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_CREATE_ENTITY.Entity.EntityID)
}
inline void SC_CREATE_ENTITY_Entity::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_CREATE_ENTITY.Entity.EntityID)
}
inline ::std::string* SC_CREATE_ENTITY_Entity::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_CREATE_ENTITY.Entity.EntityID)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_CREATE_ENTITY_Entity::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_CREATE_ENTITY.Entity.EntityID)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_CREATE_ENTITY_Entity::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_CREATE_ENTITY.Entity.EntityID)
}

// required bytes EntityInfo = 2;
inline bool SC_CREATE_ENTITY_Entity::has_entityinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_CREATE_ENTITY_Entity::set_has_entityinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_CREATE_ENTITY_Entity::clear_has_entityinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_CREATE_ENTITY_Entity::clear_entityinfo() {
  entityinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityinfo();
}
inline const ::std::string& SC_CREATE_ENTITY_Entity::entityinfo() const {
  // @@protoc_insertion_point(field_get:SC_CREATE_ENTITY.Entity.EntityInfo)
  return entityinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_CREATE_ENTITY_Entity::set_entityinfo(const ::std::string& value) {
  set_has_entityinfo();
  entityinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_CREATE_ENTITY.Entity.EntityInfo)
}
inline void SC_CREATE_ENTITY_Entity::set_entityinfo(const char* value) {
  set_has_entityinfo();
  entityinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_CREATE_ENTITY.Entity.EntityInfo)
}
inline void SC_CREATE_ENTITY_Entity::set_entityinfo(const void* value, size_t size) {
  set_has_entityinfo();
  entityinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_CREATE_ENTITY.Entity.EntityInfo)
}
inline ::std::string* SC_CREATE_ENTITY_Entity::mutable_entityinfo() {
  set_has_entityinfo();
  // @@protoc_insertion_point(field_mutable:SC_CREATE_ENTITY.Entity.EntityInfo)
  return entityinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_CREATE_ENTITY_Entity::release_entityinfo() {
  // @@protoc_insertion_point(field_release:SC_CREATE_ENTITY.Entity.EntityInfo)
  clear_has_entityinfo();
  return entityinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_CREATE_ENTITY_Entity::set_allocated_entityinfo(::std::string* entityinfo) {
  if (entityinfo != NULL) {
    set_has_entityinfo();
  } else {
    clear_has_entityinfo();
  }
  entityinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityinfo);
  // @@protoc_insertion_point(field_set_allocated:SC_CREATE_ENTITY.Entity.EntityInfo)
}

// required .Position EntityPos = 3;
inline bool SC_CREATE_ENTITY_Entity::has_entitypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_CREATE_ENTITY_Entity::set_has_entitypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_CREATE_ENTITY_Entity::clear_has_entitypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_CREATE_ENTITY_Entity::clear_entitypos() {
  if (entitypos_ != NULL) entitypos_->::Position::Clear();
  clear_has_entitypos();
}
inline const ::Position& SC_CREATE_ENTITY_Entity::entitypos() const {
  // @@protoc_insertion_point(field_get:SC_CREATE_ENTITY.Entity.EntityPos)
  return entitypos_ != NULL ? *entitypos_
                         : *::Position::internal_default_instance();
}
inline ::Position* SC_CREATE_ENTITY_Entity::mutable_entitypos() {
  set_has_entitypos();
  if (entitypos_ == NULL) {
    entitypos_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:SC_CREATE_ENTITY.Entity.EntityPos)
  return entitypos_;
}
inline ::Position* SC_CREATE_ENTITY_Entity::release_entitypos() {
  // @@protoc_insertion_point(field_release:SC_CREATE_ENTITY.Entity.EntityPos)
  clear_has_entitypos();
  ::Position* temp = entitypos_;
  entitypos_ = NULL;
  return temp;
}
inline void SC_CREATE_ENTITY_Entity::set_allocated_entitypos(::Position* entitypos) {
  delete entitypos_;
  entitypos_ = entitypos;
  if (entitypos) {
    set_has_entitypos();
  } else {
    clear_has_entitypos();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_CREATE_ENTITY.Entity.EntityPos)
}

inline const SC_CREATE_ENTITY_Entity* SC_CREATE_ENTITY_Entity::internal_default_instance() {
  return &SC_CREATE_ENTITY_Entity_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_CREATE_ENTITY

// required uint32 SceneID = 1;
inline bool SC_CREATE_ENTITY::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_CREATE_ENTITY::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_CREATE_ENTITY::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_CREATE_ENTITY::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_CREATE_ENTITY::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_CREATE_ENTITY.SceneID)
  return sceneid_;
}
inline void SC_CREATE_ENTITY::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_CREATE_ENTITY.SceneID)
}

// repeated .SC_CREATE_ENTITY.Entity EntitiesCreate = 2;
inline int SC_CREATE_ENTITY::entitiescreate_size() const {
  return entitiescreate_.size();
}
inline void SC_CREATE_ENTITY::clear_entitiescreate() {
  entitiescreate_.Clear();
}
inline const ::SC_CREATE_ENTITY_Entity& SC_CREATE_ENTITY::entitiescreate(int index) const {
  // @@protoc_insertion_point(field_get:SC_CREATE_ENTITY.EntitiesCreate)
  return entitiescreate_.Get(index);
}
inline ::SC_CREATE_ENTITY_Entity* SC_CREATE_ENTITY::mutable_entitiescreate(int index) {
  // @@protoc_insertion_point(field_mutable:SC_CREATE_ENTITY.EntitiesCreate)
  return entitiescreate_.Mutable(index);
}
inline ::SC_CREATE_ENTITY_Entity* SC_CREATE_ENTITY::add_entitiescreate() {
  // @@protoc_insertion_point(field_add:SC_CREATE_ENTITY.EntitiesCreate)
  return entitiescreate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_CREATE_ENTITY_Entity >*
SC_CREATE_ENTITY::mutable_entitiescreate() {
  // @@protoc_insertion_point(field_mutable_list:SC_CREATE_ENTITY.EntitiesCreate)
  return &entitiescreate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_CREATE_ENTITY_Entity >&
SC_CREATE_ENTITY::entitiescreate() const {
  // @@protoc_insertion_point(field_list:SC_CREATE_ENTITY.EntitiesCreate)
  return entitiescreate_;
}

inline const SC_CREATE_ENTITY* SC_CREATE_ENTITY::internal_default_instance() {
  return &SC_CREATE_ENTITY_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_DESTROY_ENTITY

// required uint32 SceneID = 1;
inline bool SC_DESTROY_ENTITY::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_DESTROY_ENTITY::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_DESTROY_ENTITY::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_DESTROY_ENTITY::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 SC_DESTROY_ENTITY::sceneid() const {
  // @@protoc_insertion_point(field_get:SC_DESTROY_ENTITY.SceneID)
  return sceneid_;
}
inline void SC_DESTROY_ENTITY::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:SC_DESTROY_ENTITY.SceneID)
}

// repeated bytes EntitiesDestroy = 2;
inline int SC_DESTROY_ENTITY::entitiesdestroy_size() const {
  return entitiesdestroy_.size();
}
inline void SC_DESTROY_ENTITY::clear_entitiesdestroy() {
  entitiesdestroy_.Clear();
}
inline const ::std::string& SC_DESTROY_ENTITY::entitiesdestroy(int index) const {
  // @@protoc_insertion_point(field_get:SC_DESTROY_ENTITY.EntitiesDestroy)
  return entitiesdestroy_.Get(index);
}
inline ::std::string* SC_DESTROY_ENTITY::mutable_entitiesdestroy(int index) {
  // @@protoc_insertion_point(field_mutable:SC_DESTROY_ENTITY.EntitiesDestroy)
  return entitiesdestroy_.Mutable(index);
}
inline void SC_DESTROY_ENTITY::set_entitiesdestroy(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SC_DESTROY_ENTITY.EntitiesDestroy)
  entitiesdestroy_.Mutable(index)->assign(value);
}
inline void SC_DESTROY_ENTITY::set_entitiesdestroy(int index, const char* value) {
  entitiesdestroy_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SC_DESTROY_ENTITY.EntitiesDestroy)
}
inline void SC_DESTROY_ENTITY::set_entitiesdestroy(int index, const void* value, size_t size) {
  entitiesdestroy_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SC_DESTROY_ENTITY.EntitiesDestroy)
}
inline ::std::string* SC_DESTROY_ENTITY::add_entitiesdestroy() {
  // @@protoc_insertion_point(field_add_mutable:SC_DESTROY_ENTITY.EntitiesDestroy)
  return entitiesdestroy_.Add();
}
inline void SC_DESTROY_ENTITY::add_entitiesdestroy(const ::std::string& value) {
  entitiesdestroy_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SC_DESTROY_ENTITY.EntitiesDestroy)
}
inline void SC_DESTROY_ENTITY::add_entitiesdestroy(const char* value) {
  entitiesdestroy_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SC_DESTROY_ENTITY.EntitiesDestroy)
}
inline void SC_DESTROY_ENTITY::add_entitiesdestroy(const void* value, size_t size) {
  entitiesdestroy_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SC_DESTROY_ENTITY.EntitiesDestroy)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SC_DESTROY_ENTITY::entitiesdestroy() const {
  // @@protoc_insertion_point(field_list:SC_DESTROY_ENTITY.EntitiesDestroy)
  return entitiesdestroy_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SC_DESTROY_ENTITY::mutable_entitiesdestroy() {
  // @@protoc_insertion_point(field_mutable_list:SC_DESTROY_ENTITY.EntitiesDestroy)
  return &entitiesdestroy_;
}

inline const SC_DESTROY_ENTITY* SC_DESTROY_ENTITY::internal_default_instance() {
  return &SC_DESTROY_ENTITY_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_PING

// required uint64 clienttime = 1;
inline bool CS_PING::has_clienttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_PING::set_has_clienttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_PING::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_PING::clear_clienttime() {
  clienttime_ = GOOGLE_ULONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::uint64 CS_PING::clienttime() const {
  // @@protoc_insertion_point(field_get:CS_PING.clienttime)
  return clienttime_;
}
inline void CS_PING::set_clienttime(::google::protobuf::uint64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:CS_PING.clienttime)
}

inline const CS_PING* CS_PING::internal_default_instance() {
  return &CS_PING_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_PING_BACK

// required uint64 clienttime = 1;
inline bool SC_PING_BACK::has_clienttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_PING_BACK::set_has_clienttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_PING_BACK::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_PING_BACK::clear_clienttime() {
  clienttime_ = GOOGLE_ULONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::uint64 SC_PING_BACK::clienttime() const {
  // @@protoc_insertion_point(field_get:SC_PING_BACK.clienttime)
  return clienttime_;
}
inline void SC_PING_BACK::set_clienttime(::google::protobuf::uint64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:SC_PING_BACK.clienttime)
}

// required uint64 servertime = 2;
inline bool SC_PING_BACK::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_PING_BACK::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_PING_BACK::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_PING_BACK::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::uint64 SC_PING_BACK::servertime() const {
  // @@protoc_insertion_point(field_get:SC_PING_BACK.servertime)
  return servertime_;
}
inline void SC_PING_BACK::set_servertime(::google::protobuf::uint64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:SC_PING_BACK.servertime)
}

inline const SC_PING_BACK* SC_PING_BACK::internal_default_instance() {
  return &SC_PING_BACK_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_PING_BACK_BACK

// required uint64 clienttime = 1;
inline bool CS_PING_BACK_BACK::has_clienttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_PING_BACK_BACK::set_has_clienttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_PING_BACK_BACK::clear_has_clienttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_PING_BACK_BACK::clear_clienttime() {
  clienttime_ = GOOGLE_ULONGLONG(0);
  clear_has_clienttime();
}
inline ::google::protobuf::uint64 CS_PING_BACK_BACK::clienttime() const {
  // @@protoc_insertion_point(field_get:CS_PING_BACK_BACK.clienttime)
  return clienttime_;
}
inline void CS_PING_BACK_BACK::set_clienttime(::google::protobuf::uint64 value) {
  set_has_clienttime();
  clienttime_ = value;
  // @@protoc_insertion_point(field_set:CS_PING_BACK_BACK.clienttime)
}

// required uint64 servertime = 2;
inline bool CS_PING_BACK_BACK::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_PING_BACK_BACK::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_PING_BACK_BACK::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_PING_BACK_BACK::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::uint64 CS_PING_BACK_BACK::servertime() const {
  // @@protoc_insertion_point(field_get:CS_PING_BACK_BACK.servertime)
  return servertime_;
}
inline void CS_PING_BACK_BACK::set_servertime(::google::protobuf::uint64 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:CS_PING_BACK_BACK.servertime)
}

inline const CS_PING_BACK_BACK* CS_PING_BACK_BACK::internal_default_instance() {
  return &CS_PING_BACK_BACK_default_instance_.get();
}
// -------------------------------------------------------------------

// ConnectServerRequest

// required .ConnectServerRequest.RequestType type = 1;
inline bool ConnectServerRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectServerRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectServerRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectServerRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ConnectServerRequest_RequestType ConnectServerRequest::type() const {
  // @@protoc_insertion_point(field_get:ConnectServerRequest.type)
  return static_cast< ::ConnectServerRequest_RequestType >(type_);
}
inline void ConnectServerRequest::set_type(::ConnectServerRequest_RequestType value) {
  assert(::ConnectServerRequest_RequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ConnectServerRequest.type)
}

// required bytes deviceid = 2;
inline bool ConnectServerRequest::has_deviceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectServerRequest::set_has_deviceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectServerRequest::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectServerRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& ConnectServerRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:ConnectServerRequest.deviceid)
  return deviceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectServerRequest.deviceid)
}
inline void ConnectServerRequest::set_deviceid(const char* value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectServerRequest.deviceid)
}
inline void ConnectServerRequest::set_deviceid(const void* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectServerRequest.deviceid)
}
inline ::std::string* ConnectServerRequest::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:ConnectServerRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectServerRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:ConnectServerRequest.deviceid)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:ConnectServerRequest.deviceid)
}

// optional bytes entityid = 3;
inline bool ConnectServerRequest::has_entityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConnectServerRequest::set_has_entityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConnectServerRequest::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConnectServerRequest::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& ConnectServerRequest::entityid() const {
  // @@protoc_insertion_point(field_get:ConnectServerRequest.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectServerRequest.entityid)
}
inline void ConnectServerRequest::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectServerRequest.entityid)
}
inline void ConnectServerRequest::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectServerRequest.entityid)
}
inline ::std::string* ConnectServerRequest::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:ConnectServerRequest.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectServerRequest::release_entityid() {
  // @@protoc_insertion_point(field_release:ConnectServerRequest.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:ConnectServerRequest.entityid)
}

// optional bytes authmsg = 4;
inline bool ConnectServerRequest::has_authmsg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConnectServerRequest::set_has_authmsg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConnectServerRequest::clear_has_authmsg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConnectServerRequest::clear_authmsg() {
  authmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authmsg();
}
inline const ::std::string& ConnectServerRequest::authmsg() const {
  // @@protoc_insertion_point(field_get:ConnectServerRequest.authmsg)
  return authmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_authmsg(const ::std::string& value) {
  set_has_authmsg();
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectServerRequest.authmsg)
}
inline void ConnectServerRequest::set_authmsg(const char* value) {
  set_has_authmsg();
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectServerRequest.authmsg)
}
inline void ConnectServerRequest::set_authmsg(const void* value, size_t size) {
  set_has_authmsg();
  authmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectServerRequest.authmsg)
}
inline ::std::string* ConnectServerRequest::mutable_authmsg() {
  set_has_authmsg();
  // @@protoc_insertion_point(field_mutable:ConnectServerRequest.authmsg)
  return authmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectServerRequest::release_authmsg() {
  // @@protoc_insertion_point(field_release:ConnectServerRequest.authmsg)
  clear_has_authmsg();
  return authmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerRequest::set_allocated_authmsg(::std::string* authmsg) {
  if (authmsg != NULL) {
    set_has_authmsg();
  } else {
    clear_has_authmsg();
  }
  authmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authmsg);
  // @@protoc_insertion_point(field_set_allocated:ConnectServerRequest.authmsg)
}

inline const ConnectServerRequest* ConnectServerRequest::internal_default_instance() {
  return &ConnectServerRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ConnectServerReply

// required .ConnectServerReply.ReplyType type = 1;
inline bool ConnectServerReply::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectServerReply::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectServerReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectServerReply::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ConnectServerReply_ReplyType ConnectServerReply::type() const {
  // @@protoc_insertion_point(field_get:ConnectServerReply.type)
  return static_cast< ::ConnectServerReply_ReplyType >(type_);
}
inline void ConnectServerReply::set_type(::ConnectServerReply_ReplyType value) {
  assert(::ConnectServerReply_ReplyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ConnectServerReply.type)
}

// optional bytes extramsg = 2;
inline bool ConnectServerReply::has_extramsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectServerReply::set_has_extramsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectServerReply::clear_has_extramsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectServerReply::clear_extramsg() {
  extramsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extramsg();
}
inline const ::std::string& ConnectServerReply::extramsg() const {
  // @@protoc_insertion_point(field_get:ConnectServerReply.extramsg)
  return extramsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerReply::set_extramsg(const ::std::string& value) {
  set_has_extramsg();
  extramsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectServerReply.extramsg)
}
inline void ConnectServerReply::set_extramsg(const char* value) {
  set_has_extramsg();
  extramsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectServerReply.extramsg)
}
inline void ConnectServerReply::set_extramsg(const void* value, size_t size) {
  set_has_extramsg();
  extramsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectServerReply.extramsg)
}
inline ::std::string* ConnectServerReply::mutable_extramsg() {
  set_has_extramsg();
  // @@protoc_insertion_point(field_mutable:ConnectServerReply.extramsg)
  return extramsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectServerReply::release_extramsg() {
  // @@protoc_insertion_point(field_release:ConnectServerReply.extramsg)
  clear_has_extramsg();
  return extramsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectServerReply::set_allocated_extramsg(::std::string* extramsg) {
  if (extramsg != NULL) {
    set_has_extramsg();
  } else {
    clear_has_extramsg();
  }
  extramsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extramsg);
  // @@protoc_insertion_point(field_set_allocated:ConnectServerReply.extramsg)
}

inline const ConnectServerReply* ConnectServerReply::internal_default_instance() {
  return &ConnectServerReply_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_RUN_STATE_CHANGE

// required bytes entityid = 1;
inline bool CS_RUN_STATE_CHANGE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_RUN_STATE_CHANGE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_RUN_STATE_CHANGE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_RUN_STATE_CHANGE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& CS_RUN_STATE_CHANGE::entityid() const {
  // @@protoc_insertion_point(field_get:CS_RUN_STATE_CHANGE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_RUN_STATE_CHANGE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_RUN_STATE_CHANGE.entityid)
}
inline void CS_RUN_STATE_CHANGE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_RUN_STATE_CHANGE.entityid)
}
inline void CS_RUN_STATE_CHANGE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_RUN_STATE_CHANGE.entityid)
}
inline ::std::string* CS_RUN_STATE_CHANGE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:CS_RUN_STATE_CHANGE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_RUN_STATE_CHANGE::release_entityid() {
  // @@protoc_insertion_point(field_release:CS_RUN_STATE_CHANGE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_RUN_STATE_CHANGE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:CS_RUN_STATE_CHANGE.entityid)
}

// required bool isrunning = 2;
inline bool CS_RUN_STATE_CHANGE::has_isrunning() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_RUN_STATE_CHANGE::set_has_isrunning() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_RUN_STATE_CHANGE::clear_has_isrunning() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_RUN_STATE_CHANGE::clear_isrunning() {
  isrunning_ = false;
  clear_has_isrunning();
}
inline bool CS_RUN_STATE_CHANGE::isrunning() const {
  // @@protoc_insertion_point(field_get:CS_RUN_STATE_CHANGE.isrunning)
  return isrunning_;
}
inline void CS_RUN_STATE_CHANGE::set_isrunning(bool value) {
  set_has_isrunning();
  isrunning_ = value;
  // @@protoc_insertion_point(field_set:CS_RUN_STATE_CHANGE.isrunning)
}

inline const CS_RUN_STATE_CHANGE* CS_RUN_STATE_CHANGE::internal_default_instance() {
  return &CS_RUN_STATE_CHANGE_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_ROTATE_CHANGE

// required bytes entityid = 1;
inline bool CS_ROTATE_CHANGE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ROTATE_CHANGE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ROTATE_CHANGE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ROTATE_CHANGE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& CS_ROTATE_CHANGE::entityid() const {
  // @@protoc_insertion_point(field_get:CS_ROTATE_CHANGE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ROTATE_CHANGE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ROTATE_CHANGE.entityid)
}
inline void CS_ROTATE_CHANGE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ROTATE_CHANGE.entityid)
}
inline void CS_ROTATE_CHANGE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ROTATE_CHANGE.entityid)
}
inline ::std::string* CS_ROTATE_CHANGE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:CS_ROTATE_CHANGE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ROTATE_CHANGE::release_entityid() {
  // @@protoc_insertion_point(field_release:CS_ROTATE_CHANGE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ROTATE_CHANGE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:CS_ROTATE_CHANGE.entityid)
}

// required float rotationY = 2;
inline bool CS_ROTATE_CHANGE::has_rotationy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_ROTATE_CHANGE::set_has_rotationy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_ROTATE_CHANGE::clear_has_rotationy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_ROTATE_CHANGE::clear_rotationy() {
  rotationy_ = 0;
  clear_has_rotationy();
}
inline float CS_ROTATE_CHANGE::rotationy() const {
  // @@protoc_insertion_point(field_get:CS_ROTATE_CHANGE.rotationY)
  return rotationy_;
}
inline void CS_ROTATE_CHANGE::set_rotationy(float value) {
  set_has_rotationy();
  rotationy_ = value;
  // @@protoc_insertion_point(field_set:CS_ROTATE_CHANGE.rotationY)
}

inline const CS_ROTATE_CHANGE* CS_ROTATE_CHANGE::internal_default_instance() {
  return &CS_ROTATE_CHANGE_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_RUN_STATE_CHANGE

// required bytes entityid = 1;
inline bool SC_RUN_STATE_CHANGE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_RUN_STATE_CHANGE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_RUN_STATE_CHANGE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_RUN_STATE_CHANGE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& SC_RUN_STATE_CHANGE::entityid() const {
  // @@protoc_insertion_point(field_get:SC_RUN_STATE_CHANGE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_RUN_STATE_CHANGE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_RUN_STATE_CHANGE.entityid)
}
inline void SC_RUN_STATE_CHANGE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_RUN_STATE_CHANGE.entityid)
}
inline void SC_RUN_STATE_CHANGE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_RUN_STATE_CHANGE.entityid)
}
inline ::std::string* SC_RUN_STATE_CHANGE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_RUN_STATE_CHANGE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_RUN_STATE_CHANGE::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_RUN_STATE_CHANGE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_RUN_STATE_CHANGE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_RUN_STATE_CHANGE.entityid)
}

// required bool isrunning = 2;
inline bool SC_RUN_STATE_CHANGE::has_isrunning() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_RUN_STATE_CHANGE::set_has_isrunning() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_RUN_STATE_CHANGE::clear_has_isrunning() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_RUN_STATE_CHANGE::clear_isrunning() {
  isrunning_ = false;
  clear_has_isrunning();
}
inline bool SC_RUN_STATE_CHANGE::isrunning() const {
  // @@protoc_insertion_point(field_get:SC_RUN_STATE_CHANGE.isrunning)
  return isrunning_;
}
inline void SC_RUN_STATE_CHANGE::set_isrunning(bool value) {
  set_has_isrunning();
  isrunning_ = value;
  // @@protoc_insertion_point(field_set:SC_RUN_STATE_CHANGE.isrunning)
}

inline const SC_RUN_STATE_CHANGE* SC_RUN_STATE_CHANGE::internal_default_instance() {
  return &SC_RUN_STATE_CHANGE_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_ROTATE_CHANGE

// required bytes entityid = 1;
inline bool SC_ROTATE_CHANGE::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ROTATE_CHANGE::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ROTATE_CHANGE::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ROTATE_CHANGE::clear_entityid() {
  entityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entityid();
}
inline const ::std::string& SC_ROTATE_CHANGE::entityid() const {
  // @@protoc_insertion_point(field_get:SC_ROTATE_CHANGE.entityid)
  return entityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ROTATE_CHANGE::set_entityid(const ::std::string& value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ROTATE_CHANGE.entityid)
}
inline void SC_ROTATE_CHANGE::set_entityid(const char* value) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ROTATE_CHANGE.entityid)
}
inline void SC_ROTATE_CHANGE::set_entityid(const void* value, size_t size) {
  set_has_entityid();
  entityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ROTATE_CHANGE.entityid)
}
inline ::std::string* SC_ROTATE_CHANGE::mutable_entityid() {
  set_has_entityid();
  // @@protoc_insertion_point(field_mutable:SC_ROTATE_CHANGE.entityid)
  return entityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ROTATE_CHANGE::release_entityid() {
  // @@protoc_insertion_point(field_release:SC_ROTATE_CHANGE.entityid)
  clear_has_entityid();
  return entityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ROTATE_CHANGE::set_allocated_entityid(::std::string* entityid) {
  if (entityid != NULL) {
    set_has_entityid();
  } else {
    clear_has_entityid();
  }
  entityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entityid);
  // @@protoc_insertion_point(field_set_allocated:SC_ROTATE_CHANGE.entityid)
}

// required float rotationY = 2;
inline bool SC_ROTATE_CHANGE::has_rotationy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ROTATE_CHANGE::set_has_rotationy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ROTATE_CHANGE::clear_has_rotationy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ROTATE_CHANGE::clear_rotationy() {
  rotationy_ = 0;
  clear_has_rotationy();
}
inline float SC_ROTATE_CHANGE::rotationy() const {
  // @@protoc_insertion_point(field_get:SC_ROTATE_CHANGE.rotationY)
  return rotationy_;
}
inline void SC_ROTATE_CHANGE::set_rotationy(float value) {
  set_has_rotationy();
  rotationy_ = value;
  // @@protoc_insertion_point(field_set:SC_ROTATE_CHANGE.rotationY)
}

inline const SC_ROTATE_CHANGE* SC_ROTATE_CHANGE::internal_default_instance() {
  return &SC_ROTATE_CHANGE_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ConnectServerRequest_RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConnectServerRequest_RequestType>() {
  return ::ConnectServerRequest_RequestType_descriptor();
}
template <> struct is_proto_enum< ::ConnectServerReply_ReplyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConnectServerReply_ReplyType>() {
  return ::ConnectServerReply_ReplyType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LuaMessage_2eproto__INCLUDED
